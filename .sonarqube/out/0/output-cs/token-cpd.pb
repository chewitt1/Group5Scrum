—
oD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\ShaderPropAnimator.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class 
ShaderPropAnimator #
:$ %
MonoBehaviour& 3
{		 
private 
Renderer 

m_Renderer #
;# $
private 
Material 

m_Material #
;# $
public 
AnimationCurve 
	GlowCurve '
;' (
public 
float 
m_frame 
; 
void 
Awake 
( 
) 
{ 	

m_Renderer 
= 
GetComponent %
<% &
Renderer& .
>. /
(/ 0
)0 1
;1 2

m_Material 
= 

m_Renderer #
.# $
material$ ,
;, -
} 	
void 
Start 
( 
) 
{ 	
StartCoroutine 
( 
AnimateProperties ,
(, -
)- .
). /
;/ 0
} 	
IEnumerator   
AnimateProperties   %
(  % &
)  & '
{!! 	
float## 
	glowPower## 
;## 
m_frame$$ 
=$$ 
Random$$ 
.$$ 
Range$$ "
($$" #
$num$$# %
,$$% &
$num$$' )
)$$) *
;$$* +
while&& 
(&& 
true&& 
)&& 
{'' 
	glowPower++ 
=++ 
	GlowCurve++ %
.++% &
Evaluate++& .
(++. /
m_frame++/ 6
)++6 7
;++7 8

m_Material,, 
.,, 
SetFloat,, #
(,,# $
ShaderUtilities,,$ 3
.,,3 4
ID_GlowPower,,4 @
,,,@ A
	glowPower,,B K
),,K L
;,,L M
m_frame.. 
+=.. 
Time.. 
...  
	deltaTime..  )
*..* +
Random.., 2
...2 3
Range..3 8
(..8 9
$num..9 =
,..= >
$num..? C
)..C D
;..D E
yield// 
return// 
new//  
WaitForEndOfFrame//! 2
(//2 3
)//3 4
;//4 5
}00 
}11 	
}22 
}33 ∞
lD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\SkewTextExample.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class 
SkewTextExample  
:! "
MonoBehaviour# 0
{		 
private 
TMP_Text 
m_TextComponent (
;( )
public 
AnimationCurve 
VertexCurve )
=* +
new, /
AnimationCurve0 >
(> ?
new? B
KeyframeC K
(K L
$numL M
,M N
$numO P
)P Q
,Q R
newS V
KeyframeW _
(_ `
$num` e
,e f
$numg k
)k l
,l m
newn q
Keyframer z
(z {
$num{ 
,	 Ä
$num
Å Ç
)
Ç É
,
É Ñ
new
Ö à
Keyframe
â ë
(
ë í
$num
í ó
,
ó ò
$num
ô ù
)
ù û
,
û ü
new
† £
Keyframe
§ ¨
(
¨ ≠
$num
≠ Æ
,
Æ Ø
$num
∞ ≤
)
≤ ≥
)
≥ ¥
;
¥ µ
public 
float 

CurveScale 
=  !
$num" &
;& '
public 
float 
ShearAmount  
=! "
$num# '
;' (
void 
Awake 
( 
) 
{ 	
m_TextComponent 
= 

gameObject (
.( )
GetComponent) 5
<5 6
TMP_Text6 >
>> ?
(? @
)@ A
;A B
} 	
void 
Start 
( 
) 
{ 	
StartCoroutine 
( 
WarpText #
(# $
)$ %
)% &
;& '
} 	
private 
AnimationCurve 
CopyAnimationCurve 1
(1 2
AnimationCurve2 @
curveA F
)F G
{   	
AnimationCurve!! 
newCurve!! #
=!!$ %
new!!& )
AnimationCurve!!* 8
(!!8 9
)!!9 :
;!!: ;
newCurve## 
.## 
keys## 
=## 
curve## !
.##! "
keys##" &
;##& '
return%% 
newCurve%% 
;%% 
}&& 	
IEnumerator.. 
WarpText.. 
(.. 
).. 
{// 	
VertexCurve00 
.00 
preWrapMode00 #
=00$ %
WrapMode00& .
.00. /
Clamp00/ 4
;004 5
VertexCurve11 
.11 
postWrapMode11 $
=11% &
WrapMode11' /
.11/ 0
Clamp110 5
;115 6
Vector355 
[55 
]55 
vertices55 
;55 
	Matrix4x466 
matrix66 
;66 
m_TextComponent88 
.88 !
havePropertiesChanged88 1
=882 3
true884 8
;888 9

CurveScale99 
*=99 
$num99 
;99 
float:: 
old_CurveScale::  
=::! "

CurveScale::# -
;::- .
float;; 
old_ShearValue;;  
=;;! "
ShearAmount;;# .
;;;. /
AnimationCurve<< 
	old_curve<< $
=<<% &
CopyAnimationCurve<<' 9
(<<9 :
VertexCurve<<: E
)<<E F
;<<F G
while>> 
(>> 
true>> 
)>> 
{?? 
if@@ 
(@@ 
!@@ 
m_TextComponent@@ $
.@@$ %!
havePropertiesChanged@@% :
&&@@; =
old_CurveScale@@> L
==@@M O

CurveScale@@P Z
&&@@[ ]
	old_curve@@^ g
.@@g h
keys@@h l
[@@l m
$num@@m n
]@@n o
.@@o p
value@@p u
==@@v x
VertexCurve	@@y Ñ
.
@@Ñ Ö
keys
@@Ö â
[
@@â ä
$num
@@ä ã
]
@@ã å
.
@@å ç
value
@@ç í
&&
@@ì ï
old_ShearValue
@@ñ §
==
@@• ß
ShearAmount
@@® ≥
)
@@≥ ¥
{AA 
yieldBB 
returnBB  
nullBB! %
;BB% &
continueCC 
;CC 
}DD 
old_CurveScaleFF 
=FF  

CurveScaleFF! +
;FF+ ,
	old_curveGG 
=GG 
CopyAnimationCurveGG .
(GG. /
VertexCurveGG/ :
)GG: ;
;GG; <
old_ShearValueHH 
=HH  
ShearAmountHH! ,
;HH, -
m_TextComponentJJ 
.JJ  
ForceMeshUpdateJJ  /
(JJ/ 0
)JJ0 1
;JJ1 2
TMP_TextInfoLL 
textInfoLL %
=LL& '
m_TextComponentLL( 7
.LL7 8
textInfoLL8 @
;LL@ A
intMM 
characterCountMM "
=MM# $
textInfoMM% -
.MM- .
characterCountMM. <
;MM< =
ifPP 
(PP 
characterCountPP "
==PP# %
$numPP& '
)PP' (
continuePP) 1
;PP1 2
floatUU 

boundsMinXUU  
=UU! "
m_TextComponentUU# 2
.UU2 3
boundsUU3 9
.UU9 :
minUU: =
.UU= >
xUU> ?
;UU? @
floatVV 

boundsMaxXVV  
=VV! "
m_TextComponentVV# 2
.VV2 3
boundsVV3 9
.VV9 :
maxVV: =
.VV= >
xVV> ?
;VV? @
forZZ 
(ZZ 
intZZ 
iZZ 
=ZZ 
$numZZ 
;ZZ 
iZZ  !
<ZZ" #
characterCountZZ$ 2
;ZZ2 3
iZZ4 5
++ZZ5 7
)ZZ7 8
{[[ 
if\\ 
(\\ 
!\\ 
textInfo\\ !
.\\! "
characterInfo\\" /
[\\/ 0
i\\0 1
]\\1 2
.\\2 3
	isVisible\\3 <
)\\< =
continue]]  
;]]  !
int__ 
vertexIndex__ #
=__$ %
textInfo__& .
.__. /
characterInfo__/ <
[__< =
i__= >
]__> ?
.__? @
vertexIndex__@ K
;__K L
intbb 
materialIndexbb %
=bb& '
textInfobb( 0
.bb0 1
characterInfobb1 >
[bb> ?
ibb? @
]bb@ A
.bbA B"
materialReferenceIndexbbB X
;bbX Y
verticesdd 
=dd 
textInfodd '
.dd' (
meshInfodd( 0
[dd0 1
materialIndexdd1 >
]dd> ?
.dd? @
verticesdd@ H
;ddH I
Vector3gg 
offsetToMidBaselinegg /
=gg0 1
newgg2 5
Vector2gg6 =
(gg= >
(gg> ?
verticesgg? G
[ggG H
vertexIndexggH S
+ggT U
$numggV W
]ggW X
.ggX Y
xggY Z
+gg[ \
verticesgg] e
[gge f
vertexIndexggf q
+ggr s
$numggt u
]ggu v
.ggv w
xggw x
)ggx y
/ggz {
$numgg| }
,gg} ~
textInfo	gg á
.
ggá à
characterInfo
ggà ï
[
ggï ñ
i
ggñ ó
]
ggó ò
.
ggò ô
baseLine
ggô °
)
gg° ¢
;
gg¢ £
verticeskk 
[kk 
vertexIndexkk (
+kk) *
$numkk+ ,
]kk, -
+=kk. 0
-kk1 2
offsetToMidBaselinekk2 E
;kkE F
verticesll 
[ll 
vertexIndexll (
+ll) *
$numll+ ,
]ll, -
+=ll. 0
-ll1 2
offsetToMidBaselinell2 E
;llE F
verticesmm 
[mm 
vertexIndexmm (
+mm) *
$nummm+ ,
]mm, -
+=mm. 0
-mm1 2
offsetToMidBaselinemm2 E
;mmE F
verticesnn 
[nn 
vertexIndexnn (
+nn) *
$numnn+ ,
]nn, -
+=nn. 0
-nn1 2
offsetToMidBaselinenn2 E
;nnE F
floatqq 
shear_valueqq %
=qq& '
ShearAmountqq( 3
*qq4 5
$numqq6 ;
;qq; <
Vector3rr 
topShearrr $
=rr% &
newrr' *
Vector3rr+ 2
(rr2 3
shear_valuerr3 >
*rr? @
(rrA B
textInforrB J
.rrJ K
characterInforrK X
[rrX Y
irrY Z
]rrZ [
.rr[ \
topRightrr\ d
.rrd e
yrre f
-rrg h
textInforri q
.rrq r
characterInforrr 
[	rr Ä
i
rrÄ Å
]
rrÅ Ç
.
rrÇ É
baseLine
rrÉ ã
)
rrã å
,
rrå ç
$num
rré è
,
rrè ê
$num
rrë í
)
rrí ì
;
rrì î
Vector3ss 
bottomShearss '
=ss( )
newss* -
Vector3ss. 5
(ss5 6
shear_valuess6 A
*ssB C
(ssD E
textInfossE M
.ssM N
characterInfossN [
[ss[ \
iss\ ]
]ss] ^
.ss^ _
baseLiness_ g
-ssh i
textInfossj r
.ssr s
characterInfo	sss Ä
[
ssÄ Å
i
ssÅ Ç
]
ssÇ É
.
ssÉ Ñ
bottomRight
ssÑ è
.
ssè ê
y
ssê ë
)
ssë í
,
ssí ì
$num
ssî ï
,
ssï ñ
$num
ssó ò
)
ssò ô
;
ssô ö
verticesuu 
[uu 
vertexIndexuu (
+uu) *
$numuu+ ,
]uu, -
+=uu. 0
-uu1 2
bottomShearuu2 =
;uu= >
verticesvv 
[vv 
vertexIndexvv (
+vv) *
$numvv+ ,
]vv, -
+=vv. 0
topShearvv1 9
;vv9 :
verticesww 
[ww 
vertexIndexww (
+ww) *
$numww+ ,
]ww, -
+=ww. 0
topShearww1 9
;ww9 :
verticesxx 
[xx 
vertexIndexxx (
+xx) *
$numxx+ ,
]xx, -
+=xx. 0
-xx1 2
bottomShearxx2 =
;xx= >
float|| 
x0|| 
=|| 
(||  
offsetToMidBaseline||  3
.||3 4
x||4 5
-||6 7

boundsMinX||8 B
)||B C
/||D E
(||F G

boundsMaxX||G Q
-||R S

boundsMinX||T ^
)||^ _
;||_ `
float}} 
x1}} 
=}} 
x0}} !
+}}" #
$num}}$ +
;}}+ ,
float~~ 
y0~~ 
=~~ 
VertexCurve~~ *
.~~* +
Evaluate~~+ 3
(~~3 4
x0~~4 6
)~~6 7
*~~8 9

CurveScale~~: D
;~~D E
float 
y1 
= 
VertexCurve *
.* +
Evaluate+ 3
(3 4
x14 6
)6 7
*8 9

CurveScale: D
;D E
Vector3
ÅÅ 

horizontal
ÅÅ &
=
ÅÅ' (
new
ÅÅ) ,
Vector3
ÅÅ- 4
(
ÅÅ4 5
$num
ÅÅ5 6
,
ÅÅ6 7
$num
ÅÅ8 9
,
ÅÅ9 :
$num
ÅÅ; <
)
ÅÅ< =
;
ÅÅ= >
Vector3
ÉÉ 
tangent
ÉÉ #
=
ÉÉ$ %
new
ÉÉ& )
Vector3
ÉÉ* 1
(
ÉÉ1 2
x1
ÉÉ2 4
*
ÉÉ5 6
(
ÉÉ7 8

boundsMaxX
ÉÉ8 B
-
ÉÉC D

boundsMinX
ÉÉE O
)
ÉÉO P
+
ÉÉQ R

boundsMinX
ÉÉS ]
,
ÉÉ] ^
y1
ÉÉ_ a
)
ÉÉa b
-
ÉÉc d
new
ÉÉe h
Vector3
ÉÉi p
(
ÉÉp q"
offsetToMidBaselineÉÉq Ñ
.ÉÉÑ Ö
xÉÉÖ Ü
,ÉÉÜ á
y0ÉÉà ä
)ÉÉä ã
;ÉÉã å
float
ÖÖ 
dot
ÖÖ 
=
ÖÖ 
Mathf
ÖÖ  %
.
ÖÖ% &
Acos
ÖÖ& *
(
ÖÖ* +
Vector3
ÖÖ+ 2
.
ÖÖ2 3
Dot
ÖÖ3 6
(
ÖÖ6 7

horizontal
ÖÖ7 A
,
ÖÖA B
tangent
ÖÖC J
.
ÖÖJ K

normalized
ÖÖK U
)
ÖÖU V
)
ÖÖV W
*
ÖÖX Y
$num
ÖÖZ e
;
ÖÖe f
Vector3
ÜÜ 
cross
ÜÜ !
=
ÜÜ" #
Vector3
ÜÜ$ +
.
ÜÜ+ ,
Cross
ÜÜ, 1
(
ÜÜ1 2

horizontal
ÜÜ2 <
,
ÜÜ< =
tangent
ÜÜ> E
)
ÜÜE F
;
ÜÜF G
float
áá 
angle
áá 
=
áá  !
cross
áá" '
.
áá' (
z
áá( )
>
áá* +
$num
áá, -
?
áá. /
dot
áá0 3
:
áá4 5
$num
áá6 9
-
áá: ;
dot
áá< ?
;
áá? @
matrix
ââ 
=
ââ 
	Matrix4x4
ââ &
.
ââ& '
TRS
ââ' *
(
ââ* +
new
ââ+ .
Vector3
ââ/ 6
(
ââ6 7
$num
ââ7 8
,
ââ8 9
y0
ââ: <
,
ââ< =
$num
ââ> ?
)
ââ? @
,
ââ@ A

Quaternion
ââB L
.
ââL M
Euler
ââM R
(
ââR S
$num
ââS T
,
ââT U
$num
ââV W
,
ââW X
angle
ââY ^
)
ââ^ _
,
ââ_ `
Vector3
ââa h
.
ââh i
one
ââi l
)
ââl m
;
ââm n
vertices
ãã 
[
ãã 
vertexIndex
ãã (
+
ãã) *
$num
ãã+ ,
]
ãã, -
=
ãã. /
matrix
ãã0 6
.
ãã6 7
MultiplyPoint3x4
ãã7 G
(
ããG H
vertices
ããH P
[
ããP Q
vertexIndex
ããQ \
+
ãã] ^
$num
ãã_ `
]
ãã` a
)
ããa b
;
ããb c
vertices
åå 
[
åå 
vertexIndex
åå (
+
åå) *
$num
åå+ ,
]
åå, -
=
åå. /
matrix
åå0 6
.
åå6 7
MultiplyPoint3x4
åå7 G
(
ååG H
vertices
ååH P
[
ååP Q
vertexIndex
ååQ \
+
åå] ^
$num
åå_ `
]
åå` a
)
ååa b
;
ååb c
vertices
çç 
[
çç 
vertexIndex
çç (
+
çç) *
$num
çç+ ,
]
çç, -
=
çç. /
matrix
çç0 6
.
çç6 7
MultiplyPoint3x4
çç7 G
(
ççG H
vertices
ççH P
[
ççP Q
vertexIndex
ççQ \
+
çç] ^
$num
çç_ `
]
çç` a
)
çça b
;
ççb c
vertices
éé 
[
éé 
vertexIndex
éé (
+
éé) *
$num
éé+ ,
]
éé, -
=
éé. /
matrix
éé0 6
.
éé6 7
MultiplyPoint3x4
éé7 G
(
ééG H
vertices
ééH P
[
ééP Q
vertexIndex
ééQ \
+
éé] ^
$num
éé_ `
]
éé` a
)
ééa b
;
ééb c
vertices
êê 
[
êê 
vertexIndex
êê (
+
êê) *
$num
êê+ ,
]
êê, -
+=
êê. 0!
offsetToMidBaseline
êê1 D
;
êêD E
vertices
ëë 
[
ëë 
vertexIndex
ëë (
+
ëë) *
$num
ëë+ ,
]
ëë, -
+=
ëë. 0!
offsetToMidBaseline
ëë1 D
;
ëëD E
vertices
íí 
[
íí 
vertexIndex
íí (
+
íí) *
$num
íí+ ,
]
íí, -
+=
íí. 0!
offsetToMidBaseline
íí1 D
;
ííD E
vertices
ìì 
[
ìì 
vertexIndex
ìì (
+
ìì) *
$num
ìì+ ,
]
ìì, -
+=
ìì. 0!
offsetToMidBaseline
ìì1 D
;
ììD E
}
îî 
m_TextComponent
òò 
.
òò  
UpdateVertexData
òò  0
(
òò0 1
)
òò1 2
;
òò2 3
yield
öö 
return
öö 
null
öö !
;
öö! "
}
õõ 
}
úú 	
}
ùù 
}ûû ≈k
lD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\WarpTextExample.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class 
WarpTextExample  
:! "
MonoBehaviour# 0
{		 
private 
TMP_Text 
m_TextComponent (
;( )
public 
AnimationCurve 
VertexCurve )
=* +
new, /
AnimationCurve0 >
(> ?
new? B
KeyframeC K
(K L
$numL M
,M N
$numO P
)P Q
,Q R
newS V
KeyframeW _
(_ `
$num` e
,e f
$numg k
)k l
,l m
newn q
Keyframer z
(z {
$num{ 
,	 Ä
$num
Å Ç
)
Ç É
,
É Ñ
new
Ö à
Keyframe
â ë
(
ë í
$num
í ó
,
ó ò
$num
ô ù
)
ù û
,
û ü
new
† £
Keyframe
§ ¨
(
¨ ≠
$num
≠ Æ
,
Æ Ø
$num
∞ ≤
)
≤ ≥
)
≥ ¥
;
¥ µ
public 
float 
AngleMultiplier $
=% &
$num' +
;+ ,
public 
float 
SpeedMultiplier $
=% &
$num' +
;+ ,
public 
float 

CurveScale 
=  !
$num" &
;& '
void 
Awake 
( 
) 
{ 	
m_TextComponent 
= 

gameObject (
.( )
GetComponent) 5
<5 6
TMP_Text6 >
>> ?
(? @
)@ A
;A B
} 	
void 
Start 
( 
) 
{ 	
StartCoroutine 
( 
WarpText #
(# $
)$ %
)% &
;& '
} 	
private 
AnimationCurve 
CopyAnimationCurve 1
(1 2
AnimationCurve2 @
curveA F
)F G
{ 	
AnimationCurve   
newCurve   #
=  $ %
new  & )
AnimationCurve  * 8
(  8 9
)  9 :
;  : ;
newCurve"" 
."" 
keys"" 
="" 
curve"" !
.""! "
keys""" &
;""& '
return$$ 
newCurve$$ 
;$$ 
}%% 	
IEnumerator-- 
WarpText-- 
(-- 
)-- 
{.. 	
VertexCurve// 
.// 
preWrapMode// #
=//$ %
WrapMode//& .
.//. /
Clamp/// 4
;//4 5
VertexCurve00 
.00 
postWrapMode00 $
=00% &
WrapMode00' /
.00/ 0
Clamp000 5
;005 6
Vector344 
[44 
]44 
vertices44 
;44 
	Matrix4x455 
matrix55 
;55 
m_TextComponent77 
.77 !
havePropertiesChanged77 1
=772 3
true774 8
;778 9

CurveScale88 
*=88 
$num88 
;88 
float99 
old_CurveScale99  
=99! "

CurveScale99# -
;99- .
AnimationCurve:: 
	old_curve:: $
=::% &
CopyAnimationCurve::' 9
(::9 :
VertexCurve::: E
)::E F
;::F G
while<< 
(<< 
true<< 
)<< 
{== 
if>> 
(>> 
!>> 
m_TextComponent>> $
.>>$ %!
havePropertiesChanged>>% :
&&>>; =
old_CurveScale>>> L
==>>M O

CurveScale>>P Z
&&>>[ ]
	old_curve>>^ g
.>>g h
keys>>h l
[>>l m
$num>>m n
]>>n o
.>>o p
value>>p u
==>>v x
VertexCurve	>>y Ñ
.
>>Ñ Ö
keys
>>Ö â
[
>>â ä
$num
>>ä ã
]
>>ã å
.
>>å ç
value
>>ç í
)
>>í ì
{?? 
yield@@ 
return@@  
null@@! %
;@@% &
continueAA 
;AA 
}BB 
old_CurveScaleDD 
=DD  

CurveScaleDD! +
;DD+ ,
	old_curveEE 
=EE 
CopyAnimationCurveEE .
(EE. /
VertexCurveEE/ :
)EE: ;
;EE; <
m_TextComponentGG 
.GG  
ForceMeshUpdateGG  /
(GG/ 0
)GG0 1
;GG1 2
TMP_TextInfoII 
textInfoII %
=II& '
m_TextComponentII( 7
.II7 8
textInfoII8 @
;II@ A
intJJ 
characterCountJJ "
=JJ# $
textInfoJJ% -
.JJ- .
characterCountJJ. <
;JJ< =
ifMM 
(MM 
characterCountMM "
==MM# %
$numMM& '
)MM' (
continueMM) 1
;MM1 2
floatRR 

boundsMinXRR  
=RR! "
m_TextComponentRR# 2
.RR2 3
boundsRR3 9
.RR9 :
minRR: =
.RR= >
xRR> ?
;RR? @
floatSS 

boundsMaxXSS  
=SS! "
m_TextComponentSS# 2
.SS2 3
boundsSS3 9
.SS9 :
maxSS: =
.SS= >
xSS> ?
;SS? @
forWW 
(WW 
intWW 
iWW 
=WW 
$numWW 
;WW 
iWW  !
<WW" #
characterCountWW$ 2
;WW2 3
iWW4 5
++WW5 7
)WW7 8
{XX 
ifYY 
(YY 
!YY 
textInfoYY !
.YY! "
characterInfoYY" /
[YY/ 0
iYY0 1
]YY1 2
.YY2 3
	isVisibleYY3 <
)YY< =
continueZZ  
;ZZ  !
int\\ 
vertexIndex\\ #
=\\$ %
textInfo\\& .
.\\. /
characterInfo\\/ <
[\\< =
i\\= >
]\\> ?
.\\? @
vertexIndex\\@ K
;\\K L
int__ 
materialIndex__ %
=__& '
textInfo__( 0
.__0 1
characterInfo__1 >
[__> ?
i__? @
]__@ A
.__A B"
materialReferenceIndex__B X
;__X Y
verticesaa 
=aa 
textInfoaa '
.aa' (
meshInfoaa( 0
[aa0 1
materialIndexaa1 >
]aa> ?
.aa? @
verticesaa@ H
;aaH I
Vector3dd 
offsetToMidBaselinedd /
=dd0 1
newdd2 5
Vector2dd6 =
(dd= >
(dd> ?
verticesdd? G
[ddG H
vertexIndexddH S
+ddT U
$numddV W
]ddW X
.ddX Y
xddY Z
+dd[ \
verticesdd] e
[dde f
vertexIndexddf q
+ddr s
$numddt u
]ddu v
.ddv w
xddw x
)ddx y
/ddz {
$numdd| }
,dd} ~
textInfo	dd á
.
ddá à
characterInfo
ddà ï
[
ddï ñ
i
ddñ ó
]
ddó ò
.
ddò ô
baseLine
ddô °
)
dd° ¢
;
dd¢ £
verticeshh 
[hh 
vertexIndexhh (
+hh) *
$numhh+ ,
]hh, -
+=hh. 0
-hh1 2
offsetToMidBaselinehh2 E
;hhE F
verticesii 
[ii 
vertexIndexii (
+ii) *
$numii+ ,
]ii, -
+=ii. 0
-ii1 2
offsetToMidBaselineii2 E
;iiE F
verticesjj 
[jj 
vertexIndexjj (
+jj) *
$numjj+ ,
]jj, -
+=jj. 0
-jj1 2
offsetToMidBaselinejj2 E
;jjE F
verticeskk 
[kk 
vertexIndexkk (
+kk) *
$numkk+ ,
]kk, -
+=kk. 0
-kk1 2
offsetToMidBaselinekk2 E
;kkE F
floatnn 
x0nn 
=nn 
(nn  
offsetToMidBaselinenn  3
.nn3 4
xnn4 5
-nn6 7

boundsMinXnn8 B
)nnB C
/nnD E
(nnF G

boundsMaxXnnG Q
-nnR S

boundsMinXnnT ^
)nn^ _
;nn_ `
floatoo 
x1oo 
=oo 
x0oo !
+oo" #
$numoo$ +
;oo+ ,
floatpp 
y0pp 
=pp 
VertexCurvepp *
.pp* +
Evaluatepp+ 3
(pp3 4
x0pp4 6
)pp6 7
*pp8 9

CurveScalepp: D
;ppD E
floatqq 
y1qq 
=qq 
VertexCurveqq *
.qq* +
Evaluateqq+ 3
(qq3 4
x1qq4 6
)qq6 7
*qq8 9

CurveScaleqq: D
;qqD E
Vector3ss 

horizontalss &
=ss' (
newss) ,
Vector3ss- 4
(ss4 5
$numss5 6
,ss6 7
$numss8 9
,ss9 :
$numss; <
)ss< =
;ss= >
Vector3uu 
tangentuu #
=uu$ %
newuu& )
Vector3uu* 1
(uu1 2
x1uu2 4
*uu5 6
(uu7 8

boundsMaxXuu8 B
-uuC D

boundsMinXuuE O
)uuO P
+uuQ R

boundsMinXuuS ]
,uu] ^
y1uu_ a
)uua b
-uuc d
newuue h
Vector3uui p
(uup q 
offsetToMidBaseline	uuq Ñ
.
uuÑ Ö
x
uuÖ Ü
,
uuÜ á
y0
uuà ä
)
uuä ã
;
uuã å
floatww 
dotww 
=ww 
Mathfww  %
.ww% &
Acosww& *
(ww* +
Vector3ww+ 2
.ww2 3
Dotww3 6
(ww6 7

horizontalww7 A
,wwA B
tangentwwC J
.wwJ K

normalizedwwK U
)wwU V
)wwV W
*wwX Y
$numwwZ e
;wwe f
Vector3xx 
crossxx !
=xx" #
Vector3xx$ +
.xx+ ,
Crossxx, 1
(xx1 2

horizontalxx2 <
,xx< =
tangentxx> E
)xxE F
;xxF G
floatyy 
angleyy 
=yy  !
crossyy" '
.yy' (
zyy( )
>yy* +
$numyy, -
?yy. /
dotyy0 3
:yy4 5
$numyy6 9
-yy: ;
dotyy< ?
;yy? @
matrix{{ 
={{ 
	Matrix4x4{{ &
.{{& '
TRS{{' *
({{* +
new{{+ .
Vector3{{/ 6
({{6 7
$num{{7 8
,{{8 9
y0{{: <
,{{< =
$num{{> ?
){{? @
,{{@ A

Quaternion{{B L
.{{L M
Euler{{M R
({{R S
$num{{S T
,{{T U
$num{{V W
,{{W X
angle{{Y ^
){{^ _
,{{_ `
Vector3{{a h
.{{h i
one{{i l
){{l m
;{{m n
vertices}} 
[}} 
vertexIndex}} (
+}}) *
$num}}+ ,
]}}, -
=}}. /
matrix}}0 6
.}}6 7
MultiplyPoint3x4}}7 G
(}}G H
vertices}}H P
[}}P Q
vertexIndex}}Q \
+}}] ^
$num}}_ `
]}}` a
)}}a b
;}}b c
vertices~~ 
[~~ 
vertexIndex~~ (
+~~) *
$num~~+ ,
]~~, -
=~~. /
matrix~~0 6
.~~6 7
MultiplyPoint3x4~~7 G
(~~G H
vertices~~H P
[~~P Q
vertexIndex~~Q \
+~~] ^
$num~~_ `
]~~` a
)~~a b
;~~b c
vertices 
[ 
vertexIndex (
+) *
$num+ ,
], -
=. /
matrix0 6
.6 7
MultiplyPoint3x47 G
(G H
verticesH P
[P Q
vertexIndexQ \
+] ^
$num_ `
]` a
)a b
;b c
vertices
ÄÄ 
[
ÄÄ 
vertexIndex
ÄÄ (
+
ÄÄ) *
$num
ÄÄ+ ,
]
ÄÄ, -
=
ÄÄ. /
matrix
ÄÄ0 6
.
ÄÄ6 7
MultiplyPoint3x4
ÄÄ7 G
(
ÄÄG H
vertices
ÄÄH P
[
ÄÄP Q
vertexIndex
ÄÄQ \
+
ÄÄ] ^
$num
ÄÄ_ `
]
ÄÄ` a
)
ÄÄa b
;
ÄÄb c
vertices
ÇÇ 
[
ÇÇ 
vertexIndex
ÇÇ (
+
ÇÇ) *
$num
ÇÇ+ ,
]
ÇÇ, -
+=
ÇÇ. 0!
offsetToMidBaseline
ÇÇ1 D
;
ÇÇD E
vertices
ÉÉ 
[
ÉÉ 
vertexIndex
ÉÉ (
+
ÉÉ) *
$num
ÉÉ+ ,
]
ÉÉ, -
+=
ÉÉ. 0!
offsetToMidBaseline
ÉÉ1 D
;
ÉÉD E
vertices
ÑÑ 
[
ÑÑ 
vertexIndex
ÑÑ (
+
ÑÑ) *
$num
ÑÑ+ ,
]
ÑÑ, -
+=
ÑÑ. 0!
offsetToMidBaseline
ÑÑ1 D
;
ÑÑD E
vertices
ÖÖ 
[
ÖÖ 
vertexIndex
ÖÖ (
+
ÖÖ) *
$num
ÖÖ+ ,
]
ÖÖ, -
+=
ÖÖ. 0!
offsetToMidBaseline
ÖÖ1 D
;
ÖÖD E
}
ÜÜ 
m_TextComponent
ää 
.
ää  
UpdateVertexData
ää  0
(
ää0 1
)
ää1 2
;
ää2 3
yield
åå 
return
åå 
new
åå  
WaitForSeconds
åå! /
(
åå/ 0
$num
åå0 6
)
åå6 7
;
åå7 8
}
çç 
}
éé 	
}
èè 
}êê Ì
iD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\SimpleScript.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class 
SimpleScript 
: 
MonoBehaviour  -
{		 
private 
TextMeshPro 
m_textMeshPro )
;) *
private 
const 
string 
label "
=# $
$str% K
;K L
private 
float 
m_frame 
; 
void 
Start 
( 
) 
{ 	
m_textMeshPro 
= 

gameObject &
.& '
AddComponent' 3
<3 4
TextMeshPro4 ?
>? @
(@ A
)A B
;B C
m_textMeshPro 
. !
autoSizeTextContainer /
=0 1
true2 6
;6 7
m_textMeshPro"" 
."" 
fontSize"" "
=""# $
$num""% '
;""' (
m_textMeshPro$$ 
.$$ 
	alignment$$ #
=$$$ % 
TextAlignmentOptions$$& :
.$$: ;
Center$$; A
;$$A B
m_textMeshPro-- 
.-- 
enableWordWrapping-- ,
=--- .
false--/ 4
;--4 5
}00 	
void33 
Update33 
(33 
)33 
{44 	
m_textMeshPro55 
.55 
SetText55 !
(55! "
label55" '
,55' (
m_frame55) 0
%551 2
$num553 7
)557 8
;558 9
m_frame66 
+=66 
$num66 
*66 
Time66 
.66  
	deltaTime66  )
;66) *
}77 	
}99 
}:: œ
AD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Scripts\NPC.cs
public 
class 
NPC 
: 
MonoBehaviour  
{ 
public 

DialogueTrigger 
trigger "
;" #
public 

bool 
playerInRange 
; 
void 
Start	 
( 
) 
{ 
} 
void 
Update	 
( 
) 
{ 
if 

(
 
Input 
. 
GetButtonUp 
( 
$str $
)$ %
&&& (
playerInRange) 6
)6 7
{ 	
trigger 
. 
TriggerDialogue #
(# $
)$ %
;% &
}## 	
}%% 
private'' 
void'' 
OnTriggerEnter2D'' !
(''! "

Collider2D''" ,
other''- 2
)''2 3
{(( 
if)) 

())
 
other)) 
.)) 

CompareTag)) 
()) 
$str)) $
)))$ %
)))% &
{** 	
playerInRange++ 
=++ 
true++  
;++  !
}-- 	
}.. 
private00 
void00 
OnTriggerExit2D00  
(00  !

Collider2D00! +
other00, 1
)001 2
{11 
if22 

(22
 
other22 
.22 

CompareTag22 
(22 
$str22 $
)22$ %
)22% &
{33 	
playerInRange44 
=44 
false44 !
;44! "
}77 	
}88 
}99 ö
BD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Scripts\Sign.cs
public 
class 
Sign 
: 
MonoBehaviour !
{ 
public 


GameObject 
	dialogBox 
;  
public		 

Text		 

dialogText		 
;		 
public

 

string

 
dialog

 
;

 
public 

bool 
playerInRange 
; 
void 
Start	 
( 
) 
{ 
} 
void 
Update	 
( 
) 
{ 
if 

(
 
Input 
. 
GetButtonUp 
( 
$str $
)$ %
&&& (
playerInRange) 6
)6 7
{ 	
if 
( 
	dialogBox 
. 
activeInHierarchy *
)* +
{ 
	dialogBox 
. 
	SetActive #
(# $
false$ )
)) *
;* +
} 
else 
{ 
	dialogBox 
. 
	SetActive #
(# $
true$ (
)( )
;) *

dialogText 
. 
text 
=  !
dialog" (
;( )
}   
}!! 	
}"" 
private$$ 
void$$ 
OnTriggerEnter2D$$ !
($$! "

Collider2D$$" ,
other$$- 2
)$$2 3
{%% 
if&& 

(&&
 
other&& 
.&& 

CompareTag&& 
(&& 
$str&& $
)&&$ %
)&&% &
{'' 	
playerInRange(( 
=(( 
true((  
;((  !
}** 	
}++ 
private-- 
void-- 
OnTriggerExit2D--  
(--  !

Collider2D--! +
other--, 1
)--1 2
{.. 
if// 

(//
 
other// 
.// 

CompareTag// 
(// 
$str// $
)//$ %
)//% &
{00 	
playerInRange11 
=11 
false11 !
;11! "
	dialogBox22 
.22 
	SetActive22 
(22  
false22  %
)22% &
;22& '
}44 	
}55 
}66 î	
oD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\TMP_DigitValidator.cs
	namespace 	
TMPro
 
{ 
[

 
Serializable

 
]

 
public 

class 
TMP_DigitValidator #
:$ %
TMP_InputValidator& 8
{ 
public 
override 
char 
Validate %
(% &
ref& )
string* 0
text1 5
,5 6
ref7 :
int; >
pos? B
,B C
charD H
chI K
)K L
{ 	
if 
( 
ch 
>= 
$char 
&& 
ch 
<=  "
$char# &
)& '
{ 
text 
+= 
ch 
; 
pos 
+= 
$num 
; 
return 
ch 
; 
} 
return 
( 
char 
) 
$num 
; 
} 	
} 
} ñ
QD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Stats\StatSystem\PhoneFloat.cs
public

 
class

 

PhoneFloat

 
:

 
MonoBehaviour

 '
{

( )
public 

float 
degreesPerSecond !
=" #
$num$ )
;) *
public 

float 
	amplitude 
= 
$num !
;! "
public 

float 
	frequency 
= 
$num 
;  
Vector3 
	posOffset 
= 
new 
Vector3 #
($ %
)% &
;& '
Vector3 
tempPos 
= 
new 
Vector3 !
(" #
)# $
;$ %
void 
Start	 
( 
) 
{ 
	posOffset 
= 
	transform 
. 
position &
;& '
} 
void 
Update	 
( 
) 
{ 
tempPos   
=   
	posOffset   
;   
tempPos!! 
.!! 
y!! 
+=!! 
Mathf!! 
.!! 
Sin!! 
(!!  
Time!!  $
.!!$ %
	fixedTime!!% .
*!!/ 0
Mathf!!1 6
.!!6 7
PI!!7 9
*!!: ;
	frequency!!< E
)!!E F
*!!G H
	amplitude!!I R
;!!R S
	transform## 
.## 
position## 
=## 
tempPos## $
;##$ %
}$$ 
}%% ◊
FD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Scripts\MainMenu.cs
public 
class 
MainMenu 
: 
MonoBehaviour %
{ 
public 

void 
PlayGame 
( 
) 
{		 
SceneManager

 
.

 
	LoadScene

 
(

 
SceneManager

 +
.

+ ,
GetActiveScene

, :
(

: ;
)

; <
.

< =

buildIndex

= G
+

H I
$num

J K
)

K L
;

L M
} 
} à
MD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Scripts\DialogueTrigger.cs
public 
class 
DialogueTrigger 
: 
MonoBehaviour ,
{ 
public 

Dialogue 
dialogue 
; 
public		 

void		 
TriggerDialogue		 
(		  
)		  !
{

 
FindObjectOfType 
< 
Dialogue_Manager -
>- .
(. /
)/ 0
.0 1
StartDialogue1 >
(> ?
dialogue? G
)G H
;H I
} 
} ‹I
hD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\Benchmark02.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class 
Benchmark02 
: 
MonoBehaviour ,
{		 
public 
int 
	SpawnType 
= 
$num  
;  !
public 
int 
NumberOfNPC 
=  
$num! #
;# $
public 
bool #
IsTextObjectScaleStatic +
;+ ,
private #
TextMeshProFloatingText '
floatingText_Script( ;
;; <
void 
Start 
( 
) 
{ 	
for 
( 
int 
i 
= 
$num 
; 
i 
< 
NumberOfNPC  +
;+ ,
i- .
++. 0
)0 1
{ 
if 
( 
	SpawnType 
==  
$num! "
)" #
{ 

GameObject 
go !
=" #
new$ '

GameObject( 2
(2 3
)3 4
;4 5
go 
. 
	transform  
.  !
position! )
=* +
new, /
Vector30 7
(7 8
Random8 >
.> ?
Range? D
(D E
-E F
$numF I
,I J
$numK N
)N O
,O P
$numQ V
,V W
RandomX ^
.^ _
Range_ d
(d e
-e f
$numf i
,i j
$numk n
)n o
)o p
;p q
TextMeshPro 
textMeshPro  +
=, -
go. 0
.0 1
AddComponent1 =
<= >
TextMeshPro> I
>I J
(J K
)K L
;L M
textMeshPro!! 
.!!  !
autoSizeTextContainer!!  5
=!!6 7
true!!8 <
;!!< =
textMeshPro"" 
.""  
rectTransform""  -
.""- .
pivot"". 3
=""4 5
new""6 9
Vector2"": A
(""A B
$num""B F
,""F G
$num""H I
)""I J
;""J K
textMeshPro$$ 
.$$  
	alignment$$  )
=$$* + 
TextAlignmentOptions$$, @
.$$@ A
Bottom$$A G
;$$G H
textMeshPro%% 
.%%  
fontSize%%  (
=%%) *
$num%%+ -
;%%- .
textMeshPro&& 
.&&  
enableKerning&&  -
=&&. /
false&&0 5
;&&5 6
textMeshPro(( 
.((  
color((  %
=((& '
new((( +
Color32((, 3
(((3 4
$num((4 7
,((7 8
$num((9 <
,((< =
$num((> ?
,((? @
$num((A D
)((D E
;((E F
textMeshPro)) 
.))  
text))  $
=))% &
$str))' *
;))* +
textMeshPro** 
.**  #
isTextObjectScaleStatic**  7
=**8 9#
IsTextObjectScaleStatic**: Q
;**Q R
floatingText_Script-- '
=--( )
go--* ,
.--, -
AddComponent--- 9
<--9 :#
TextMeshProFloatingText--: Q
>--Q R
(--R S
)--S T
;--T U
floatingText_Script.. '
...' (
	SpawnType..( 1
=..2 3
$num..4 5
;..5 6
floatingText_Script// '
.//' (#
IsTextObjectScaleStatic//( ?
=//@ A#
IsTextObjectScaleStatic//B Y
;//Y Z
}00 
else11 
if11 
(11 
	SpawnType11 "
==11# %
$num11& '
)11' (
{22 

GameObject44 
go44 !
=44" #
new44$ '

GameObject44( 2
(442 3
)443 4
;444 5
go55 
.55 
	transform55  
.55  !
position55! )
=55* +
new55, /
Vector3550 7
(557 8
Random558 >
.55> ?
Range55? D
(55D E
-55E F
$num55F I
,55I J
$num55K N
)55N O
,55O P
$num55Q V
,55V W
Random55X ^
.55^ _
Range55_ d
(55d e
-55e f
$num55f i
,55i j
$num55k n
)55n o
)55o p
;55p q
TextMesh77 
textMesh77 %
=77& '
go77( *
.77* +
AddComponent77+ 7
<777 8
TextMesh778 @
>77@ A
(77A B
)77B C
;77C D
textMesh88 
.88 
font88 !
=88" #
	Resources88$ -
.88- .
Load88. 2
<882 3
Font883 7
>887 8
(888 9
$str889 F
)88F G
;88G H
textMesh99 
.99 
GetComponent99 )
<99) *
Renderer99* 2
>992 3
(993 4
)994 5
.995 6
sharedMaterial996 D
=99E F
textMesh99G O
.99O P
font99P T
.99T U
material99U ]
;99] ^
textMesh;; 
.;; 
anchor;; #
=;;$ %

TextAnchor;;& 0
.;;0 1
LowerCenter;;1 <
;;;< =
textMesh<< 
.<< 
fontSize<< %
=<<& '
$num<<( *
;<<* +
textMesh>> 
.>> 
color>> "
=>># $
new>>% (
Color32>>) 0
(>>0 1
$num>>1 4
,>>4 5
$num>>6 9
,>>9 :
$num>>; <
,>>< =
$num>>> A
)>>A B
;>>B C
textMesh?? 
.?? 
text?? !
=??" #
$str??$ '
;??' (
floatingText_ScriptBB '
=BB( )
goBB* ,
.BB, -
AddComponentBB- 9
<BB9 :#
TextMeshProFloatingTextBB: Q
>BBQ R
(BBR S
)BBS T
;BBT U
floatingText_ScriptCC '
.CC' (
	SpawnTypeCC( 1
=CC2 3
$numCC4 5
;CC5 6
}DD 
elseEE 
ifEE 
(EE 
	SpawnTypeEE "
==EE# %
$numEE& '
)EE' (
{FF 

GameObjectHH 
goHH !
=HH" #
newHH$ '

GameObjectHH( 2
(HH2 3
)HH3 4
;HH4 5
CanvasII 
canvasII !
=II" #
goII$ &
.II& '
AddComponentII' 3
<II3 4
CanvasII4 :
>II: ;
(II; <
)II< =
;II= >
canvasJJ 
.JJ 
worldCameraJJ &
=JJ' (
CameraJJ) /
.JJ/ 0
mainJJ0 4
;JJ4 5
goLL 
.LL 
	transformLL  
.LL  !

localScaleLL! +
=LL, -
newLL. 1
Vector3LL2 9
(LL9 :
$numLL: >
,LL> ?
$numLL@ D
,LLD E
$numLLF J
)LLJ K
;LLK L
goMM 
.MM 
	transformMM  
.MM  !
positionMM! )
=MM* +
newMM, /
Vector3MM0 7
(MM7 8
RandomMM8 >
.MM> ?
RangeMM? D
(MMD E
-MME F
$numMMF I
,MMI J
$numMMK N
)MMN O
,MMO P
$numMMQ S
,MMS T
RandomMMU [
.MM[ \
RangeMM\ a
(MMa b
-MMb c
$numMMc f
,MMf g
$numMMh k
)MMk l
)MMl m
;MMm n
TextMeshProUGUIOO #

textObjectOO$ .
=OO/ 0
newOO1 4

GameObjectOO5 ?
(OO? @
)OO@ A
.OOA B
AddComponentOOB N
<OON O
TextMeshProUGUIOOO ^
>OO^ _
(OO_ `
)OO` a
;OOa b

textObjectPP 
.PP 
rectTransformPP ,
.PP, -
	SetParentPP- 6
(PP6 7
goPP7 9
.PP9 :
	transformPP: C
,PPC D
falsePPE J
)PPJ K
;PPK L

textObjectRR 
.RR 
colorRR $
=RR% &
newRR' *
Color32RR+ 2
(RR2 3
$numRR3 6
,RR6 7
$numRR8 ;
,RR; <
$numRR= >
,RR> ?
$numRR@ C
)RRC D
;RRD E

textObjectSS 
.SS 
	alignmentSS (
=SS) * 
TextAlignmentOptionsSS+ ?
.SS? @
BottomSS@ F
;SSF G

textObjectTT 
.TT 
fontSizeTT '
=TT( )
$numTT* ,
;TT, -

textObjectUU 
.UU 
textUU #
=UU$ %
$strUU& )
;UU) *
floatingText_ScriptXX '
=XX( )
goXX* ,
.XX, -
AddComponentXX- 9
<XX9 :#
TextMeshProFloatingTextXX: Q
>XXQ R
(XXR S
)XXS T
;XXT U
floatingText_ScriptYY '
.YY' (
	SpawnTypeYY( 1
=YY2 3
$numYY4 5
;YY5 6
}ZZ 
}^^ 
}__ 	
}`` 
}aa Á)
lD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\TextMeshSpawner.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class 
TextMeshSpawner  
:! "
MonoBehaviour# 0
{		 
public 
int 
	SpawnType 
= 
$num  
;  !
public 
int 
NumberOfNPC 
=  
$num! #
;# $
public 
Font 
TheFont 
; 
private #
TextMeshProFloatingText '
floatingText_Script( ;
;; <
void 
Awake 
( 
) 
{ 	
} 	
void 
Start 
( 
) 
{ 	
for 
( 
int 
i 
= 
$num 
; 
i 
< 
NumberOfNPC  +
;+ ,
i- .
++. 0
)0 1
{ 
if 
( 
	SpawnType 
==  
$num! "
)" #
{ 

GameObject   
go   !
=  " #
new  $ '

GameObject  ( 2
(  2 3
)  3 4
;  4 5
go!! 
.!! 
	transform!!  
.!!  !
position!!! )
=!!* +
new!!, /
Vector3!!0 7
(!!7 8
Random!!8 >
.!!> ?
Range!!? D
(!!D E
-!!E F
$num!!F I
,!!I J
$num!!K N
)!!N O
,!!O P
$num!!Q U
,!!U V
Random!!W ]
.!!] ^
Range!!^ c
(!!c d
-!!d e
$num!!e h
,!!h i
$num!!j m
)!!m n
)!!n o
;!!o p
TextMeshPro(( 
textMeshPro((  +
=((, -
go((. 0
.((0 1
AddComponent((1 =
<((= >
TextMeshPro((> I
>((I J
(((J K
)((K L
;((L M
textMeshPro++ 
.++  
fontSize++  (
=++) *
$num+++ -
;++- .
textMeshPro-- 
.--  
text--  $
=--% &
$str--' *
;--* +
textMeshPro.. 
...  
color..  %
=..& '
new..( +
Color32.., 3
(..3 4
$num..4 7
,..7 8
$num..9 <
,..< =
$num..> ?
,..? @
$num..A D
)..D E
;..E F
floatingText_Script33 '
=33( )
go33* ,
.33, -
AddComponent33- 9
<339 :#
TextMeshProFloatingText33: Q
>33Q R
(33R S
)33S T
;33T U
floatingText_Script44 '
.44' (
	SpawnType44( 1
=442 3
$num444 5
;445 6
}55 
else66 
{77 

GameObject99 
go99 !
=99" #
new99$ '

GameObject99( 2
(992 3
)993 4
;994 5
go:: 
.:: 
	transform::  
.::  !
position::! )
=::* +
new::, /
Vector3::0 7
(::7 8
Random::8 >
.::> ?
Range::? D
(::D E
-::E F
$num::F I
,::I J
$num::K N
)::N O
,::O P
$num::Q U
,::U V
Random::W ]
.::] ^
Range::^ c
(::c d
-::d e
$num::e h
,::h i
$num::j m
)::m n
)::n o
;::o p
TextMesh>> 
textMesh>> %
=>>& '
go>>( *
.>>* +
AddComponent>>+ 7
<>>7 8
TextMesh>>8 @
>>>@ A
(>>A B
)>>B C
;>>C D
textMesh?? 
.?? 
GetComponent?? )
<??) *
Renderer??* 2
>??2 3
(??3 4
)??4 5
.??5 6
sharedMaterial??6 D
=??E F
TheFont??G N
.??N O
material??O W
;??W X
textMesh@@ 
.@@ 
font@@ !
=@@" #
TheFont@@$ +
;@@+ ,
textMeshAA 
.AA 
anchorAA #
=AA$ %

TextAnchorAA& 0
.AA0 1
LowerCenterAA1 <
;AA< =
textMeshBB 
.BB 
fontSizeBB %
=BB& '
$numBB( *
;BB* +
textMeshDD 
.DD 
colorDD "
=DD# $
newDD% (
Color32DD) 0
(DD0 1
$numDD1 4
,DD4 5
$numDD6 9
,DD9 :
$numDD; <
,DD< =
$numDD> A
)DDA B
;DDB C
textMeshEE 
.EE 
textEE !
=EE" #
$strEE$ '
;EE' (
floatingText_ScriptHH '
=HH( )
goHH* ,
.HH, -
AddComponentHH- 9
<HH9 :#
TextMeshProFloatingTextHH: Q
>HHQ R
(HHR S
)HHS T
;HHT U
floatingText_ScriptII '
.II' (
	SpawnTypeII( 1
=II2 3
$numII4 5
;II5 6
}JJ 
}KK 
}LL 	
}NN 
}OO õ*
mD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\Benchmark01_UGUI.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public		 

class		 
Benchmark01_UGUI		 !
:		" #
MonoBehaviour		$ 1
{

 
public 
int 
BenchmarkType  
=! "
$num# $
;$ %
public 
Canvas 
canvas 
; 
public 
TMP_FontAsset 
	TMProFont &
;& '
public 
Font 
TextMeshFont  
;  !
private 
TextMeshProUGUI 
m_textMeshPro  -
;- .
private 
Text 

m_textMesh 
;  
private 
const 
string 
label01 $
=% &
$str' H
;H I
private 
const 
string 
label02 $
=% &
$str' N
;N O
private 
Material 
m_material01 %
;% &
private   
Material   
m_material02   %
;  % &
IEnumerator$$ 
Start$$ 
($$ 
)$$ 
{%% 	
if)) 
()) 
BenchmarkType)) 
==))  
$num))! "
)))" #
{** 
m_textMeshPro++ 
=++ 

gameObject++  *
.++* +
AddComponent+++ 7
<++7 8
TextMeshProUGUI++8 G
>++G H
(++H I
)++I J
;++J K
if11 
(11 
	TMProFont11 
!=11  
null11! %
)11% &
m_textMeshPro22 !
.22! "
font22" &
=22' (
	TMProFont22) 2
;222 3
m_textMeshPro77 
.77 
fontSize77 &
=77' (
$num77) +
;77+ ,
m_textMeshPro88 
.88 
	alignment88 '
=88( ) 
TextAlignmentOptions88* >
.88> ?
Center88? E
;88E F
m_textMeshPro:: 
.:: 
extraPadding:: *
=::+ ,
true::- 1
;::1 2
m_material01DD 
=DD 
m_textMeshProDD ,
.DD, -
fontDD- 1
.DD1 2
materialDD2 :
;DD: ;
m_material02EE 
=EE 
	ResourcesEE (
.EE( )
LoadEE) -
<EE- .
MaterialEE. 6
>EE6 7
(EE7 8
$strEE8 f
)EEf g
;EEg h
}HH 
elseII 
ifII 
(II 
BenchmarkTypeII "
==II# %
$numII& '
)II' (
{JJ 

m_textMeshKK 
=KK 

gameObjectKK '
.KK' (
AddComponentKK( 4
<KK4 5
TextKK5 9
>KK9 :
(KK: ;
)KK; <
;KK< =
ifMM 
(MM 
TextMeshFontMM  
!=MM! #
nullMM$ (
)MM( )
{NN 

m_textMeshOO 
.OO 
fontOO #
=OO$ %
TextMeshFontOO& 2
;OO2 3
}QQ 
elseRR 
{SS 
}VV 

m_textMeshXX 
.XX 
fontSizeXX #
=XX$ %
$numXX& (
;XX( )

m_textMeshYY 
.YY 
	alignmentYY $
=YY% &

TextAnchorYY' 1
.YY1 2
MiddleCenterYY2 >
;YY> ?
}\\ 
for`` 
(`` 
int`` 
i`` 
=`` 
$num`` 
;`` 
i`` 
<=``  
$num``! (
;``( )
i``* +
++``+ -
)``- .
{aa 
ifbb 
(bb 
BenchmarkTypebb !
==bb" $
$numbb% &
)bb& '
{cc 
m_textMeshProdd !
.dd! "
textdd" &
=dd' (
label01dd) 0
+dd1 2
(dd3 4
idd4 5
%dd6 7
$numdd8 <
)dd< =
;dd= >
ifee 
(ee 
iee 
%ee 
$numee  
==ee! #
$numee$ '
)ee' (
m_textMeshProff %
.ff% &
fontSharedMaterialff& 8
=ff9 :
m_textMeshProff; H
.ffH I
fontSharedMaterialffI [
==ff\ ^
m_material01ff_ k
?ffl m
m_textMeshProffn {
.ff{ |
fontSharedMaterial	ff| é
=
ffè ê
m_material02
ffë ù
:
ffû ü
m_textMeshPro
ff† ≠
.
ff≠ Æ 
fontSharedMaterial
ffÆ ¿
=
ff¡ ¬
m_material01
ff√ œ
;
ffœ –
}jj 
elsekk 
ifkk 
(kk 
BenchmarkTypekk &
==kk' )
$numkk* +
)kk+ ,

m_textMeshll 
.ll 
textll #
=ll$ %
label02ll& -
+ll. /
(ll0 1
ill1 2
%ll3 4
$numll5 9
)ll9 :
.ll: ;
ToStringll; C
(llC D
)llD E
;llE F
yieldnn 
returnnn 
nullnn !
;nn! "
}oo 
yieldrr 
returnrr 
nullrr 
;rr 
}ss 	
}
ÖÖ 
}áá ´f
oD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\TMP_TextSelector_A.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public		 

class		 
TMP_TextSelector_A		 #
:		$ %
MonoBehaviour		& 3
,		3 4 
IPointerEnterHandler		5 I
,		I J
IPointerExitHandler		K ^
{

 
private 
TextMeshPro 
m_TextMeshPro )
;) *
private 
Camera 
m_Camera 
;  
private 
bool 
m_isHoveringObject '
;' (
private 
int 
m_selectedLink "
=# $
-% &
$num& '
;' (
private 
int 
m_lastCharIndex #
=$ %
-& '
$num' (
;( )
private 
int 
m_lastWordIndex #
=$ %
-& '
$num' (
;( )
void 
Awake 
( 
) 
{ 	
m_TextMeshPro 
= 

gameObject &
.& '
GetComponent' 3
<3 4
TextMeshPro4 ?
>? @
(@ A
)A B
;B C
m_Camera 
= 
Camera 
. 
main "
;" #
m_TextMeshPro 
. 
ForceMeshUpdate )
() *
)* +
;+ ,
} 	
void 

LateUpdate 
( 
) 
{ 	
m_isHoveringObject   
=    
false  ! &
;  & '
if"" 
("" 
TMP_TextUtilities"" !
.""! "'
IsIntersectingRectTransform""" =
(""= >
m_TextMeshPro""> K
.""K L
rectTransform""L Y
,""Y Z
Input""[ `
.""` a
mousePosition""a n
,""n o
Camera""p v
.""v w
main""w {
)""{ |
)""| }
{## 
m_isHoveringObject$$ "
=$$# $
true$$% )
;$$) *
}%% 
if'' 
('' 
m_isHoveringObject'' "
)''" #
{(( 
int** 
	charIndex** 
=** 
TMP_TextUtilities**  1
.**1 2%
FindIntersectingCharacter**2 K
(**K L
m_TextMeshPro**L Y
,**Y Z
Input**[ `
.**` a
mousePosition**a n
,**n o
Camera**p v
.**v w
main**w {
,**{ |
true	**} Å
)
**Å Ç
;
**Ç É
if++ 
(++ 
	charIndex++ 
!=++  
-++! "
$num++" #
&&++$ &
	charIndex++' 0
!=++1 3
m_lastCharIndex++4 C
&&++D F
(++G H
Input++H M
.++M N
GetKey++N T
(++T U
KeyCode++U \
.++\ ]
	LeftShift++] f
)++f g
||++h j
Input++k p
.++p q
GetKey++q w
(++w x
KeyCode++x 
.	++ Ä

RightShift
++Ä ä
)
++ä ã
)
++ã å
)
++å ç
{,, 
m_lastCharIndex// #
=//$ %
	charIndex//& /
;/// 0
int11 
	meshIndex11 !
=11" #
m_TextMeshPro11$ 1
.111 2
textInfo112 :
.11: ;
characterInfo11; H
[11H I
	charIndex11I R
]11R S
.11S T"
materialReferenceIndex11T j
;11j k
int33 
vertexIndex33 #
=33$ %
m_TextMeshPro33& 3
.333 4
textInfo334 <
.33< =
characterInfo33= J
[33J K
	charIndex33K T
]33T U
.33U V
vertexIndex33V a
;33a b
Color3255 
c55 
=55 
new55  #
Color3255$ +
(55+ ,
(55, -
byte55- 1
)551 2
Random552 8
.558 9
Range559 >
(55> ?
$num55? @
,55@ A
$num55B E
)55E F
,55F G
(55H I
byte55I M
)55M N
Random55N T
.55T U
Range55U Z
(55Z [
$num55[ \
,55\ ]
$num55^ a
)55a b
,55b c
(55d e
byte55e i
)55i j
Random55j p
.55p q
Range55q v
(55v w
$num55w x
,55x y
$num55z }
)55} ~
,55~ 
$num
55Ä É
)
55É Ñ
;
55Ñ Ö
Color3277 
[77 
]77 
vertexColors77 *
=77+ ,
m_TextMeshPro77- :
.77: ;
textInfo77; C
.77C D
meshInfo77D L
[77L M
	meshIndex77M V
]77V W
.77W X
colors3277X `
;77` a
vertexColors99  
[99  !
vertexIndex99! ,
+99- .
$num99/ 0
]990 1
=992 3
c994 5
;995 6
vertexColors::  
[::  !
vertexIndex::! ,
+::- .
$num::/ 0
]::0 1
=::2 3
c::4 5
;::5 6
vertexColors;;  
[;;  !
vertexIndex;;! ,
+;;- .
$num;;/ 0
];;0 1
=;;2 3
c;;4 5
;;;5 6
vertexColors<<  
[<<  !
vertexIndex<<! ,
+<<- .
$num<</ 0
]<<0 1
=<<2 3
c<<4 5
;<<5 6
m_TextMeshPro?? !
.??! "
textInfo??" *
.??* +
meshInfo??+ 3
[??3 4
	meshIndex??4 =
]??= >
.??> ?
mesh??? C
.??C D
colors32??D L
=??M N
vertexColors??O [
;??[ \
}@@ 
intEE 
	linkIndexEE 
=EE 
TMP_TextUtilitiesEE  1
.EE1 2 
FindIntersectingLinkEE2 F
(EEF G
m_TextMeshProEEG T
,EET U
InputEEV [
.EE[ \
mousePositionEE\ i
,EEi j
m_CameraEEk s
)EEs t
;EEt u
ifHH 
(HH 
(HH 
	linkIndexHH 
==HH !
-HH" #
$numHH# $
&&HH% '
m_selectedLinkHH( 6
!=HH7 9
-HH: ;
$numHH; <
)HH< =
||HH> @
	linkIndexHHA J
!=HHK M
m_selectedLinkHHN \
)HH\ ]
{II 
m_selectedLinkKK "
=KK# $
-KK% &
$numKK& '
;KK' (
}LL 
ifOO 
(OO 
	linkIndexOO 
!=OO  
-OO! "
$numOO" #
&&OO$ &
	linkIndexOO' 0
!=OO1 3
m_selectedLinkOO4 B
)OOB C
{PP 
m_selectedLinkQQ "
=QQ# $
	linkIndexQQ% .
;QQ. /
TMP_LinkInfoSS  
linkInfoSS! )
=SS* +
m_TextMeshProSS, 9
.SS9 :
textInfoSS: B
.SSB C
linkInfoSSC K
[SSK L
	linkIndexSSL U
]SSU V
;SSV W
Vector3XX !
worldPointInRectangleXX 1
;XX1 2 
RectTransformUtilityZZ (
.ZZ( ).
"ScreenPointToWorldPointInRectangleZZ) K
(ZZK L
m_TextMeshProZZL Y
.ZZY Z
rectTransformZZZ g
,ZZg h
InputZZi n
.ZZn o
mousePositionZZo |
,ZZ| }
m_Camera	ZZ~ Ü
,
ZZÜ á
out
ZZà ã#
worldPointInRectangle
ZZå °
)
ZZ° ¢
;
ZZ¢ £
switch\\ 
(\\ 
linkInfo\\ $
.\\$ %
	GetLinkID\\% .
(\\. /
)\\/ 0
)\\0 1
{]] 
case^^ 
$str^^ $
:^^$ %
breakbb !
;bb! "
casecc 
$strcc $
:cc$ %
breakgg !
;gg! "
}hh 
}ii 
intoo 
	wordIndexoo 
=oo 
TMP_TextUtilitiesoo  1
.oo1 2 
FindIntersectingWordoo2 F
(ooF G
m_TextMeshProooG T
,ooT U
InputooV [
.oo[ \
mousePositionoo\ i
,ooi j
Cameraook q
.ooq r
mainoor v
)oov w
;oow x
ifpp 
(pp 
	wordIndexpp 
!=pp  
-pp! "
$numpp" #
&&pp$ &
	wordIndexpp' 0
!=pp1 3
m_lastWordIndexpp4 C
)ppC D
{qq 
m_lastWordIndexrr #
=rr$ %
	wordIndexrr& /
;rr/ 0
TMP_WordInfott  
wInfott! &
=tt' (
m_TextMeshPrott) 6
.tt6 7
textInfott7 ?
.tt? @
wordInfott@ H
[ttH I
	wordIndexttI R
]ttR S
;ttS T
Vector3vv 
wordPOSvv #
=vv$ %
m_TextMeshProvv& 3
.vv3 4
	transformvv4 =
.vv= >
TransformPointvv> L
(vvL M
m_TextMeshProvvM Z
.vvZ [
textInfovv[ c
.vvc d
characterInfovvd q
[vvq r
wInfovvr w
.vvw x 
firstCharacterIndex	vvx ã
]
vvã å
.
vvå ç

bottomLeft
vvç ó
)
vvó ò
;
vvò ô
wordPOSww 
=ww 
Cameraww $
.ww$ %
mainww% )
.ww) *
WorldToScreenPointww* <
(ww< =
wordPOSww= D
)wwD E
;wwE F
Color32{{ 
[{{ 
]{{ 
vertexColors{{ *
={{+ ,
m_TextMeshPro{{- :
.{{: ;
textInfo{{; C
.{{C D
meshInfo{{D L
[{{L M
$num{{M N
]{{N O
.{{O P
colors32{{P X
;{{X Y
Color32}} 
c}} 
=}} 
new}}  #
Color32}}$ +
(}}+ ,
(}}, -
byte}}- 1
)}}1 2
Random}}2 8
.}}8 9
Range}}9 >
(}}> ?
$num}}? @
,}}@ A
$num}}B E
)}}E F
,}}F G
(}}H I
byte}}I M
)}}M N
Random}}N T
.}}T U
Range}}U Z
(}}Z [
$num}}[ \
,}}\ ]
$num}}^ a
)}}a b
,}}b c
(}}d e
byte}}e i
)}}i j
Random}}j p
.}}p q
Range}}q v
(}}v w
$num}}w x
,}}x y
$num}}z }
)}}} ~
,}}~ 
$num
}}Ä É
)
}}É Ñ
;
}}Ñ Ö
for~~ 
(~~ 
int~~ 
i~~ 
=~~  
$num~~! "
;~~" #
i~~$ %
<~~& '
wInfo~~( -
.~~- .
characterCount~~. <
;~~< =
i~~> ?
++~~? A
)~~A B
{ 
int
ÄÄ 
vertexIndex
ÄÄ '
=
ÄÄ( )
m_TextMeshPro
ÄÄ* 7
.
ÄÄ7 8
textInfo
ÄÄ8 @
.
ÄÄ@ A
characterInfo
ÄÄA N
[
ÄÄN O
wInfo
ÄÄO T
.
ÄÄT U!
firstCharacterIndex
ÄÄU h
+
ÄÄi j
i
ÄÄk l
]
ÄÄl m
.
ÄÄm n
vertexIndex
ÄÄn y
;
ÄÄy z
vertexColors
ÇÇ $
[
ÇÇ$ %
vertexIndex
ÇÇ% 0
+
ÇÇ1 2
$num
ÇÇ3 4
]
ÇÇ4 5
=
ÇÇ6 7
c
ÇÇ8 9
;
ÇÇ9 :
vertexColors
ÉÉ $
[
ÉÉ$ %
vertexIndex
ÉÉ% 0
+
ÉÉ1 2
$num
ÉÉ3 4
]
ÉÉ4 5
=
ÉÉ6 7
c
ÉÉ8 9
;
ÉÉ9 :
vertexColors
ÑÑ $
[
ÑÑ$ %
vertexIndex
ÑÑ% 0
+
ÑÑ1 2
$num
ÑÑ3 4
]
ÑÑ4 5
=
ÑÑ6 7
c
ÑÑ8 9
;
ÑÑ9 :
vertexColors
ÖÖ $
[
ÖÖ$ %
vertexIndex
ÖÖ% 0
+
ÖÖ1 2
$num
ÖÖ3 4
]
ÖÖ4 5
=
ÖÖ6 7
c
ÖÖ8 9
;
ÖÖ9 :
}
ÜÜ 
m_TextMeshPro
àà !
.
àà! "
mesh
àà" &
.
àà& '
colors32
àà' /
=
àà0 1
vertexColors
àà2 >
;
àà> ?
}
ââ 
}
ãã 
}
åå 	
public
èè 
void
èè 
OnPointerEnter
èè "
(
èè" #
PointerEventData
èè# 3
	eventData
èè4 =
)
èè= >
{
êê 	
Debug
ëë 
.
ëë 
Log
ëë 
(
ëë 
$str
ëë (
)
ëë( )
;
ëë) * 
m_isHoveringObject
íí 
=
íí  
true
íí! %
;
íí% &
}
ìì 	
public
ññ 
void
ññ 
OnPointerExit
ññ !
(
ññ! "
PointerEventData
ññ" 2
	eventData
ññ3 <
)
ññ< =
{
óó 	
Debug
òò 
.
òò 
Log
òò 
(
òò 
$str
òò '
)
òò' (
;
òò( ) 
m_isHoveringObject
ôô 
=
ôô  
false
ôô! &
;
ôô& '
}
öö 	
}
úú 
}ùù „
UD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Stats\StatSystem\StatsActivator.cs
public 
class 
StatsActivator 
: 
MonoBehaviour +
,+ ,
StatInteractable- =
{ 
[ 
SerializeField 
] 
private 
StatsObject (
statsObject) 4
;4 5
public 

void 
OnTriggerEnter2D  
(  !

Collider2D! +
other, 1
)1 2
{ 
if		 

(		
 
other		 
.		 

CompareTag		 
(		 
$str		 $
)		$ %
&&		& (
other		) .
.		. /
TryGetComponent		/ >
(		> ?
out		? B
Player		C I
player		J P
)		P Q
)		Q R
{

 	
player 
. 
Interactable 
=  !
this" &
;& '
} 	
} 
public 

void 
OnTriggerExit2D 
(  

Collider2D  *
other+ 0
)0 1
{ 
if 

(
 
other 
. 

CompareTag 
( 
$str $
)$ %
&&& (
other) .
.. /
TryGetComponent/ >
(> ?
out? B
PlayerC I
playerJ P
)P Q
)Q R
{ 	
if 
( 
player 
. 
Interactable "
is# %
StatsActivator& 4
statsActivator5 C
&&D F
statsActivatorG U
==V X
thisY ]
)] ^
{ 
player 
. 
Interactable #
=$ %
null& *
;* +
} 
} 	
} 
public 

void 
Interact 
( 
Player 
player  &
)& '
{ 
player 
. 
StatsUI 
. 
	ShowStats  
(  !
statsObject! ,
), -
;- .
} 
} ÆD
hD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\Benchmark03.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public		 

class		 
Benchmark03		 
:		 
MonoBehaviour		 ,
{

 
public 
enum 
BenchmarkType !
{" #
TMP_SDF_MOBILE$ 2
=3 4
$num5 6
,6 7
TMP_SDF__MOBILE_SSD8 K
=L M
$numN O
,O P
TMP_SDFQ X
=Y Z
$num[ \
,\ ]
TMP_BITMAP_MOBILE^ o
=p q
$numr s
,s t
TEXTMESH_BITMAP	u Ñ
=
Ö Ü
$num
á à
}
â ä
public 
int 
NumberOfSamples "
=# $
$num% (
;( )
public 
BenchmarkType 
	Benchmark &
;& '
public 
Font 

SourceFont 
; 
void 
Awake 
( 
) 
{ 	
} 	
void 
Start 
( 
) 
{ 	
TMP_FontAsset 
	fontAsset #
=$ %
null& *
;* +
switch 
( 
	Benchmark 
) 
{ 
case   
BenchmarkType   "
.  " #
TMP_SDF_MOBILE  # 1
:  1 2
	fontAsset!! 
=!! 
TMP_FontAsset!!  -
.!!- .
CreateFontAsset!!. =
(!!= >

SourceFont!!> H
,!!H I
$num!!J L
,!!L M
$num!!N O
,!!O P
GlyphRenderMode!!Q `
.!!` a
SDFAA!!a f
,!!f g
$num!!h k
,!!k l
$num!!m p
,!!p q 
AtlasPopulationMode	!!r Ö
.
!!Ö Ü
Dynamic
!!Ü ç
)
!!ç é
;
!!é è
break"" 
;"" 
case## 
BenchmarkType## "
.##" #
TMP_SDF__MOBILE_SSD### 6
:##6 7
	fontAsset$$ 
=$$ 
TMP_FontAsset$$  -
.$$- .
CreateFontAsset$$. =
($$= >

SourceFont$$> H
,$$H I
$num$$J L
,$$L M
$num$$N O
,$$O P
GlyphRenderMode$$Q `
.$$` a
SDFAA$$a f
,$$f g
$num$$h k
,$$k l
$num$$m p
,$$p q 
AtlasPopulationMode	$$r Ö
.
$$Ö Ü
Dynamic
$$Ü ç
)
$$ç é
;
$$é è
	fontAsset%% 
.%% 
material%% &
.%%& '
shader%%' -
=%%. /
Shader%%0 6
.%%6 7
Find%%7 ;
(%%; <
$str%%< c
)%%c d
;%%d e
break&& 
;&& 
case'' 
BenchmarkType'' "
.''" #
TMP_SDF''# *
:''* +
	fontAsset(( 
=(( 
TMP_FontAsset((  -
.((- .
CreateFontAsset((. =
(((= >

SourceFont((> H
,((H I
$num((J L
,((L M
$num((N O
,((O P
GlyphRenderMode((Q `
.((` a
SDFAA((a f
,((f g
$num((h k
,((k l
$num((m p
,((p q 
AtlasPopulationMode	((r Ö
.
((Ö Ü
Dynamic
((Ü ç
)
((ç é
;
((é è
	fontAsset)) 
.)) 
material)) &
.))& '
shader))' -
=)). /
Shader))0 6
.))6 7
Find))7 ;
()); <
$str))< X
)))X Y
;))Y Z
break** 
;** 
case++ 
BenchmarkType++ "
.++" #
TMP_BITMAP_MOBILE++# 4
:++4 5
	fontAsset,, 
=,, 
TMP_FontAsset,,  -
.,,- .
CreateFontAsset,,. =
(,,= >

SourceFont,,> H
,,,H I
$num,,J L
,,,L M
$num,,N O
,,,O P
GlyphRenderMode,,Q `
.,,` a
SMOOTH,,a g
,,,g h
$num,,i l
,,,l m
$num,,n q
,,,q r 
AtlasPopulationMode	,,s Ü
.
,,Ü á
Dynamic
,,á é
)
,,é è
;
,,è ê
break-- 
;-- 
}.. 
for00 
(00 
int00 
i00 
=00 
$num00 
;00 
i00 
<00 
NumberOfSamples00  /
;00/ 0
i001 2
++002 4
)004 5
{11 
switch22 
(22 
	Benchmark22 !
)22! "
{33 
case44 
BenchmarkType44 &
.44& '
TMP_SDF_MOBILE44' 5
:445 6
case55 
BenchmarkType55 &
.55& '
TMP_SDF__MOBILE_SSD55' :
:55: ;
case66 
BenchmarkType66 &
.66& '
TMP_SDF66' .
:66. /
case77 
BenchmarkType77 &
.77& '
TMP_BITMAP_MOBILE77' 8
:778 9
{88 

GameObject99 &
go99' )
=99* +
new99, /

GameObject990 :
(99: ;
)99; <
;99< =
go:: 
.:: 
	transform:: (
.::( )
position::) 1
=::2 3
new::4 7
Vector3::8 ?
(::? @
$num::@ A
,::A B
$num::C G
,::G H
$num::I J
)::J K
;::K L
TextMeshPro<< '
textComponent<<( 5
=<<6 7
go<<8 :
.<<: ;
AddComponent<<; G
<<<G H
TextMeshPro<<H S
><<S T
(<<T U
)<<U V
;<<V W
textComponent== )
.==) *
font==* .
===/ 0
	fontAsset==1 :
;==: ;
textComponent>> )
.>>) *
fontSize>>* 2
=>>3 4
$num>>5 8
;>>8 9
textComponent?? )
.??) *
text??* .
=??/ 0
$str??1 4
;??4 5
textComponent@@ )
.@@) *
	alignment@@* 3
=@@4 5 
TextAlignmentOptions@@6 J
.@@J K
Center@@K Q
;@@Q R
textComponentAA )
.AA) *
colorAA* /
=AA0 1
newAA2 5
Color32AA6 =
(AA= >
$numAA> A
,AAA B
$numAAC F
,AAF G
$numAAH I
,AAI J
$numAAK N
)AAN O
;AAO P
ifCC 
(CC  
	BenchmarkCC  )
==CC* ,
BenchmarkTypeCC- :
.CC: ;
TMP_BITMAP_MOBILECC; L
)CCL M
textComponentDD  -
.DD- .
fontSizeDD. 6
=DD7 8
$numDD9 <
;DD< =
}FF 
breakGG 
;GG 
caseHH 
BenchmarkTypeHH &
.HH& '
TEXTMESH_BITMAPHH' 6
:HH6 7
{II 

GameObjectJJ &
goJJ' )
=JJ* +
newJJ, /

GameObjectJJ0 :
(JJ: ;
)JJ; <
;JJ< =
goKK 
.KK 
	transformKK (
.KK( )
positionKK) 1
=KK2 3
newKK4 7
Vector3KK8 ?
(KK? @
$numKK@ A
,KKA B
$numKKC G
,KKG H
$numKKI J
)KKJ K
;KKK L
TextMeshMM $
textMeshMM% -
=MM. /
goMM0 2
.MM2 3
AddComponentMM3 ?
<MM? @
TextMeshMM@ H
>MMH I
(MMI J
)MMJ K
;MMK L
textMeshNN $
.NN$ %
GetComponentNN% 1
<NN1 2
RendererNN2 :
>NN: ;
(NN; <
)NN< =
.NN= >
sharedMaterialNN> L
=NNM N

SourceFontNNO Y
.NNY Z
materialNNZ b
;NNb c
textMeshOO $
.OO$ %
fontOO% )
=OO* +

SourceFontOO, 6
;OO6 7
textMeshPP $
.PP$ %
anchorPP% +
=PP, -

TextAnchorPP. 8
.PP8 9
MiddleCenterPP9 E
;PPE F
textMeshQQ $
.QQ$ %
fontSizeQQ% -
=QQ. /
$numQQ0 3
;QQ3 4
textMeshSS $
.SS$ %
colorSS% *
=SS+ ,
newSS- 0
Color32SS1 8
(SS8 9
$numSS9 <
,SS< =
$numSS> A
,SSA B
$numSSC D
,SSD E
$numSSF I
)SSI J
;SSJ K
textMeshTT $
.TT$ %
textTT% )
=TT* +
$strTT, /
;TT/ 0
}UU 
breakVV 
;VV 
}WW 
}XX 
}YY 	
}[[ 
}\\ Êq
iD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\VertexShakeA.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class 
VertexShakeA 
: 
MonoBehaviour  -
{		 
public 
float 
AngleMultiplier $
=% &
$num' +
;+ ,
public 
float 
SpeedMultiplier $
=% &
$num' +
;+ ,
public 
float 
ScaleMultiplier $
=% &
$num' +
;+ ,
public 
float 
RotationMultiplier '
=( )
$num* .
;. /
private 
TMP_Text 
m_TextComponent (
;( )
private 
bool 
hasTextChanged #
;# $
void 
Awake 
( 
) 
{ 	
m_TextComponent 
= 
GetComponent *
<* +
TMP_Text+ 3
>3 4
(4 5
)5 6
;6 7
} 	
void 
OnEnable 
( 
) 
{ 	
TMPro_EventManager 
. 
TEXT_CHANGED_EVENT 1
.1 2
Add2 5
(5 6
ON_TEXT_CHANGED6 E
)E F
;F G
} 	
void 
	OnDisable 
( 
) 
{   	
TMPro_EventManager!! 
.!! 
TEXT_CHANGED_EVENT!! 1
.!!1 2
Remove!!2 8
(!!8 9
ON_TEXT_CHANGED!!9 H
)!!H I
;!!I J
}"" 	
void%% 
Start%% 
(%% 
)%% 
{&& 	
StartCoroutine'' 
('' 
AnimateVertexColors'' .
(''. /
)''/ 0
)''0 1
;''1 2
}(( 	
void++ 
ON_TEXT_CHANGED++ 
(++ 
Object++ #
obj++$ '
)++' (
{,, 	
if-- 
(-- 
obj-- 
=-- 
m_TextComponent-- %
)--% &
hasTextChanged.. 
=..  
true..! %
;..% &
}// 	
IEnumerator55 
AnimateVertexColors55 '
(55' (
)55( )
{66 	
m_TextComponent:: 
.:: 
ForceMeshUpdate:: +
(::+ ,
)::, -
;::- .
TMP_TextInfo<< 
textInfo<< !
=<<" #
m_TextComponent<<$ 3
.<<3 4
textInfo<<4 <
;<<< =
	Matrix4x4>> 
matrix>> 
;>> 
Vector3?? 
[?? 
]?? 
[?? 
]?? 
copyOfVertices?? &
=??' (
new??) ,
Vector3??- 4
[??4 5
$num??5 6
]??6 7
[??7 8
]??8 9
;??9 :
hasTextChangedAA 
=AA 
trueAA !
;AA! "
whileCC 
(CC 
trueCC 
)CC 
{DD 
ifFF 
(FF 
hasTextChangedFF "
)FF" #
{GG 
ifHH 
(HH 
copyOfVerticesHH &
.HH& '
LengthHH' -
<HH. /
textInfoHH0 8
.HH8 9
meshInfoHH9 A
.HHA B
LengthHHB H
)HHH I
copyOfVerticesII &
=II' (
newII) ,
Vector3II- 4
[II4 5
textInfoII5 =
.II= >
meshInfoII> F
.IIF G
LengthIIG M
]IIM N
[IIN O
]IIO P
;IIP Q
forKK 
(KK 
intKK 
iKK 
=KK  
$numKK! "
;KK" #
iKK$ %
<KK& '
textInfoKK( 0
.KK0 1
meshInfoKK1 9
.KK9 :
LengthKK: @
;KK@ A
iKKB C
++KKC E
)KKE F
{LL 
intMM 
lengthMM "
=MM# $
textInfoMM% -
.MM- .
meshInfoMM. 6
[MM6 7
iMM7 8
]MM8 9
.MM9 :
verticesMM: B
.MMB C
LengthMMC I
;MMI J
copyOfVerticesNN &
[NN& '
iNN' (
]NN( )
=NN* +
newNN, /
Vector3NN0 7
[NN7 8
lengthNN8 >
]NN> ?
;NN? @
}OO 
hasTextChangedQQ "
=QQ# $
falseQQ% *
;QQ* +
}RR 
intTT 
characterCountTT "
=TT# $
textInfoTT% -
.TT- .
characterCountTT. <
;TT< =
ifWW 
(WW 
characterCountWW "
==WW# %
$numWW& '
)WW' (
{XX 
yieldYY 
returnYY  
newYY! $
WaitForSecondsYY% 3
(YY3 4
$numYY4 9
)YY9 :
;YY: ;
continueZZ 
;ZZ 
}[[ 
int]] 
	lineCount]] 
=]] 
textInfo]]  (
.]]( )
	lineCount]]) 2
;]]2 3
for`` 
(`` 
int`` 
i`` 
=`` 
$num`` 
;`` 
i``  !
<``" #
	lineCount``$ -
;``- .
i``/ 0
++``0 2
)``2 3
{aa 
intcc 
firstcc 
=cc 
textInfocc  (
.cc( )
lineInfocc) 1
[cc1 2
icc2 3
]cc3 4
.cc4 5
firstCharacterIndexcc5 H
;ccH I
intdd 
lastdd 
=dd 
textInfodd '
.dd' (
lineInfodd( 0
[dd0 1
idd1 2
]dd2 3
.dd3 4
lastCharacterIndexdd4 F
;ddF G
Vector3gg 
centerOfLinegg (
=gg) *
(gg+ ,
textInfogg, 4
.gg4 5
characterInfogg5 B
[ggB C
firstggC H
]ggH I
.ggI J

bottomLeftggJ T
+ggU V
textInfoggW _
.gg_ `
characterInfogg` m
[ggm n
lastggn r
]ggr s
.ggs t
topRightggt |
)gg| }
/gg~ 
$num
ggÄ Å
;
ggÅ Ç

Quaternionhh 
rotationhh '
=hh( )

Quaternionhh* 4
.hh4 5
Eulerhh5 :
(hh: ;
$numhh; <
,hh< =
$numhh> ?
,hh? @
RandomhhA G
.hhG H
RangehhH M
(hhM N
-hhN O
$numhhO T
,hhT U
$numhhV [
)hh[ \
*hh] ^
RotationMultiplierhh_ q
)hhq r
;hhr s
forkk 
(kk 
intkk 
jkk 
=kk  
firstkk! &
;kk& '
jkk( )
<=kk* ,
lastkk- 1
;kk1 2
jkk3 4
++kk4 6
)kk6 7
{ll 
ifnn 
(nn 
!nn 
textInfonn %
.nn% &
characterInfonn& 3
[nn3 4
jnn4 5
]nn5 6
.nn6 7
	isVisiblenn7 @
)nn@ A
continueoo $
;oo$ %
intrr 
materialIndexrr )
=rr* +
textInforr, 4
.rr4 5
characterInforr5 B
[rrB C
jrrC D
]rrD E
.rrE F"
materialReferenceIndexrrF \
;rr\ ]
intuu 
vertexIndexuu '
=uu( )
textInfouu* 2
.uu2 3
characterInfouu3 @
[uu@ A
juuA B
]uuB C
.uuC D
vertexIndexuuD O
;uuO P
Vector3xx 
[xx  
]xx  !
sourceVerticesxx" 0
=xx1 2
textInfoxx3 ;
.xx; <
meshInfoxx< D
[xxD E
materialIndexxxE R
]xxR S
.xxS T
verticesxxT \
;xx\ ]
copyOfVertices|| &
[||& '
materialIndex||' 4
]||4 5
[||5 6
vertexIndex||6 A
+||B C
$num||D E
]||E F
=||G H
sourceVertices||I W
[||W X
vertexIndex||X c
+||d e
$num||f g
]||g h
-||i j
centerOfLine||k w
;||w x
copyOfVertices}} &
[}}& '
materialIndex}}' 4
]}}4 5
[}}5 6
vertexIndex}}6 A
+}}B C
$num}}D E
]}}E F
=}}G H
sourceVertices}}I W
[}}W X
vertexIndex}}X c
+}}d e
$num}}f g
]}}g h
-}}i j
centerOfLine}}k w
;}}w x
copyOfVertices~~ &
[~~& '
materialIndex~~' 4
]~~4 5
[~~5 6
vertexIndex~~6 A
+~~B C
$num~~D E
]~~E F
=~~G H
sourceVertices~~I W
[~~W X
vertexIndex~~X c
+~~d e
$num~~f g
]~~g h
-~~i j
centerOfLine~~k w
;~~w x
copyOfVertices &
[& '
materialIndex' 4
]4 5
[5 6
vertexIndex6 A
+B C
$numD E
]E F
=G H
sourceVerticesI W
[W X
vertexIndexX c
+d e
$numf g
]g h
-i j
centerOfLinek w
;w x
float
ÇÇ 
randomScale
ÇÇ )
=
ÇÇ* +
Random
ÇÇ, 2
.
ÇÇ2 3
Range
ÇÇ3 8
(
ÇÇ8 9
$num
ÇÇ9 ?
-
ÇÇ@ A
$num
ÇÇB H
*
ÇÇI J
ScaleMultiplier
ÇÇK Z
,
ÇÇZ [
$num
ÇÇ\ b
+
ÇÇc d
$num
ÇÇe k
*
ÇÇl m
ScaleMultiplier
ÇÇn }
)
ÇÇ} ~
;
ÇÇ~ 
matrix
ÖÖ 
=
ÖÖ  
	Matrix4x4
ÖÖ! *
.
ÖÖ* +
TRS
ÖÖ+ .
(
ÖÖ. /
Vector3
ÖÖ/ 6
.
ÖÖ6 7
one
ÖÖ7 :
,
ÖÖ: ;
rotation
ÖÖ< D
,
ÖÖD E
Vector3
ÖÖF M
.
ÖÖM N
one
ÖÖN Q
*
ÖÖR S
randomScale
ÖÖT _
)
ÖÖ_ `
;
ÖÖ` a
copyOfVertices
àà &
[
àà& '
materialIndex
àà' 4
]
àà4 5
[
àà5 6
vertexIndex
àà6 A
+
ààB C
$num
ààD E
]
ààE F
=
ààG H
matrix
ààI O
.
ààO P
MultiplyPoint3x4
ààP `
(
àà` a
copyOfVertices
ààa o
[
àào p
materialIndex
ààp }
]
àà} ~
[
àà~ 
vertexIndexàà ä
+ààã å
$numààç é
]ààé è
)ààè ê
;ààê ë
copyOfVertices
ââ &
[
ââ& '
materialIndex
ââ' 4
]
ââ4 5
[
ââ5 6
vertexIndex
ââ6 A
+
ââB C
$num
ââD E
]
ââE F
=
ââG H
matrix
ââI O
.
ââO P
MultiplyPoint3x4
ââP `
(
ââ` a
copyOfVertices
ââa o
[
ââo p
materialIndex
ââp }
]
ââ} ~
[
ââ~ 
vertexIndexââ ä
+ââã å
$numââç é
]ââé è
)ââè ê
;ââê ë
copyOfVertices
ää &
[
ää& '
materialIndex
ää' 4
]
ää4 5
[
ää5 6
vertexIndex
ää6 A
+
ääB C
$num
ääD E
]
ääE F
=
ääG H
matrix
ääI O
.
ääO P
MultiplyPoint3x4
ääP `
(
ää` a
copyOfVertices
ääa o
[
ääo p
materialIndex
ääp }
]
ää} ~
[
ää~ 
vertexIndexää ä
+ääã å
$numääç é
]ääé è
)ääè ê
;ääê ë
copyOfVertices
ãã &
[
ãã& '
materialIndex
ãã' 4
]
ãã4 5
[
ãã5 6
vertexIndex
ãã6 A
+
ããB C
$num
ããD E
]
ããE F
=
ããG H
matrix
ããI O
.
ããO P
MultiplyPoint3x4
ããP `
(
ãã` a
copyOfVertices
ããa o
[
ãão p
materialIndex
ããp }
]
ãã} ~
[
ãã~ 
vertexIndexãã ä
+ããã å
$numããç é
]ããé è
)ããè ê
;ããê ë
copyOfVertices
éé &
[
éé& '
materialIndex
éé' 4
]
éé4 5
[
éé5 6
vertexIndex
éé6 A
+
ééB C
$num
ééD E
]
ééE F
+=
ééG I
centerOfLine
ééJ V
;
ééV W
copyOfVertices
èè &
[
èè& '
materialIndex
èè' 4
]
èè4 5
[
èè5 6
vertexIndex
èè6 A
+
èèB C
$num
èèD E
]
èèE F
+=
èèG I
centerOfLine
èèJ V
;
èèV W
copyOfVertices
êê &
[
êê& '
materialIndex
êê' 4
]
êê4 5
[
êê5 6
vertexIndex
êê6 A
+
êêB C
$num
êêD E
]
êêE F
+=
êêG I
centerOfLine
êêJ V
;
êêV W
copyOfVertices
ëë &
[
ëë& '
materialIndex
ëë' 4
]
ëë4 5
[
ëë5 6
vertexIndex
ëë6 A
+
ëëB C
$num
ëëD E
]
ëëE F
+=
ëëG I
centerOfLine
ëëJ V
;
ëëV W
}
íí 
}
ìì 
for
ññ 
(
ññ 
int
ññ 
i
ññ 
=
ññ 
$num
ññ 
;
ññ 
i
ññ  !
<
ññ" #
textInfo
ññ$ ,
.
ññ, -
meshInfo
ññ- 5
.
ññ5 6
Length
ññ6 <
;
ññ< =
i
ññ> ?
++
ññ? A
)
ññA B
{
óó 
textInfo
òò 
.
òò 
meshInfo
òò %
[
òò% &
i
òò& '
]
òò' (
.
òò( )
mesh
òò) -
.
òò- .
vertices
òò. 6
=
òò7 8
copyOfVertices
òò9 G
[
òòG H
i
òòH I
]
òòI J
;
òòJ K
m_TextComponent
ôô #
.
ôô# $
UpdateGeometry
ôô$ 2
(
ôô2 3
textInfo
ôô3 ;
.
ôô; <
meshInfo
ôô< D
[
ôôD E
i
ôôE F
]
ôôF G
.
ôôG H
mesh
ôôH L
,
ôôL M
i
ôôN O
)
ôôO P
;
ôôP Q
}
öö 
yield
úú 
return
úú 
new
úú  
WaitForSeconds
úú! /
(
úú/ 0
$num
úú0 4
)
úú4 5
;
úú5 6
}
ùù 
}
ûû 	
}
†† 
}°° ‹"
hD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\Benchmark04.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class 
Benchmark04 
: 
MonoBehaviour ,
{		 
public 
int 
	SpawnType 
= 
$num  
;  !
public 
int 
MinPointSize 
=  !
$num" $
;$ %
public 
int 
MaxPointSize 
=  !
$num" $
;$ %
public 
int 
Steps 
= 
$num 
; 
private 
	Transform 
m_Transform %
;% &
void 
Start 
( 
) 
{ 	
m_Transform 
= 
	transform #
;# $
float 

lineHeight 
= 
$num  
;  !
float 
	orthoSize 
= 
Camera $
.$ %
main% )
.) *
orthographicSize* :
=; <
Screen= C
.C D
heightD J
/K L
$numM N
;N O
float 
ratio 
= 
( 
float  
)  !
Screen! '
.' (
width( -
/. /
Screen0 6
.6 7
height7 =
;= >
for 
( 
int 
i 
= 
MinPointSize %
;% &
i' (
<=) +
MaxPointSize, 8
;8 9
i: ;
+=< >
Steps? D
)D E
{ 
if   
(   
	SpawnType   
==    
$num  ! "
)  " #
{!! 

GameObject## 
go## !
=##" #
new##$ '

GameObject##( 2
(##2 3
$str##3 <
+##= >
i##? @
+##A B
$str##C I
)##I J
;##J K
if%% 
(%% 

lineHeight%% "
>%%# $
	orthoSize%%% .
*%%/ 0
$num%%1 2
)%%2 3
return%%4 :
;%%: ;
go'' 
.'' 
	transform''  
.''  !
position''! )
=''* +
m_Transform'', 7
.''7 8
position''8 @
+''A B
new''C F
Vector3''G N
(''N O
ratio''O T
*''U V
-''W X
	orthoSize''X a
*''b c
$num''d j
,''j k
	orthoSize''l u
*''v w
$num''x ~
-	'' Ä

lineHeight
''Å ã
,
''ã å
$num
''ç é
)
''é è
;
''è ê
TextMeshPro)) 
textMeshPro))  +
=)), -
go)). 0
.))0 1
AddComponent))1 =
<))= >
TextMeshPro))> I
>))I J
())J K
)))K L
;))L M
textMeshPro.. 
...  
rectTransform..  -
...- .
pivot... 3
=..4 5
new..6 9
Vector2..: A
(..A B
$num..B C
,..C D
$num..E I
)..I J
;..J K
textMeshPro00 
.00  
enableWordWrapping00  2
=003 4
false005 :
;00: ;
textMeshPro11 
.11  
extraPadding11  ,
=11- .
true11/ 3
;113 4
textMeshPro22 
.22  
isOrthographic22  .
=22/ 0
true221 5
;225 6
textMeshPro33 
.33  
fontSize33  (
=33) *
i33+ ,
;33, -
textMeshPro55 
.55  
text55  $
=55% &
i55' (
+55) *
$str55+ L
;55L M
textMeshPro66 
.66  
color66  %
=66& '
new66( +
Color3266, 3
(663 4
$num664 7
,667 8
$num669 <
,66< =
$num66> A
,66A B
$num66C F
)66F G
;66G H

lineHeight88 
+=88 !
i88" #
;88# $
}99 
else:: 
{;; 
}PP 
}QQ 
}RR 	
}TT 
}UU Õ
LD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Scripts\RoomTransition.cs
public 
class 
RoomTransition 
: 
MonoBehaviour +
{ 
public 

Vector2 
cameraChange 
;  
public 

Vector3 
playerChange 
;  
private		 
CameraMovement		 
cam		 
;		 
void 
Start	 
( 
) 
{ 
cam 
= 
Camera 
. 
main 
. 
GetComponent &
<& '
CameraMovement' 5
>5 6
(6 7
)7 8
;8 9
} 
void 
Update	 
( 
) 
{ 
} 
private 
void 
OnTriggerEnter2D !
(! "

Collider2D" ,
other- 2
)2 3
{ 
if 

(
 
other 
. 

CompareTag 
( 
$str $
)$ %
)% &
{ 	
cam 
. 
minPosition 
+= 
cameraChange *
;* +
cam 
. 
maxPosition 
+= 
cameraChange *
;* +
other 
. 
	transform 
. 
position $
+=% '
playerChange( 4
;4 5
} 	
} 
}   ªS
qD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\TMP_FrameRateCounter.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class  
TMP_FrameRateCounter %
:& '
MonoBehaviour( 5
{		 
public

 
float

 
UpdateInterval

 #
=

$ %
$num

& *
;

* +
private 
float 
m_LastInterval $
=% &
$num' (
;( )
private 
int 
m_Frames 
= 
$num  
;  !
public 
enum %
FpsCounterAnchorPositions -
{. /
TopLeft0 7
,7 8

BottomLeft9 C
,C D
TopRightE M
,M N
BottomRightO Z
}[ \
;\ ]
public %
FpsCounterAnchorPositions (
AnchorPosition) 7
=8 9%
FpsCounterAnchorPositions: S
.S T
TopRightT \
;\ ]
private 
string 
htmlColorTag #
;# $
private 
const 
string 
fpsLabel %
=& '
$str( a
;a b
private 
TextMeshPro 
m_TextMeshPro )
;) *
private 
	Transform $
m_frameCounter_transform 2
;2 3
private 
Camera 
m_camera 
;  
private %
FpsCounterAnchorPositions )
last_AnchorPosition* =
;= >
void 
Awake 
( 
) 
{ 	
if 
( 
! 
enabled 
) 
return 
; 
m_camera   
=   
Camera   
.   
main   "
;  " #
Application!! 
.!! 
targetFrameRate!! '
=!!( )
$num!!* .
;!!. /

GameObject## 
frameCounter## #
=##$ %
new##& )

GameObject##* 4
(##4 5
$str##5 D
)##D E
;##E F
m_TextMeshPro%% 
=%% 
frameCounter%% (
.%%( )
AddComponent%%) 5
<%%5 6
TextMeshPro%%6 A
>%%A B
(%%B C
)%%C D
;%%D E
m_TextMeshPro&& 
.&& 
font&& 
=&&  
	Resources&&! *
.&&* +
Load&&+ /
<&&/ 0
TMP_FontAsset&&0 =
>&&= >
(&&> ?
$str&&? e
)&&e f
;&&f g
m_TextMeshPro'' 
.'' 
fontSharedMaterial'' ,
=''- .
	Resources''/ 8
.''8 9
Load''9 =
<''= >
Material''> F
>''F G
(''G H
$str''H x
)''x y
;''y z$
m_frameCounter_transform** $
=**% &
frameCounter**' 3
.**3 4
	transform**4 =
;**= >$
m_frameCounter_transform++ $
.++$ %
	SetParent++% .
(++. /
m_camera++/ 7
.++7 8
	transform++8 A
)++A B
;++B C$
m_frameCounter_transform,, $
.,,$ %
localRotation,,% 2
=,,3 4

Quaternion,,5 ?
.,,? @
identity,,@ H
;,,H I
m_TextMeshPro.. 
... 
enableWordWrapping.. ,
=..- .
false../ 4
;..4 5
m_TextMeshPro// 
.// 
fontSize// "
=//# $
$num//% '
;//' (%
Set_FrameCounter_Position:: %
(::% &
AnchorPosition::& 4
)::4 5
;::5 6
last_AnchorPosition;; 
=;;  !
AnchorPosition;;" 0
;;;0 1
}>> 	
void@@ 
Start@@ 
(@@ 
)@@ 
{AA 	
m_LastIntervalBB 
=BB 
TimeBB !
.BB! " 
realtimeSinceStartupBB" 6
;BB6 7
m_FramesCC 
=CC 
$numCC 
;CC 
}DD 	
voidFF 
UpdateFF 
(FF 
)FF 
{GG 	
ifHH 
(HH 
AnchorPositionHH 
!=HH !
last_AnchorPositionHH" 5
)HH5 6%
Set_FrameCounter_PositionII )
(II) *
AnchorPositionII* 8
)II8 9
;II9 :
last_AnchorPositionKK 
=KK  !
AnchorPositionKK" 0
;KK0 1
m_FramesMM 
+=MM 
$numMM 
;MM 
floatNN 
timeNowNN 
=NN 
TimeNN  
.NN  ! 
realtimeSinceStartupNN! 5
;NN5 6
ifPP 
(PP 
timeNowPP 
>PP 
m_LastIntervalPP (
+PP) *
UpdateIntervalPP+ 9
)PP9 :
{QQ 
floatSS 
fpsSS 
=SS 
m_FramesSS $
/SS% &
(SS' (
timeNowSS( /
-SS0 1
m_LastIntervalSS2 @
)SS@ A
;SSA B
floatTT 
msTT 
=TT 
$numTT "
/TT# $
MathfTT% *
.TT* +
MaxTT+ .
(TT. /
fpsTT/ 2
,TT2 3
$numTT4 <
)TT< =
;TT= >
ifVV 
(VV 
fpsVV 
<VV 
$numVV 
)VV 
htmlColorTagWW  
=WW! "
$strWW# 3
;WW3 4
elseXX 
ifXX 
(XX 
fpsXX 
<XX 
$numXX !
)XX! "
htmlColorTagYY  
=YY! "
$strYY# 0
;YY0 1
elseZZ 
htmlColorTag[[  
=[[! "
$str[[# 2
;[[2 3
m_TextMeshPro`` 
.`` 
SetText`` %
(``% &
htmlColorTag``& 2
+``3 4
fpsLabel``5 =
,``= >
fps``? B
,``B C
ms``D F
)``F G
;``G H
m_Framesbb 
=bb 
$numbb 
;bb 
m_LastIntervalcc 
=cc  
timeNowcc! (
;cc( )
}dd 
}ee 	
voidhh %
Set_FrameCounter_Positionhh &
(hh& '%
FpsCounterAnchorPositionshh' @
anchor_positionhhA P
)hhP Q
{ii 	
m_TextMeshProkk 
.kk 
marginkk  
=kk! "
newkk# &
Vector4kk' .
(kk. /
$numkk/ 1
,kk1 2
$numkk3 5
,kk5 6
$numkk7 9
,kk9 :
$numkk; =
)kk= >
;kk> ?
switchmm 
(mm 
anchor_positionmm #
)mm# $
{nn 
caseoo %
FpsCounterAnchorPositionsoo .
.oo. /
TopLeftoo/ 6
:oo6 7
m_TextMeshPropp !
.pp! "
	alignmentpp" +
=pp, - 
TextAlignmentOptionspp. B
.ppB C
TopLeftppC J
;ppJ K
m_TextMeshProqq !
.qq! "
rectTransformqq" /
.qq/ 0
pivotqq0 5
=qq6 7
newqq8 ;
Vector2qq< C
(qqC D
$numqqD E
,qqE F
$numqqG H
)qqH I
;qqI J$
m_frameCounter_transformrr ,
.rr, -
positionrr- 5
=rr6 7
m_camerarr8 @
.rr@ A 
ViewportToWorldPointrrA U
(rrU V
newrrV Y
Vector3rrZ a
(rra b
$numrrb c
,rrc d
$numrre f
,rrf g
$numrrh n
)rrn o
)rro p
;rrp q
breakss 
;ss 
casett %
FpsCounterAnchorPositionstt .
.tt. /

BottomLefttt/ 9
:tt9 :
m_TextMeshProuu !
.uu! "
	alignmentuu" +
=uu, - 
TextAlignmentOptionsuu. B
.uuB C

BottomLeftuuC M
;uuM N
m_TextMeshProvv !
.vv! "
rectTransformvv" /
.vv/ 0
pivotvv0 5
=vv6 7
newvv8 ;
Vector2vv< C
(vvC D
$numvvD E
,vvE F
$numvvG H
)vvH I
;vvI J$
m_frameCounter_transformww ,
.ww, -
positionww- 5
=ww6 7
m_cameraww8 @
.ww@ A 
ViewportToWorldPointwwA U
(wwU V
newwwV Y
Vector3wwZ a
(wwa b
$numwwb c
,wwc d
$numwwe f
,wwf g
$numwwh n
)wwn o
)wwo p
;wwp q
breakxx 
;xx 
caseyy %
FpsCounterAnchorPositionsyy .
.yy. /
TopRightyy/ 7
:yy7 8
m_TextMeshProzz !
.zz! "
	alignmentzz" +
=zz, - 
TextAlignmentOptionszz. B
.zzB C
TopRightzzC K
;zzK L
m_TextMeshPro{{ !
.{{! "
rectTransform{{" /
.{{/ 0
pivot{{0 5
={{6 7
new{{8 ;
Vector2{{< C
({{C D
$num{{D E
,{{E F
$num{{G H
){{H I
;{{I J$
m_frameCounter_transform|| ,
.||, -
position||- 5
=||6 7
m_camera||8 @
.||@ A 
ViewportToWorldPoint||A U
(||U V
new||V Y
Vector3||Z a
(||a b
$num||b c
,||c d
$num||e f
,||f g
$num||h n
)||n o
)||o p
;||p q
break}} 
;}} 
case~~ %
FpsCounterAnchorPositions~~ .
.~~. /
BottomRight~~/ :
:~~: ;
m_TextMeshPro !
.! "
	alignment" +
=, - 
TextAlignmentOptions. B
.B C
BottomRightC N
;N O
m_TextMeshPro
ÄÄ !
.
ÄÄ! "
rectTransform
ÄÄ" /
.
ÄÄ/ 0
pivot
ÄÄ0 5
=
ÄÄ6 7
new
ÄÄ8 ;
Vector2
ÄÄ< C
(
ÄÄC D
$num
ÄÄD E
,
ÄÄE F
$num
ÄÄG H
)
ÄÄH I
;
ÄÄI J&
m_frameCounter_transform
ÅÅ ,
.
ÅÅ, -
position
ÅÅ- 5
=
ÅÅ6 7
m_camera
ÅÅ8 @
.
ÅÅ@ A"
ViewportToWorldPoint
ÅÅA U
(
ÅÅU V
new
ÅÅV Y
Vector3
ÅÅZ a
(
ÅÅa b
$num
ÅÅb c
,
ÅÅc d
$num
ÅÅe f
,
ÅÅf g
$num
ÅÅh n
)
ÅÅn o
)
ÅÅo p
;
ÅÅp q
break
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}
ÑÑ 	
}
ÖÖ 
}ÜÜ ê
kD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\ChatController.cs
public 
class 
ChatController 
: 
MonoBehaviour +
{, -
public 

TMP_InputField 
ChatInputField (
;( )
public

 

TMP_Text

 
ChatDisplayOutput

 %
;

% &
public 

	Scrollbar 
ChatScrollbar "
;" #
void 
OnEnable	 
( 
) 
{ 
ChatInputField 
. 
onSubmit 
.  
AddListener  +
(+ ,
AddToChatOutput, ;
); <
;< =
} 
void 
	OnDisable	 
( 
) 
{ 
ChatInputField 
. 
onSubmit 
.  
RemoveListener  .
(. /
AddToChatOutput/ >
)> ?
;? @
} 
void 
AddToChatOutput	 
( 
string 
newText  '
)' (
{ 
ChatInputField 
. 
text 
= 
string $
.$ %
Empty% *
;* +
var 
timeNow 
= 
System 
. 
DateTime %
.% &
Now& )
;) *
string   
formattedInput   
=   
$str    ,
+  - .
timeNow  / 6
.  6 7
Hour  7 ;
.  ; <
ToString  < D
(  D E
$str  E I
)  I J
+  K L
$str  M P
+  Q R
timeNow  S Z
.  Z [
Minute  [ a
.  a b
ToString  b j
(  j k
$str  k o
)  o p
+  q r
$str  s v
+  w x
timeNow	  y Ä
.
  Ä Å
Second
  Å á
.
  á à
ToString
  à ê
(
  ê ë
$str
  ë ï
)
  ï ñ
+
  ó ò
$str
  ô •
+
  ¶ ß
newText
  ® Ø
;
  Ø ∞
if"" 

("" 
ChatDisplayOutput"" 
!=""  
null""! %
)""% &
{## 	
if&& 
(&& 
ChatDisplayOutput&& !
.&&! "
text&&" &
==&&' )
string&&* 0
.&&0 1
Empty&&1 6
)&&6 7
ChatDisplayOutput'' !
.''! "
text''" &
=''' (
formattedInput'') 7
;''7 8
else(( 
ChatDisplayOutput)) !
.))! "
text))" &
+=))' )
$str))* .
+))/ 0
formattedInput))1 ?
;))? @
}** 	
ChatInputField-- 
.-- 
ActivateInputField-- )
(--) *
)--* +
;--+ ,
ChatScrollbar00 
.00 
value00 
=00 
$num00 
;00  
}11 
}33 ú

HD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Scripts\MusicClass.cs
public 
class 

MusicClass 
: 
MonoBehaviour '
{ 
private 
AudioSource 
_audioSource $
;$ %
private		 
void		 
Awake		 
(		 
)		 
{

 
DontDestroyOnLoad 
( 
	transform #
.# $

gameObject$ .
). /
;/ 0
_audioSource 
= 
GetComponent #
<# $
AudioSource$ /
>/ 0
(0 1
)1 2
;2 3
} 
public 

void 
	PlayMusic 
( 
) 
{ 
if 

( 
_audioSource 
. 
	isPlaying "
)" #
return$ *
;* +
_audioSource 
. 
Play 
( 
) 
; 
} 
public 

void 
	StopMusic 
( 
) 
{ 
_audioSource 
. 
Stop 
( 
) 
; 
} 
} ”r
iD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\VertexJitter.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class 
VertexJitter 
: 
MonoBehaviour  -
{		 
public 
float 
AngleMultiplier $
=% &
$num' +
;+ ,
public 
float 
SpeedMultiplier $
=% &
$num' +
;+ ,
public 
float 

CurveScale 
=  !
$num" &
;& '
private 
TMP_Text 
m_TextComponent (
;( )
private 
bool 
hasTextChanged #
;# $
private 
struct 

VertexAnim !
{ 	
public 
float 

angleRange #
;# $
public 
float 
angle 
; 
public 
float 
speed 
; 
} 	
void 
Awake 
( 
) 
{ 	
m_TextComponent 
= 
GetComponent *
<* +
TMP_Text+ 3
>3 4
(4 5
)5 6
;6 7
} 	
void!! 
OnEnable!! 
(!! 
)!! 
{"" 	
TMPro_EventManager$$ 
.$$ 
TEXT_CHANGED_EVENT$$ 1
.$$1 2
Add$$2 5
($$5 6
ON_TEXT_CHANGED$$6 E
)$$E F
;$$F G
}%% 	
void'' 
	OnDisable'' 
('' 
)'' 
{(( 	
TMPro_EventManager)) 
.)) 
TEXT_CHANGED_EVENT)) 1
.))1 2
Remove))2 8
())8 9
ON_TEXT_CHANGED))9 H
)))H I
;))I J
}** 	
void-- 
Start-- 
(-- 
)-- 
{.. 	
StartCoroutine// 
(// 
AnimateVertexColors// .
(//. /
)/// 0
)//0 1
;//1 2
}00 	
void33 
ON_TEXT_CHANGED33 
(33 
Object33 #
obj33$ '
)33' (
{44 	
if55 
(55 
obj55 
==55 
m_TextComponent55 &
)55& '
hasTextChanged66 
=66  
true66! %
;66% &
}77 	
IEnumerator== 
AnimateVertexColors== '
(==' (
)==( )
{>> 	
m_TextComponentBB 
.BB 
ForceMeshUpdateBB +
(BB+ ,
)BB, -
;BB- .
TMP_TextInfoDD 
textInfoDD !
=DD" #
m_TextComponentDD$ 3
.DD3 4
textInfoDD4 <
;DD< =
	Matrix4x4FF 
matrixFF 
;FF 
intHH 
	loopCountHH 
=HH 
$numHH 
;HH 
hasTextChangedII 
=II 
trueII !
;II! "

VertexAnimLL 
[LL 
]LL 

vertexAnimLL #
=LL$ %
newLL& )

VertexAnimLL* 4
[LL4 5
$numLL5 9
]LL9 :
;LL: ;
forMM 
(MM 
intMM 
iMM 
=MM 
$numMM 
;MM 
iMM 
<MM 
$numMM  $
;MM$ %
iMM& '
++MM' )
)MM) *
{NN 

vertexAnimOO 
[OO 
iOO 
]OO 
.OO 

angleRangeOO (
=OO) *
RandomOO+ 1
.OO1 2
RangeOO2 7
(OO7 8
$numOO8 ;
,OO; <
$numOO= @
)OO@ A
;OOA B

vertexAnimPP 
[PP 
iPP 
]PP 
.PP 
speedPP #
=PP$ %
RandomPP& ,
.PP, -
RangePP- 2
(PP2 3
$numPP3 5
,PP5 6
$numPP7 9
)PP9 :
;PP: ;
}QQ 
TMP_MeshInfoTT 
[TT 
]TT 
cachedMeshInfoTT )
=TT* +
textInfoTT, 4
.TT4 5"
CopyMeshInfoVertexDataTT5 K
(TTK L
)TTL M
;TTM N
whileVV 
(VV 
trueVV 
)VV 
{WW 
ifYY 
(YY 
hasTextChangedYY "
)YY" #
{ZZ 
cachedMeshInfo\\ "
=\\# $
textInfo\\% -
.\\- ."
CopyMeshInfoVertexData\\. D
(\\D E
)\\E F
;\\F G
hasTextChanged^^ "
=^^# $
false^^% *
;^^* +
}__ 
intaa 
characterCountaa "
=aa# $
textInfoaa% -
.aa- .
characterCountaa. <
;aa< =
ifdd 
(dd 
characterCountdd "
==dd# %
$numdd& '
)dd' (
{ee 
yieldff 
returnff  
newff! $
WaitForSecondsff% 3
(ff3 4
$numff4 9
)ff9 :
;ff: ;
continuegg 
;gg 
}hh 
forkk 
(kk 
intkk 
ikk 
=kk 
$numkk 
;kk 
ikk  !
<kk" #
characterCountkk$ 2
;kk2 3
ikk4 5
++kk5 7
)kk7 8
{ll 
TMP_CharacterInfomm %
charInfomm& .
=mm/ 0
textInfomm1 9
.mm9 :
characterInfomm: G
[mmG H
immH I
]mmI J
;mmJ K
ifpp 
(pp 
!pp 
charInfopp !
.pp! "
	isVisiblepp" +
)pp+ ,
continueqq  
;qq  !

VertexAnimtt 
vertAnimtt '
=tt( )

vertexAnimtt* 4
[tt4 5
itt5 6
]tt6 7
;tt7 8
intww 
materialIndexww %
=ww& '
textInfoww( 0
.ww0 1
characterInfoww1 >
[ww> ?
iww? @
]ww@ A
.wwA B"
materialReferenceIndexwwB X
;wwX Y
intzz 
vertexIndexzz #
=zz$ %
textInfozz& .
.zz. /
characterInfozz/ <
[zz< =
izz= >
]zz> ?
.zz? @
vertexIndexzz@ K
;zzK L
Vector3}} 
[}} 
]}} 
sourceVertices}} ,
=}}- .
cachedMeshInfo}}/ =
[}}= >
materialIndex}}> K
]}}K L
.}}L M
vertices}}M U
;}}U V
Vector2
ÇÇ 
charMidBasline
ÇÇ *
=
ÇÇ+ ,
(
ÇÇ- .
sourceVertices
ÇÇ. <
[
ÇÇ< =
vertexIndex
ÇÇ= H
+
ÇÇI J
$num
ÇÇK L
]
ÇÇL M
+
ÇÇN O
sourceVertices
ÇÇP ^
[
ÇÇ^ _
vertexIndex
ÇÇ_ j
+
ÇÇk l
$num
ÇÇm n
]
ÇÇn o
)
ÇÇo p
/
ÇÇq r
$num
ÇÇs t
;
ÇÇt u
Vector3
ÜÜ 
offset
ÜÜ "
=
ÜÜ# $
charMidBasline
ÜÜ% 3
;
ÜÜ3 4
Vector3
àà 
[
àà 
]
àà !
destinationVertices
àà 1
=
àà2 3
textInfo
àà4 <
.
àà< =
meshInfo
àà= E
[
ààE F
materialIndex
ààF S
]
ààS T
.
ààT U
vertices
ààU ]
;
àà] ^!
destinationVertices
ää '
[
ää' (
vertexIndex
ää( 3
+
ää4 5
$num
ää6 7
]
ää7 8
=
ää9 :
sourceVertices
ää; I
[
ääI J
vertexIndex
ääJ U
+
ääV W
$num
ääX Y
]
ääY Z
-
ää[ \
offset
ää] c
;
ääc d!
destinationVertices
ãã '
[
ãã' (
vertexIndex
ãã( 3
+
ãã4 5
$num
ãã6 7
]
ãã7 8
=
ãã9 :
sourceVertices
ãã; I
[
ããI J
vertexIndex
ããJ U
+
ããV W
$num
ããX Y
]
ããY Z
-
ãã[ \
offset
ãã] c
;
ããc d!
destinationVertices
åå '
[
åå' (
vertexIndex
åå( 3
+
åå4 5
$num
åå6 7
]
åå7 8
=
åå9 :
sourceVertices
åå; I
[
ååI J
vertexIndex
ååJ U
+
ååV W
$num
ååX Y
]
ååY Z
-
åå[ \
offset
åå] c
;
ååc d!
destinationVertices
çç '
[
çç' (
vertexIndex
çç( 3
+
çç4 5
$num
çç6 7
]
çç7 8
=
çç9 :
sourceVertices
çç; I
[
ççI J
vertexIndex
ççJ U
+
ççV W
$num
ççX Y
]
ççY Z
-
çç[ \
offset
çç] c
;
ççc d
vertAnim
èè 
.
èè 
angle
èè "
=
èè# $
Mathf
èè% *
.
èè* +

SmoothStep
èè+ 5
(
èè5 6
-
èè6 7
vertAnim
èè7 ?
.
èè? @

angleRange
èè@ J
,
èèJ K
vertAnim
èèL T
.
èèT U

angleRange
èèU _
,
èè_ `
Mathf
èèa f
.
èèf g
PingPong
èèg o
(
èèo p
	loopCount
èèp y
/
èèz {
$num
èè| 
*èèÄ Å
vertAnimèèÇ ä
.èèä ã
speedèèã ê
,èèê ë
$numèèí î
)èèî ï
)èèï ñ
;èèñ ó
Vector3
êê 
jitterOffset
êê (
=
êê) *
new
êê+ .
Vector3
êê/ 6
(
êê6 7
Random
êê7 =
.
êê= >
Range
êê> C
(
êêC D
-
êêD E
$num
êêE I
,
êêI J
$num
êêK O
)
êêO P
,
êêP Q
Random
êêR X
.
êêX Y
Range
êêY ^
(
êê^ _
-
êê_ `
$num
êê` d
,
êêd e
$num
êêf j
)
êêj k
,
êêk l
$num
êêm n
)
êên o
;
êêo p
matrix
íí 
=
íí 
	Matrix4x4
íí &
.
íí& '
TRS
íí' *
(
íí* +
jitterOffset
íí+ 7
*
íí8 9

CurveScale
íí: D
,
ííD E

Quaternion
ííF P
.
ííP Q
Euler
ííQ V
(
ííV W
$num
ííW X
,
ííX Y
$num
ííZ [
,
íí[ \
Random
íí] c
.
ííc d
Range
ííd i
(
ííi j
-
ííj k
$num
íík m
,
íím n
$num
íío q
)
ííq r
*
íís t
AngleMultiplierííu Ñ
)ííÑ Ö
,ííÖ Ü
Vector3ííá é
.ííé è
oneííè í
)ííí ì
;ííì î!
destinationVertices
îî '
[
îî' (
vertexIndex
îî( 3
+
îî4 5
$num
îî6 7
]
îî7 8
=
îî9 :
matrix
îî; A
.
îîA B
MultiplyPoint3x4
îîB R
(
îîR S!
destinationVertices
îîS f
[
îîf g
vertexIndex
îîg r
+
îîs t
$num
îîu v
]
îîv w
)
îîw x
;
îîx y!
destinationVertices
ïï '
[
ïï' (
vertexIndex
ïï( 3
+
ïï4 5
$num
ïï6 7
]
ïï7 8
=
ïï9 :
matrix
ïï; A
.
ïïA B
MultiplyPoint3x4
ïïB R
(
ïïR S!
destinationVertices
ïïS f
[
ïïf g
vertexIndex
ïïg r
+
ïïs t
$num
ïïu v
]
ïïv w
)
ïïw x
;
ïïx y!
destinationVertices
ññ '
[
ññ' (
vertexIndex
ññ( 3
+
ññ4 5
$num
ññ6 7
]
ññ7 8
=
ññ9 :
matrix
ññ; A
.
ññA B
MultiplyPoint3x4
ññB R
(
ññR S!
destinationVertices
ññS f
[
ññf g
vertexIndex
ññg r
+
ññs t
$num
ññu v
]
ññv w
)
ññw x
;
ññx y!
destinationVertices
óó '
[
óó' (
vertexIndex
óó( 3
+
óó4 5
$num
óó6 7
]
óó7 8
=
óó9 :
matrix
óó; A
.
óóA B
MultiplyPoint3x4
óóB R
(
óóR S!
destinationVertices
óóS f
[
óóf g
vertexIndex
óóg r
+
óós t
$num
óóu v
]
óóv w
)
óów x
;
óóx y!
destinationVertices
ôô '
[
ôô' (
vertexIndex
ôô( 3
+
ôô4 5
$num
ôô6 7
]
ôô7 8
+=
ôô9 ;
offset
ôô< B
;
ôôB C!
destinationVertices
öö '
[
öö' (
vertexIndex
öö( 3
+
öö4 5
$num
öö6 7
]
öö7 8
+=
öö9 ;
offset
öö< B
;
ööB C!
destinationVertices
õõ '
[
õõ' (
vertexIndex
õõ( 3
+
õõ4 5
$num
õõ6 7
]
õõ7 8
+=
õõ9 ;
offset
õõ< B
;
õõB C!
destinationVertices
úú '
[
úú' (
vertexIndex
úú( 3
+
úú4 5
$num
úú6 7
]
úú7 8
+=
úú9 ;
offset
úú< B
;
úúB C

vertexAnim
ûû 
[
ûû 
i
ûû  
]
ûû  !
=
ûû" #
vertAnim
ûû$ ,
;
ûû, -
}
üü 
for
¢¢ 
(
¢¢ 
int
¢¢ 
i
¢¢ 
=
¢¢ 
$num
¢¢ 
;
¢¢ 
i
¢¢  !
<
¢¢" #
textInfo
¢¢$ ,
.
¢¢, -
meshInfo
¢¢- 5
.
¢¢5 6
Length
¢¢6 <
;
¢¢< =
i
¢¢> ?
++
¢¢? A
)
¢¢A B
{
££ 
textInfo
§§ 
.
§§ 
meshInfo
§§ %
[
§§% &
i
§§& '
]
§§' (
.
§§( )
mesh
§§) -
.
§§- .
vertices
§§. 6
=
§§7 8
textInfo
§§9 A
.
§§A B
meshInfo
§§B J
[
§§J K
i
§§K L
]
§§L M
.
§§M N
vertices
§§N V
;
§§V W
m_TextComponent
•• #
.
••# $
UpdateGeometry
••$ 2
(
••2 3
textInfo
••3 ;
.
••; <
meshInfo
••< D
[
••D E
i
••E F
]
••F G
.
••G H
mesh
••H L
,
••L M
i
••N O
)
••O P
;
••P Q
}
¶¶ 
	loopCount
®® 
+=
®® 
$num
®® 
;
®® 
yield
™™ 
return
™™ 
new
™™  
WaitForSeconds
™™! /
(
™™/ 0
$num
™™0 4
)
™™4 5
;
™™5 6
}
´´ 
}
¨¨ 	
}
ÆÆ 
}ØØ ‘¶
tD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\TextMeshProFloatingText.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class #
TextMeshProFloatingText (
:) *
MonoBehaviour+ 8
{		 
public

 
Font

 
TheFont

 
;

 
private 

GameObject 
m_floatingText )
;) *
private 
TextMeshPro 
m_textMeshPro )
;) *
private 
TextMesh 

m_textMesh #
;# $
private 
	Transform 
m_transform %
;% &
private 
	Transform $
m_floatingText_Transform 2
;2 3
private 
	Transform 
m_cameraTransform +
;+ ,
Vector3 
lastPOS 
= 
Vector3 !
.! "
zero" &
;& '

Quaternion 
lastRotation 
=  !

Quaternion" ,
., -
identity- 5
;5 6
public 
int 
	SpawnType 
; 
public 
bool #
IsTextObjectScaleStatic +
;+ ,
static 
WaitForEndOfFrame  
k_WaitForEndOfFrame! 4
=5 6
new7 :
WaitForEndOfFrame; L
(L M
)M N
;N O
static 
WaitForSeconds 
[ 
] "
k_WaitForSecondsRandom  6
=7 8
new9 <
WaitForSeconds= K
[K L
]L M
{ 	
new 
WaitForSeconds 
( 
$num $
)$ %
,% &
new' *
WaitForSeconds+ 9
(9 :
$num: >
)> ?
,? @
newA D
WaitForSecondsE S
(S T
$numT Y
)Y Z
,Z [
new\ _
WaitForSeconds` n
(n o
$numo s
)s t
,t u
newv y
WaitForSeconds	z à
(
à â
$num
â é
)
é è
,
è ê
new   
WaitForSeconds   
(   
$num   #
)  # $
,  $ %
new  & )
WaitForSeconds  * 8
(  8 9
$num  9 >
)  > ?
,  ? @
new  A D
WaitForSeconds  E S
(  S T
$num  T X
)  X Y
,  Y Z
new  [ ^
WaitForSeconds  _ m
(  m n
$num  n s
)  s t
,  t u
new  v y
WaitForSeconds	  z à
(
  à â
$num
  â ç
)
  ç é
,
  é è
new!! 
WaitForSeconds!! 
(!! 
$num!! $
)!!$ %
,!!% &
new!!' *
WaitForSeconds!!+ 9
(!!9 :
$num!!: >
)!!> ?
,!!? @
new!!A D
WaitForSeconds!!E S
(!!S T
$num!!T Y
)!!Y Z
,!!Z [
new!!\ _
WaitForSeconds!!` n
(!!n o
$num!!o s
)!!s t
,!!t u
new!!v y
WaitForSeconds	!!z à
(
!!à â
$num
!!â é
)
!!é è
,
!!è ê
new"" 
WaitForSeconds"" 
("" 
$num"" #
)""# $
,""$ %
new""& )
WaitForSeconds""* 8
(""8 9
$num""9 >
)""> ?
,""? @
new""A D
WaitForSeconds""E S
(""S T
$num""T X
)""X Y
,""Y Z
new""[ ^
WaitForSeconds""_ m
(""m n
$num""n s
)""s t
,""t u
new""v y
WaitForSeconds	""z à
(
""à â
$num
""â ç
)
""ç é
,
""é è
}## 	
;##	 

void%% 
Awake%% 
(%% 
)%% 
{&& 	
m_transform'' 
='' 
	transform'' #
;''# $
m_floatingText(( 
=(( 
new((  

GameObject((! +
(((+ ,
this((, 0
.((0 1
name((1 5
+((6 7
$str((8 H
)((H I
;((I J
m_cameraTransform.. 
=.. 
Camera..  &
...& '
main..' +
...+ ,
	transform.., 5
;..5 6
}// 	
void11 
Start11 
(11 
)11 
{22 	
if33 
(33 
	SpawnType33 
==33 
$num33 
)33 
{44 
m_textMeshPro66 
=66 
m_floatingText66  .
.66. /
AddComponent66/ ;
<66; <
TextMeshPro66< G
>66G H
(66H I
)66I J
;66J K
m_textMeshPro77 
.77 
rectTransform77 +
.77+ ,
	sizeDelta77, 5
=776 7
new778 ;
Vector277< C
(77C D
$num77D E
,77E F
$num77G H
)77H I
;77I J$
m_floatingText_Transform99 (
=99) *
m_floatingText99+ 9
.999 :
	transform99: C
;99C D$
m_floatingText_Transform:: (
.::( )
position::) 1
=::2 3
m_transform::4 ?
.::? @
position::@ H
+::I J
new::K N
Vector3::O V
(::V W
$num::W X
,::X Y
$num::Z ]
,::] ^
$num::_ `
)::` a
;::a b
m_textMeshPro?? 
.?? 
	alignment?? '
=??( ) 
TextAlignmentOptions??* >
.??> ?
Center??? E
;??E F
m_textMeshPro@@ 
.@@ 
color@@ #
=@@$ %
new@@& )
Color32@@* 1
(@@1 2
(@@2 3
byte@@3 7
)@@7 8
Random@@8 >
.@@> ?
Range@@? D
(@@D E
$num@@E F
,@@F G
$num@@H K
)@@K L
,@@L M
(@@N O
byte@@O S
)@@S T
Random@@T Z
.@@Z [
Range@@[ `
(@@` a
$num@@a b
,@@b c
$num@@d g
)@@g h
,@@h i
(@@j k
byte@@k o
)@@o p
Random@@p v
.@@v w
Range@@w |
(@@| }
$num@@} ~
,@@~ 
$num
@@Ä É
)
@@É Ñ
,
@@Ñ Ö
$num
@@Ü â
)
@@â ä
;
@@ä ã
m_textMeshProAA 
.AA 
fontSizeAA &
=AA' (
$numAA) +
;AA+ ,
m_textMeshProDD 
.DD 
enableKerningDD +
=DD, -
falseDD. 3
;DD3 4
m_textMeshProEE 
.EE 
textEE "
=EE# $
stringEE% +
.EE+ ,
EmptyEE, 1
;EE1 2
m_textMeshProFF 
.FF #
isTextObjectScaleStaticFF 5
=FF6 7#
IsTextObjectScaleStaticFF8 O
;FFO P
StartCoroutineHH 
(HH *
DisplayTextMeshProFloatingTextHH =
(HH= >
)HH> ?
)HH? @
;HH@ A
}II 
elseJJ 
ifJJ 
(JJ 
	SpawnTypeJJ 
==JJ !
$numJJ" #
)JJ# $
{KK $
m_floatingText_TransformNN (
=NN) *
m_floatingTextNN+ 9
.NN9 :
	transformNN: C
;NNC D$
m_floatingText_TransformOO (
.OO( )
positionOO) 1
=OO2 3
m_transformOO4 ?
.OO? @
positionOO@ H
+OOI J
newOOK N
Vector3OOO V
(OOV W
$numOOW X
,OOX Y
$numOOZ ]
,OO] ^
$numOO_ `
)OO` a
;OOa b

m_textMeshQQ 
=QQ 
m_floatingTextQQ +
.QQ+ ,
AddComponentQQ, 8
<QQ8 9
TextMeshQQ9 A
>QQA B
(QQB C
)QQC D
;QQD E

m_textMeshRR 
.RR 
fontRR 
=RR  !
	ResourcesRR" +
.RR+ ,
LoadRR, 0
<RR0 1
FontRR1 5
>RR5 6
(RR6 7
$strRR7 D
)RRD E
;RRE F

m_textMeshSS 
.SS 
GetComponentSS '
<SS' (
RendererSS( 0
>SS0 1
(SS1 2
)SS2 3
.SS3 4
sharedMaterialSS4 B
=SSC D

m_textMeshSSE O
.SSO P
fontSSP T
.SST U
materialSSU ]
;SS] ^

m_textMeshTT 
.TT 
colorTT  
=TT! "
newTT# &
Color32TT' .
(TT. /
(TT/ 0
byteTT0 4
)TT4 5
RandomTT5 ;
.TT; <
RangeTT< A
(TTA B
$numTTB C
,TTC D
$numTTE H
)TTH I
,TTI J
(TTK L
byteTTL P
)TTP Q
RandomTTQ W
.TTW X
RangeTTX ]
(TT] ^
$numTT^ _
,TT_ `
$numTTa d
)TTd e
,TTe f
(TTg h
byteTTh l
)TTl m
RandomTTm s
.TTs t
RangeTTt y
(TTy z
$numTTz {
,TT{ |
$num	TT} Ä
)
TTÄ Å
,
TTÅ Ç
$num
TTÉ Ü
)
TTÜ á
;
TTá à

m_textMeshUU 
.UU 
anchorUU !
=UU" #

TextAnchorUU$ .
.UU. /
LowerCenterUU/ :
;UU: ;

m_textMeshVV 
.VV 
fontSizeVV #
=VV$ %
$numVV& (
;VV( )
StartCoroutineXX 
(XX '
DisplayTextMeshFloatingTextXX :
(XX: ;
)XX; <
)XX< =
;XX= >
}YY 
elseZZ 
ifZZ 
(ZZ 
	SpawnTypeZZ 
==ZZ !
$numZZ" #
)ZZ# $
{[[ 
}]] 
}__ 	
publicqq 
IEnumeratorqq *
DisplayTextMeshProFloatingTextqq 9
(qq9 :
)qq: ;
{rr 	
floatss 
CountDurationss 
=ss  !
$numss" &
;ss& '
floattt 
starting_Counttt  
=tt! "
Randomtt# )
.tt) *
Rangett* /
(tt/ 0
$numtt0 2
,tt2 3
$numtt4 7
)tt7 8
;tt8 9
floatuu 
current_Countuu 
=uu  !
starting_Countuu" 0
;uu0 1
Vector3ww 
	start_posww 
=ww $
m_floatingText_Transformww  8
.ww8 9
positionww9 A
;wwA B
Color32xx 
start_colorxx 
=xx  !
m_textMeshProxx" /
.xx/ 0
colorxx0 5
;xx5 6
floatyy 
alphayy 
=yy 
$numyy 
;yy 
intzz 
int_counterzz 
=zz 
$numzz 
;zz  
float}} 
fadeDuration}} 
=}}  
$num}}! "
/}}# $
starting_Count}}% 3
*}}4 5
CountDuration}}6 C
;}}C D
while 
( 
current_Count  
>! "
$num# $
)$ %
{
ÄÄ 
current_Count
ÅÅ 
-=
ÅÅ  
(
ÅÅ! "
Time
ÅÅ" &
.
ÅÅ& '
	deltaTime
ÅÅ' 0
/
ÅÅ1 2
CountDuration
ÅÅ3 @
)
ÅÅ@ A
*
ÅÅB C
starting_Count
ÅÅD R
;
ÅÅR S
if
ÉÉ 
(
ÉÉ 
current_Count
ÉÉ !
<=
ÉÉ" $
$num
ÉÉ% &
)
ÉÉ& '
{
ÑÑ 
alpha
ÜÜ 
=
ÜÜ 
Mathf
ÜÜ !
.
ÜÜ! "
Clamp
ÜÜ" '
(
ÜÜ' (
alpha
ÜÜ( -
-
ÜÜ. /
(
ÜÜ0 1
Time
ÜÜ1 5
.
ÜÜ5 6
	deltaTime
ÜÜ6 ?
/
ÜÜ@ A
fadeDuration
ÜÜB N
)
ÜÜN O
*
ÜÜP Q
$num
ÜÜR U
,
ÜÜU V
$num
ÜÜW X
,
ÜÜX Y
$num
ÜÜZ ]
)
ÜÜ] ^
;
ÜÜ^ _
}
áá 
int_counter
ââ 
=
ââ 
(
ââ 
int
ââ "
)
ââ" #
current_Count
ââ# 0
;
ââ0 1
m_textMeshPro
ää 
.
ää 
text
ää "
=
ää# $
int_counter
ää% 0
.
ää0 1
ToString
ää1 9
(
ää9 :
)
ää: ;
;
ää; <
m_textMeshPro
çç 
.
çç 
color
çç #
=
çç$ %
new
çç& )
Color32
çç* 1
(
çç1 2
start_color
çç2 =
.
çç= >
r
çç> ?
,
çç? @
start_color
ççA L
.
ççL M
g
ççM N
,
ççN O
start_color
ççP [
.
çç[ \
b
çç\ ]
,
çç] ^
(
çç_ `
byte
çç` d
)
ççd e
alpha
ççe j
)
ççj k
;
ççk l&
m_floatingText_Transform
êê (
.
êê( )
position
êê) 1
+=
êê2 4
new
êê5 8
Vector3
êê9 @
(
êê@ A
$num
êêA B
,
êêB C
starting_Count
êêD R
*
êêS T
Time
êêU Y
.
êêY Z
	deltaTime
êêZ c
,
êêc d
$num
êêe f
)
êêf g
;
êêg h
if
ìì 
(
ìì 
!
ìì 
lastPOS
ìì 
.
ìì 
Compare
ìì $
(
ìì$ %
m_cameraTransform
ìì% 6
.
ìì6 7
position
ìì7 ?
,
ìì? @
$num
ììA E
)
ììE F
||
ììG I
!
ììJ K
lastRotation
ììK W
.
ììW X
Compare
ììX _
(
ìì_ `
m_cameraTransform
ìì` q
.
ììq r
rotation
ììr z
,
ììz {
$numìì| Ä
)ììÄ Å
)ììÅ Ç
{
îî 
lastPOS
ïï 
=
ïï 
m_cameraTransform
ïï /
.
ïï/ 0
position
ïï0 8
;
ïï8 9
lastRotation
ññ  
=
ññ! "
m_cameraTransform
ññ# 4
.
ññ4 5
rotation
ññ5 =
;
ññ= >&
m_floatingText_Transform
óó ,
.
óó, -
rotation
óó- 5
=
óó6 7
lastRotation
óó8 D
;
óóD E
Vector3
òò 
dir
òò 
=
òò  !
m_transform
òò" -
.
òò- .
position
òò. 6
-
òò7 8
lastPOS
òò9 @
;
òò@ A
m_transform
ôô 
.
ôô  
forward
ôô  '
=
ôô( )
new
ôô* -
Vector3
ôô. 5
(
ôô5 6
dir
ôô6 9
.
ôô9 :
x
ôô: ;
,
ôô; <
$num
ôô= >
,
ôô> ?
dir
ôô@ C
.
ôôC D
z
ôôD E
)
ôôE F
;
ôôF G
}
öö 
yield
úú 
return
úú !
k_WaitForEndOfFrame
úú 0
;
úú0 1
}
ùù 
yield
°° 
return
°° $
k_WaitForSecondsRandom
°° /
[
°°/ 0
Random
°°0 6
.
°°6 7
Range
°°7 <
(
°°< =
$num
°°= >
,
°°> ?
$num
°°@ B
)
°°B C
]
°°C D
;
°°D E&
m_floatingText_Transform
££ $
.
££$ %
position
££% -
=
££. /
	start_pos
££0 9
;
££9 :
StartCoroutine
•• 
(
•• ,
DisplayTextMeshProFloatingText
•• 9
(
••9 :
)
••: ;
)
••; <
;
••< =
}
¶¶ 	
public
©© 
IEnumerator
©© )
DisplayTextMeshFloatingText
©© 6
(
©©6 7
)
©©7 8
{
™™ 	
float
´´ 
CountDuration
´´ 
=
´´  !
$num
´´" &
;
´´& '
float
¨¨ 
starting_Count
¨¨  
=
¨¨! "
Random
¨¨# )
.
¨¨) *
Range
¨¨* /
(
¨¨/ 0
$num
¨¨0 2
,
¨¨2 3
$num
¨¨4 7
)
¨¨7 8
;
¨¨8 9
float
≠≠ 
current_Count
≠≠ 
=
≠≠  !
starting_Count
≠≠" 0
;
≠≠0 1
Vector3
ØØ 
	start_pos
ØØ 
=
ØØ &
m_floatingText_Transform
ØØ  8
.
ØØ8 9
position
ØØ9 A
;
ØØA B
Color32
∞∞ 
start_color
∞∞ 
=
∞∞  !

m_textMesh
∞∞" ,
.
∞∞, -
color
∞∞- 2
;
∞∞2 3
float
±± 
alpha
±± 
=
±± 
$num
±± 
;
±± 
int
≤≤ 
int_counter
≤≤ 
=
≤≤ 
$num
≤≤ 
;
≤≤  
float
¥¥ 
fadeDuration
¥¥ 
=
¥¥  
$num
¥¥! "
/
¥¥# $
starting_Count
¥¥% 3
*
¥¥4 5
CountDuration
¥¥6 C
;
¥¥C D
while
∂∂ 
(
∂∂ 
current_Count
∂∂  
>
∂∂! "
$num
∂∂# $
)
∂∂$ %
{
∑∑ 
current_Count
∏∏ 
-=
∏∏  
(
∏∏! "
Time
∏∏" &
.
∏∏& '
	deltaTime
∏∏' 0
/
∏∏1 2
CountDuration
∏∏3 @
)
∏∏@ A
*
∏∏B C
starting_Count
∏∏D R
;
∏∏R S
if
∫∫ 
(
∫∫ 
current_Count
∫∫ !
<=
∫∫" $
$num
∫∫% &
)
∫∫& '
{
ªª 
alpha
ΩΩ 
=
ΩΩ 
Mathf
ΩΩ !
.
ΩΩ! "
Clamp
ΩΩ" '
(
ΩΩ' (
alpha
ΩΩ( -
-
ΩΩ. /
(
ΩΩ0 1
Time
ΩΩ1 5
.
ΩΩ5 6
	deltaTime
ΩΩ6 ?
/
ΩΩ@ A
fadeDuration
ΩΩB N
)
ΩΩN O
*
ΩΩP Q
$num
ΩΩR U
,
ΩΩU V
$num
ΩΩW X
,
ΩΩX Y
$num
ΩΩZ ]
)
ΩΩ] ^
;
ΩΩ^ _
}
ææ 
int_counter
¿¿ 
=
¿¿ 
(
¿¿ 
int
¿¿ "
)
¿¿" #
current_Count
¿¿# 0
;
¿¿0 1

m_textMesh
¡¡ 
.
¡¡ 
text
¡¡ 
=
¡¡  !
int_counter
¡¡" -
.
¡¡- .
ToString
¡¡. 6
(
¡¡6 7
)
¡¡7 8
;
¡¡8 9

m_textMesh
ƒƒ 
.
ƒƒ 
color
ƒƒ  
=
ƒƒ! "
new
ƒƒ# &
Color32
ƒƒ' .
(
ƒƒ. /
start_color
ƒƒ/ :
.
ƒƒ: ;
r
ƒƒ; <
,
ƒƒ< =
start_color
ƒƒ> I
.
ƒƒI J
g
ƒƒJ K
,
ƒƒK L
start_color
ƒƒM X
.
ƒƒX Y
b
ƒƒY Z
,
ƒƒZ [
(
ƒƒ\ ]
byte
ƒƒ] a
)
ƒƒa b
alpha
ƒƒb g
)
ƒƒg h
;
ƒƒh i&
m_floatingText_Transform
«« (
.
««( )
position
««) 1
+=
««2 4
new
««5 8
Vector3
««9 @
(
««@ A
$num
««A B
,
««B C
starting_Count
««D R
*
««S T
Time
««U Y
.
««Y Z
	deltaTime
««Z c
,
««c d
$num
««e f
)
««f g
;
««g h
if
   
(
   
!
   
lastPOS
   
.
   
Compare
   $
(
  $ %
m_cameraTransform
  % 6
.
  6 7
position
  7 ?
,
  ? @
$num
  A E
)
  E F
||
  G I
!
  J K
lastRotation
  K W
.
  W X
Compare
  X _
(
  _ `
m_cameraTransform
  ` q
.
  q r
rotation
  r z
,
  z {
$num  | Ä
)  Ä Å
)  Å Ç
{
ÀÀ 
lastPOS
ÃÃ 
=
ÃÃ 
m_cameraTransform
ÃÃ /
.
ÃÃ/ 0
position
ÃÃ0 8
;
ÃÃ8 9
lastRotation
ÕÕ  
=
ÕÕ! "
m_cameraTransform
ÕÕ# 4
.
ÕÕ4 5
rotation
ÕÕ5 =
;
ÕÕ= >&
m_floatingText_Transform
ŒŒ ,
.
ŒŒ, -
rotation
ŒŒ- 5
=
ŒŒ6 7
lastRotation
ŒŒ8 D
;
ŒŒD E
Vector3
œœ 
dir
œœ 
=
œœ  !
m_transform
œœ" -
.
œœ- .
position
œœ. 6
-
œœ7 8
lastPOS
œœ9 @
;
œœ@ A
m_transform
–– 
.
––  
forward
––  '
=
––( )
new
––* -
Vector3
––. 5
(
––5 6
dir
––6 9
.
––9 :
x
––: ;
,
––; <
$num
––= >
,
––> ?
dir
––@ C
.
––C D
z
––D E
)
––E F
;
––F G
}
—— 
yield
”” 
return
”” !
k_WaitForEndOfFrame
”” 0
;
””0 1
}
‘‘ 
yield
ÿÿ 
return
ÿÿ $
k_WaitForSecondsRandom
ÿÿ /
[
ÿÿ/ 0
Random
ÿÿ0 6
.
ÿÿ6 7
Range
ÿÿ7 <
(
ÿÿ< =
$num
ÿÿ= >
,
ÿÿ> ?
$num
ÿÿ@ B
)
ÿÿB C
]
ÿÿC D
;
ÿÿD E&
m_floatingText_Transform
⁄⁄ $
.
⁄⁄$ %
position
⁄⁄% -
=
⁄⁄. /
	start_pos
⁄⁄0 9
;
⁄⁄9 :
StartCoroutine
‹‹ 
(
‹‹ )
DisplayTextMeshFloatingText
‹‹ 6
(
‹‹6 7
)
‹‹7 8
)
‹‹8 9
;
‹‹9 :
}
›› 	
}
ﬁﬁ 
}ﬂﬂ ‚î
qD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\TMP_TextEventHandler.cs
	namespace 	
TMPro
 
{ 
public

 

class

  
TMP_TextEventHandler

 %
:

& '
MonoBehaviour

( 5
,

5 6 
IPointerEnterHandler

7 K
,

K L
IPointerExitHandler

M `
{ 
[ 	
Serializable	 
] 
public 
class #
CharacterSelectionEvent ,
:- .

UnityEvent/ 9
<9 :
char: >
,> ?
int@ C
>C D
{E F
}G H
[ 	
Serializable	 
] 
public 
class  
SpriteSelectionEvent )
:* +

UnityEvent, 6
<6 7
char7 ;
,; <
int= @
>@ A
{B C
}D E
[ 	
Serializable	 
] 
public 
class 
WordSelectionEvent '
:( )

UnityEvent* 4
<4 5
string5 ;
,; <
int= @
,@ A
intB E
>E F
{G H
}I J
[ 	
Serializable	 
] 
public 
class 
LineSelectionEvent '
:( )

UnityEvent* 4
<4 5
string5 ;
,; <
int= @
,@ A
intB E
>E F
{G H
}I J
[ 	
Serializable	 
] 
public 
class 
LinkSelectionEvent '
:( )

UnityEvent* 4
<4 5
string5 ;
,; <
string= C
,C D
intE H
>H I
{J K
}L M
public #
CharacterSelectionEvent & 
onCharacterSelection' ;
{   	
get!! 
{!! 
return!! "
m_OnCharacterSelection!! /
;!!/ 0
}!!1 2
set"" 
{"" "
m_OnCharacterSelection"" (
="") *
value""+ 0
;""0 1
}""2 3
}## 	
[$$ 	
SerializeField$$	 
]$$ 
private%% #
CharacterSelectionEvent%% '"
m_OnCharacterSelection%%( >
=%%? @
new%%A D#
CharacterSelectionEvent%%E \
(%%\ ]
)%%] ^
;%%^ _
public++  
SpriteSelectionEvent++ #
onSpriteSelection++$ 5
{,, 	
get-- 
{-- 
return-- 
m_OnSpriteSelection-- ,
;--, -
}--. /
set.. 
{.. 
m_OnSpriteSelection.. %
=..& '
value..( -
;..- .
}../ 0
}// 	
[00 	
SerializeField00	 
]00 
private11  
SpriteSelectionEvent11 $
m_OnSpriteSelection11% 8
=119 :
new11; > 
SpriteSelectionEvent11? S
(11S T
)11T U
;11U V
public77 
WordSelectionEvent77 !
onWordSelection77" 1
{88 	
get99 
{99 
return99 
m_OnWordSelection99 *
;99* +
}99, -
set:: 
{:: 
m_OnWordSelection:: #
=::$ %
value::& +
;::+ ,
}::- .
};; 	
[<< 	
SerializeField<<	 
]<< 
private== 
WordSelectionEvent== "
m_OnWordSelection==# 4
===5 6
new==7 :
WordSelectionEvent==; M
(==M N
)==N O
;==O P
publicCC 
LineSelectionEventCC !
onLineSelectionCC" 1
{DD 	
getEE 
{EE 
returnEE 
m_OnLineSelectionEE *
;EE* +
}EE, -
setFF 
{FF 
m_OnLineSelectionFF #
=FF$ %
valueFF& +
;FF+ ,
}FF- .
}GG 	
[HH 	
SerializeFieldHH	 
]HH 
privateII 
LineSelectionEventII "
m_OnLineSelectionII# 4
=II5 6
newII7 :
LineSelectionEventII; M
(IIM N
)IIN O
;IIO P
publicOO 
LinkSelectionEventOO !
onLinkSelectionOO" 1
{PP 	
getQQ 
{QQ 
returnQQ 
m_OnLinkSelectionQQ *
;QQ* +
}QQ, -
setRR 
{RR 
m_OnLinkSelectionRR #
=RR$ %
valueRR& +
;RR+ ,
}RR- .
}SS 	
[TT 	
SerializeFieldTT	 
]TT 
privateUU 
LinkSelectionEventUU "
m_OnLinkSelectionUU# 4
=UU5 6
newUU7 :
LinkSelectionEventUU; M
(UUM N
)UUN O
;UUO P
privateYY 
TMP_TextYY 
m_TextComponentYY (
;YY( )
private[[ 
Camera[[ 
m_Camera[[ 
;[[  
private\\ 
Canvas\\ 
m_Canvas\\ 
;\\  
private^^ 
int^^ 
m_selectedLink^^ "
=^^# $
-^^% &
$num^^& '
;^^' (
private__ 
int__ 
m_lastCharIndex__ #
=__$ %
-__& '
$num__' (
;__( )
private`` 
int`` 
m_lastWordIndex`` #
=``$ %
-``& '
$num``' (
;``( )
privateaa 
intaa 
m_lastLineIndexaa #
=aa$ %
-aa& '
$numaa' (
;aa( )
voidcc 
Awakecc 
(cc 
)cc 
{dd 	
m_TextComponentff 
=ff 

gameObjectff (
.ff( )
GetComponentff) 5
<ff5 6
TMP_Textff6 >
>ff> ?
(ff? @
)ff@ A
;ffA B
ifii 
(ii 
m_TextComponentii 
.ii  
GetTypeii  '
(ii' (
)ii( )
==ii* ,
typeofii- 3
(ii3 4
TextMeshProUGUIii4 C
)iiC D
)iiD E
{jj 
m_Canvaskk 
=kk 

gameObjectkk %
.kk% & 
GetComponentInParentkk& :
<kk: ;
Canvaskk; A
>kkA B
(kkB C
)kkC D
;kkD E
ifll 
(ll 
m_Canvasll 
!=ll 
nullll  $
)ll$ %
{mm 
ifnn 
(nn 
m_Canvasnn  
.nn  !

renderModenn! +
==nn, .

RenderModenn/ 9
.nn9 :
ScreenSpaceOverlaynn: L
)nnL M
m_Cameraoo  
=oo! "
nulloo# '
;oo' (
elsepp 
m_Cameraqq  
=qq! "
m_Canvasqq# +
.qq+ ,
worldCameraqq, 7
;qq7 8
}rr 
}ss 
elsett 
{uu 
m_Cameravv 
=vv 
Cameravv !
.vv! "
mainvv" &
;vv& '
}ww 
}xx 	
void{{ 

LateUpdate{{ 
({{ 
){{ 
{|| 	
if}} 
(}} 
TMP_TextUtilities}} !
.}}! "'
IsIntersectingRectTransform}}" =
(}}= >
m_TextComponent}}> M
.}}M N
rectTransform}}N [
,}}[ \
Input}}] b
.}}b c
mousePosition}}c p
,}}p q
m_Camera}}r z
)}}z {
)}}{ |
{~~ 
int
ÄÄ 
	charIndex
ÄÄ 
=
ÄÄ 
TMP_TextUtilities
ÄÄ  1
.
ÄÄ1 2'
FindIntersectingCharacter
ÄÄ2 K
(
ÄÄK L
m_TextComponent
ÄÄL [
,
ÄÄ[ \
Input
ÄÄ] b
.
ÄÄb c
mousePosition
ÄÄc p
,
ÄÄp q
m_Camera
ÄÄr z
,
ÄÄz {
trueÄÄ| Ä
)ÄÄÄ Å
;ÄÄÅ Ç
if
ÅÅ 
(
ÅÅ 
	charIndex
ÅÅ 
!=
ÅÅ  
-
ÅÅ! "
$num
ÅÅ" #
&&
ÅÅ$ &
	charIndex
ÅÅ' 0
!=
ÅÅ1 3
m_lastCharIndex
ÅÅ4 C
)
ÅÅC D
{
ÇÇ 
m_lastCharIndex
ÉÉ #
=
ÉÉ$ %
	charIndex
ÉÉ& /
;
ÉÉ/ 0!
TMP_TextElementType
ÖÖ '
elementType
ÖÖ( 3
=
ÖÖ4 5
m_TextComponent
ÖÖ6 E
.
ÖÖE F
textInfo
ÖÖF N
.
ÖÖN O
characterInfo
ÖÖO \
[
ÖÖ\ ]
	charIndex
ÖÖ] f
]
ÖÖf g
.
ÖÖg h
elementType
ÖÖh s
;
ÖÖs t
if
àà 
(
àà 
elementType
àà #
==
àà$ &!
TMP_TextElementType
àà' :
.
àà: ;
	Character
àà; D
)
ààD E&
SendOnCharacterSelection
ââ 0
(
ââ0 1
m_TextComponent
ââ1 @
.
ââ@ A
textInfo
ââA I
.
ââI J
characterInfo
ââJ W
[
ââW X
	charIndex
ââX a
]
ââa b
.
ââb c
	character
ââc l
,
ââl m
	charIndex
âân w
)
ââw x
;
ââx y
else
ää 
if
ää 
(
ää 
elementType
ää (
==
ää) +!
TMP_TextElementType
ää, ?
.
ää? @
Sprite
ää@ F
)
ääF G#
SendOnSpriteSelection
ãã -
(
ãã- .
m_TextComponent
ãã. =
.
ãã= >
textInfo
ãã> F
.
ããF G
characterInfo
ããG T
[
ããT U
	charIndex
ããU ^
]
ãã^ _
.
ãã_ `
	character
ãã` i
,
ããi j
	charIndex
ããk t
)
ããt u
;
ããu v
}
åå 
int
íí 
	wordIndex
íí 
=
íí 
TMP_TextUtilities
íí  1
.
íí1 2"
FindIntersectingWord
íí2 F
(
ííF G
m_TextComponent
ííG V
,
ííV W
Input
ííX ]
.
íí] ^
mousePosition
íí^ k
,
íík l
m_Camera
íím u
)
ííu v
;
íív w
if
ìì 
(
ìì 
	wordIndex
ìì 
!=
ìì  
-
ìì! "
$num
ìì" #
&&
ìì$ &
	wordIndex
ìì' 0
!=
ìì1 3
m_lastWordIndex
ìì4 C
)
ììC D
{
îî 
m_lastWordIndex
ïï #
=
ïï$ %
	wordIndex
ïï& /
;
ïï/ 0
TMP_WordInfo
òò  
wInfo
òò! &
=
òò' (
m_TextComponent
òò) 8
.
òò8 9
textInfo
òò9 A
.
òòA B
wordInfo
òòB J
[
òòJ K
	wordIndex
òòK T
]
òòT U
;
òòU V!
SendOnWordSelection
õõ '
(
õõ' (
wInfo
õõ( -
.
õõ- .
GetWord
õõ. 5
(
õõ5 6
)
õõ6 7
,
õõ7 8
wInfo
õõ9 >
.
õõ> ?!
firstCharacterIndex
õõ? R
,
õõR S
wInfo
õõT Y
.
õõY Z
characterCount
õõZ h
)
õõh i
;
õõi j
}
úú 
int
¢¢ 
	lineIndex
¢¢ 
=
¢¢ 
TMP_TextUtilities
¢¢  1
.
¢¢1 2"
FindIntersectingLine
¢¢2 F
(
¢¢F G
m_TextComponent
¢¢G V
,
¢¢V W
Input
¢¢X ]
.
¢¢] ^
mousePosition
¢¢^ k
,
¢¢k l
m_Camera
¢¢m u
)
¢¢u v
;
¢¢v w
if
££ 
(
££ 
	lineIndex
££ 
!=
££  
-
££! "
$num
££" #
&&
££$ &
	lineIndex
££' 0
!=
££1 3
m_lastLineIndex
££4 C
)
££C D
{
§§ 
m_lastLineIndex
•• #
=
••$ %
	lineIndex
••& /
;
••/ 0
TMP_LineInfo
®®  
lineInfo
®®! )
=
®®* +
m_TextComponent
®®, ;
.
®®; <
textInfo
®®< D
.
®®D E
lineInfo
®®E M
[
®®M N
	lineIndex
®®N W
]
®®W X
;
®®X Y
char
´´ 
[
´´ 
]
´´ 
buffer
´´ !
=
´´" #
new
´´$ '
char
´´( ,
[
´´, -
lineInfo
´´- 5
.
´´5 6
characterCount
´´6 D
]
´´D E
;
´´E F
for
¨¨ 
(
¨¨ 
int
¨¨ 
i
¨¨ 
=
¨¨  
$num
¨¨! "
;
¨¨" #
i
¨¨$ %
<
¨¨& '
lineInfo
¨¨( 0
.
¨¨0 1
characterCount
¨¨1 ?
&&
¨¨@ B
i
¨¨C D
<
¨¨E F
m_TextComponent
¨¨G V
.
¨¨V W
textInfo
¨¨W _
.
¨¨_ `
characterInfo
¨¨` m
.
¨¨m n
Length
¨¨n t
;
¨¨t u
i
¨¨v w
++
¨¨w y
)
¨¨y z
{
≠≠ 
buffer
ÆÆ 
[
ÆÆ 
i
ÆÆ  
]
ÆÆ  !
=
ÆÆ" #
m_TextComponent
ÆÆ$ 3
.
ÆÆ3 4
textInfo
ÆÆ4 <
.
ÆÆ< =
characterInfo
ÆÆ= J
[
ÆÆJ K
i
ÆÆK L
+
ÆÆM N
lineInfo
ÆÆO W
.
ÆÆW X!
firstCharacterIndex
ÆÆX k
]
ÆÆk l
.
ÆÆl m
	character
ÆÆm v
;
ÆÆv w
}
ØØ 
string
±± 
lineText
±± #
=
±±$ %
new
±±& )
string
±±* 0
(
±±0 1
buffer
±±1 7
)
±±7 8
;
±±8 9!
SendOnLineSelection
≤≤ '
(
≤≤' (
lineText
≤≤( 0
,
≤≤0 1
lineInfo
≤≤2 :
.
≤≤: ;!
firstCharacterIndex
≤≤; N
,
≤≤N O
lineInfo
≤≤P X
.
≤≤X Y
characterCount
≤≤Y g
)
≤≤g h
;
≤≤h i
}
≥≥ 
int
ππ 
	linkIndex
ππ 
=
ππ 
TMP_TextUtilities
ππ  1
.
ππ1 2"
FindIntersectingLink
ππ2 F
(
ππF G
m_TextComponent
ππG V
,
ππV W
Input
ππX ]
.
ππ] ^
mousePosition
ππ^ k
,
ππk l
m_Camera
ππm u
)
ππu v
;
ππv w
if
ºº 
(
ºº 
	linkIndex
ºº 
!=
ºº  
-
ºº! "
$num
ºº" #
&&
ºº$ &
	linkIndex
ºº' 0
!=
ºº1 3
m_selectedLink
ºº4 B
)
ººB C
{
ΩΩ 
m_selectedLink
ææ "
=
ææ# $
	linkIndex
ææ% .
;
ææ. /
TMP_LinkInfo
¡¡  
linkInfo
¡¡! )
=
¡¡* +
m_TextComponent
¡¡, ;
.
¡¡; <
textInfo
¡¡< D
.
¡¡D E
linkInfo
¡¡E M
[
¡¡M N
	linkIndex
¡¡N W
]
¡¡W X
;
¡¡X Y!
SendOnLinkSelection
ƒƒ '
(
ƒƒ' (
linkInfo
ƒƒ( 0
.
ƒƒ0 1
	GetLinkID
ƒƒ1 :
(
ƒƒ: ;
)
ƒƒ; <
,
ƒƒ< =
linkInfo
ƒƒ> F
.
ƒƒF G
GetLinkText
ƒƒG R
(
ƒƒR S
)
ƒƒS T
,
ƒƒT U
	linkIndex
ƒƒV _
)
ƒƒ_ `
;
ƒƒ` a
}
≈≈ 
}
«« 
else
»» 
{
…… 
m_selectedLink
ÀÀ 
=
ÀÀ  
-
ÀÀ! "
$num
ÀÀ" #
;
ÀÀ# $
m_lastCharIndex
ÃÃ 
=
ÃÃ  !
-
ÃÃ" #
$num
ÃÃ# $
;
ÃÃ$ %
m_lastWordIndex
ÕÕ 
=
ÕÕ  !
-
ÕÕ" #
$num
ÕÕ# $
;
ÕÕ$ %
m_lastLineIndex
ŒŒ 
=
ŒŒ  !
-
ŒŒ" #
$num
ŒŒ# $
;
ŒŒ$ %
}
œœ 
}
–– 	
public
”” 
void
”” 
OnPointerEnter
”” "
(
””" #
PointerEventData
””# 3
	eventData
””4 =
)
””= >
{
‘‘ 	
}
÷÷ 	
public
ŸŸ 
void
ŸŸ 
OnPointerExit
ŸŸ !
(
ŸŸ! "
PointerEventData
ŸŸ" 2
	eventData
ŸŸ3 <
)
ŸŸ< =
{
⁄⁄ 	
}
‹‹ 	
private
ﬂﬂ 
void
ﬂﬂ &
SendOnCharacterSelection
ﬂﬂ -
(
ﬂﬂ- .
char
ﬂﬂ. 2
	character
ﬂﬂ3 <
,
ﬂﬂ< =
int
ﬂﬂ> A
characterIndex
ﬂﬂB P
)
ﬂﬂP Q
{
‡‡ 	
if
·· 
(
·· "
onCharacterSelection
·· $
!=
··% '
null
··( ,
)
··, -"
onCharacterSelection
‚‚ $
.
‚‚$ %
Invoke
‚‚% +
(
‚‚+ ,
	character
‚‚, 5
,
‚‚5 6
characterIndex
‚‚7 E
)
‚‚E F
;
‚‚F G
}
„„ 	
private
ÂÂ 
void
ÂÂ #
SendOnSpriteSelection
ÂÂ *
(
ÂÂ* +
char
ÂÂ+ /
	character
ÂÂ0 9
,
ÂÂ9 :
int
ÂÂ; >
characterIndex
ÂÂ? M
)
ÂÂM N
{
ÊÊ 	
if
ÁÁ 
(
ÁÁ 
onSpriteSelection
ÁÁ !
!=
ÁÁ" $
null
ÁÁ% )
)
ÁÁ) *
onSpriteSelection
ËË !
.
ËË! "
Invoke
ËË" (
(
ËË( )
	character
ËË) 2
,
ËË2 3
characterIndex
ËË4 B
)
ËËB C
;
ËËC D
}
ÈÈ 	
private
ÎÎ 
void
ÎÎ !
SendOnWordSelection
ÎÎ (
(
ÎÎ( )
string
ÎÎ) /
word
ÎÎ0 4
,
ÎÎ4 5
int
ÎÎ6 9
	charIndex
ÎÎ: C
,
ÎÎC D
int
ÎÎE H
length
ÎÎI O
)
ÎÎO P
{
ÏÏ 	
if
ÌÌ 
(
ÌÌ 
onWordSelection
ÌÌ 
!=
ÌÌ  "
null
ÌÌ# '
)
ÌÌ' (
onWordSelection
ÓÓ 
.
ÓÓ  
Invoke
ÓÓ  &
(
ÓÓ& '
word
ÓÓ' +
,
ÓÓ+ ,
	charIndex
ÓÓ- 6
,
ÓÓ6 7
length
ÓÓ8 >
)
ÓÓ> ?
;
ÓÓ? @
}
ÔÔ 	
private
ÒÒ 
void
ÒÒ !
SendOnLineSelection
ÒÒ (
(
ÒÒ( )
string
ÒÒ) /
line
ÒÒ0 4
,
ÒÒ4 5
int
ÒÒ6 9
	charIndex
ÒÒ: C
,
ÒÒC D
int
ÒÒE H
length
ÒÒI O
)
ÒÒO P
{
ÚÚ 	
if
ÛÛ 
(
ÛÛ 
onLineSelection
ÛÛ 
!=
ÛÛ  "
null
ÛÛ# '
)
ÛÛ' (
onLineSelection
ÙÙ 
.
ÙÙ  
Invoke
ÙÙ  &
(
ÙÙ& '
line
ÙÙ' +
,
ÙÙ+ ,
	charIndex
ÙÙ- 6
,
ÙÙ6 7
length
ÙÙ8 >
)
ÙÙ> ?
;
ÙÙ? @
}
ıı 	
private
˜˜ 
void
˜˜ !
SendOnLinkSelection
˜˜ (
(
˜˜( )
string
˜˜) /
linkID
˜˜0 6
,
˜˜6 7
string
˜˜8 >
linkText
˜˜? G
,
˜˜G H
int
˜˜I L
	linkIndex
˜˜M V
)
˜˜V W
{
¯¯ 	
if
˘˘ 
(
˘˘ 
onLinkSelection
˘˘ 
!=
˘˘  "
null
˘˘# '
)
˘˘' (
onLinkSelection
˙˙ 
.
˙˙  
Invoke
˙˙  &
(
˙˙& '
linkID
˙˙' -
,
˙˙- .
linkText
˙˙/ 7
,
˙˙7 8
	linkIndex
˙˙9 B
)
˙˙B C
;
˙˙C D
}
˚˚ 	
}
˝˝ 
}˛˛ ¢
GD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Scripts\Footsteps.cs
public 
class 
	Footsteps 
: 
MonoBehaviour &
{ 
public 

AudioSource 
FootstepSound $
;$ %
void		 
Upddate			 
(		 
)		 
{

 
if 

(
 
( 
Input 
. 
GetKey 
( 
KeyCode  
.  !
W! "
)" #
)# $
||% '
(( )
Input) .
.. /
GetKey/ 5
(5 6
KeyCode6 =
.= >
A> ?
)? @
)@ A
||B D
(E F
InputF K
.K L
GetKeyL R
(R S
KeyCodeS Z
.Z [
S[ \
)\ ]
)] ^
||` b
(c d
Inputd i
.i j
GetKeyj p
(p q
KeyCodeq x
.x y
Dy z
)z {
){ |
)| }
{ 	
FootstepSound 
. 
enabled !
=" #
true$ (
;( )
} 	
else 
{ 	
FootstepSound 
. 
enabled !
=" #
false$ )
;) *
} 	
} 
} Ë"
LD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Scripts\PlayerMovement.cs
public 
class 
PlayerMovement 
: 
MonoBehaviour +
{ 
public 

bool 
canMove 
= 
true 
; 
public		 

float		 
speed		 
;		 
private

 
Rigidbody2D

 
myRigidbody

 #
;

# $
private 
Vector2 
change 
; 
private 
Animator 
animator 
; 
[ 
SerializeField 
] 
private 
StatsUI $
statsUI% ,
;, -
public 

StatsUI 
StatsUI 
=> 
statsUI %
;% &
void 
Start	 
( 
) 
{ 
animator 
= 
GetComponent 
<  
Animator  (
>( )
() *
)* +
;+ ,
myRigidbody 
= 
GetComponent "
<" #
Rigidbody2D# .
>. /
(/ 0
)0 1
;1 2
} 
void 
Update	 
( 
) 
{ 
change 
= 
Vector2 
. 
zero 
; 
change 
. 
x 
= 
Input 
. 

GetAxisRaw #
(# $
$str$ 0
)0 1
;1 2
change 
. 
y 
= 
Input 
. 

GetAxisRaw #
(# $
$str$ .
). /
;/ 0
if## 

(##
 
Input## 
.## 
GetAxis## 
(## 
$str## 
)## 
==## !
$num##" #
)### $
{$$ 	
SceneManager%% 
.%% 
	LoadScene%% "
(%%" #
$str%%# 8
)%%8 9
;%%9 :
}&& 	
else'' 
{(( 	
}** 	
if-- 

(--
 
canMove-- 
)-- 
UpdateAnimMove.. 
(.. 
).. 
;.. 
}// 
void11 
UpdateAnimMove11	 
(11 
)11 
{22 
if33 

(33
 
change33 
!=33 
Vector233 
.33 
zero33 !
)33! "
{44 	
MoveCharacter55 
(55 
)55 
;55 
animator66 
.66 
SetFloat66 
(66 
$str66 %
,66% &
change66' -
.66- .
x66. /
)66/ 0
;660 1
animator77 
.77 
SetFloat77 
(77 
$str77 %
,77% &
change77' -
.77- .
y77. /
)77/ 0
;770 1
animator88 
.88 
SetBool88 
(88 
$str88 %
,88% &
true88' +
)88+ ,
;88, -
}99 	
else:: 
{;; 	
animator<< 
.<< 
SetBool<< 
(<< 
$str<< %
,<<% &
false<<' ,
)<<, -
;<<- .
}== 	
}?? 
voidAA 
MoveCharacterAA	 
(AA 
)AA 
{BB 
floatCC 
	origSpeedCC 
=CC 
$numCC 
;CC 
ifDD 

(DD
 
InputDD 
.DD 
	GetButtonDD 
(DD 
$strDD "
)DD" #
)DD# $
{EE 	
	origSpeedFF 
=FF 
speedFF 
;FF 
speedGG 
=GG 
$numGG 
;GG 
}HH 	
elseII 
speedJJ 
=JJ 
	origSpeedJJ 
;JJ 
myRigidbodyLL 
.LL 
MovePositionLL  
(LL  !
(LL! "
Vector2LL" )
)LL) *
	transformLL* 3
.LL3 4
positionLL4 <
+LL> ?
changeLL@ F
*LLG H
speedLLI N
*LLO P
TimeLLQ U
.LLU V
fixedDeltaTimeLLV d
)LLd e
;LLe f
}MM 
}NN Äñ
iD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\VertexShakeB.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class 
VertexShakeB 
: 
MonoBehaviour  -
{		 
public 
float 
AngleMultiplier $
=% &
$num' +
;+ ,
public 
float 
SpeedMultiplier $
=% &
$num' +
;+ ,
public 
float 

CurveScale 
=  !
$num" &
;& '
private 
TMP_Text 
m_TextComponent (
;( )
private 
bool 
hasTextChanged #
;# $
void 
Awake 
( 
) 
{ 	
m_TextComponent 
= 
GetComponent *
<* +
TMP_Text+ 3
>3 4
(4 5
)5 6
;6 7
} 	
void 
OnEnable 
( 
) 
{ 	
TMPro_EventManager 
. 
TEXT_CHANGED_EVENT 1
.1 2
Add2 5
(5 6
ON_TEXT_CHANGED6 E
)E F
;F G
} 	
void 
	OnDisable 
( 
) 
{ 	
TMPro_EventManager   
.   
TEXT_CHANGED_EVENT   1
.  1 2
Remove  2 8
(  8 9
ON_TEXT_CHANGED  9 H
)  H I
;  I J
}!! 	
void$$ 
Start$$ 
($$ 
)$$ 
{%% 	
StartCoroutine&& 
(&& 
AnimateVertexColors&& .
(&&. /
)&&/ 0
)&&0 1
;&&1 2
}'' 	
void** 
ON_TEXT_CHANGED** 
(** 
Object** #
obj**$ '
)**' (
{++ 	
if,, 
(,, 
obj,, 
=,, 
m_TextComponent,, %
),,% &
hasTextChanged-- 
=--  
true--! %
;--% &
}.. 	
IEnumerator44 
AnimateVertexColors44 '
(44' (
)44( )
{55 	
m_TextComponent99 
.99 
ForceMeshUpdate99 +
(99+ ,
)99, -
;99- .
TMP_TextInfo;; 
textInfo;; !
=;;" #
m_TextComponent;;$ 3
.;;3 4
textInfo;;4 <
;;;< =
	Matrix4x4== 
matrix== 
;== 
Vector3>> 
[>> 
]>> 
[>> 
]>> 
copyOfVertices>> &
=>>' (
new>>) ,
Vector3>>- 4
[>>4 5
$num>>5 6
]>>6 7
[>>7 8
]>>8 9
;>>9 :
hasTextChanged@@ 
=@@ 
true@@ !
;@@! "
whileBB 
(BB 
trueBB 
)BB 
{CC 
ifEE 
(EE 
hasTextChangedEE "
)EE" #
{FF 
ifGG 
(GG 
copyOfVerticesGG &
.GG& '
LengthGG' -
<GG. /
textInfoGG0 8
.GG8 9
meshInfoGG9 A
.GGA B
LengthGGB H
)GGH I
copyOfVerticesHH &
=HH' (
newHH) ,
Vector3HH- 4
[HH4 5
textInfoHH5 =
.HH= >
meshInfoHH> F
.HHF G
LengthHHG M
]HHM N
[HHN O
]HHO P
;HHP Q
forJJ 
(JJ 
intJJ 
iJJ 
=JJ  
$numJJ! "
;JJ" #
iJJ$ %
<JJ& '
textInfoJJ( 0
.JJ0 1
meshInfoJJ1 9
.JJ9 :
LengthJJ: @
;JJ@ A
iJJB C
++JJC E
)JJE F
{KK 
intLL 
lengthLL "
=LL# $
textInfoLL% -
.LL- .
meshInfoLL. 6
[LL6 7
iLL7 8
]LL8 9
.LL9 :
verticesLL: B
.LLB C
LengthLLC I
;LLI J
copyOfVerticesMM &
[MM& '
iMM' (
]MM( )
=MM* +
newMM, /
Vector3MM0 7
[MM7 8
lengthMM8 >
]MM> ?
;MM? @
}NN 
hasTextChangedPP "
=PP# $
falsePP% *
;PP* +
}QQ 
intSS 
characterCountSS "
=SS# $
textInfoSS% -
.SS- .
characterCountSS. <
;SS< =
ifVV 
(VV 
characterCountVV "
==VV# %
$numVV& '
)VV' (
{WW 
yieldXX 
returnXX  
newXX! $
WaitForSecondsXX% 3
(XX3 4
$numXX4 9
)XX9 :
;XX: ;
continueYY 
;YY 
}ZZ 
int\\ 
	lineCount\\ 
=\\ 
textInfo\\  (
.\\( )
	lineCount\\) 2
;\\2 3
for__ 
(__ 
int__ 
i__ 
=__ 
$num__ 
;__ 
i__  !
<__" #
	lineCount__$ -
;__- .
i__/ 0
++__0 2
)__2 3
{`` 
intbb 
firstbb 
=bb 
textInfobb  (
.bb( )
lineInfobb) 1
[bb1 2
ibb2 3
]bb3 4
.bb4 5
firstCharacterIndexbb5 H
;bbH I
intcc 
lastcc 
=cc 
textInfocc '
.cc' (
lineInfocc( 0
[cc0 1
icc1 2
]cc2 3
.cc3 4
lastCharacterIndexcc4 F
;ccF G
Vector3ff 
centerOfLineff (
=ff) *
(ff+ ,
textInfoff, 4
.ff4 5
characterInfoff5 B
[ffB C
firstffC H
]ffH I
.ffI J

bottomLeftffJ T
+ffU V
textInfoffW _
.ff_ `
characterInfoff` m
[ffm n
lastffn r
]ffr s
.ffs t
topRightfft |
)ff| }
/ff~ 
$num
ffÄ Å
;
ffÅ Ç

Quaterniongg 
rotationgg '
=gg( )

Quaterniongg* 4
.gg4 5
Eulergg5 :
(gg: ;
$numgg; <
,gg< =
$numgg> ?
,gg? @
RandomggA G
.ggG H
RangeggH M
(ggM N
-ggN O
$numggO T
,ggT U
$numggV [
)gg[ \
)gg\ ]
;gg] ^
forjj 
(jj 
intjj 
jjj 
=jj  
firstjj! &
;jj& '
jjj( )
<=jj* ,
lastjj- 1
;jj1 2
jjj3 4
++jj4 6
)jj6 7
{kk 
ifmm 
(mm 
!mm 
textInfomm %
.mm% &
characterInfomm& 3
[mm3 4
jmm4 5
]mm5 6
.mm6 7
	isVisiblemm7 @
)mm@ A
continuenn $
;nn$ %
intqq 
materialIndexqq )
=qq* +
textInfoqq, 4
.qq4 5
characterInfoqq5 B
[qqB C
jqqC D
]qqD E
.qqE F"
materialReferenceIndexqqF \
;qq\ ]
inttt 
vertexIndextt '
=tt( )
textInfott* 2
.tt2 3
characterInfott3 @
[tt@ A
jttA B
]ttB C
.ttC D
vertexIndexttD O
;ttO P
Vector3ww 
[ww  
]ww  !
sourceVerticesww" 0
=ww1 2
textInfoww3 ;
.ww; <
meshInfoww< D
[wwD E
materialIndexwwE R
]wwR S
.wwS T
verticeswwT \
;ww\ ]
Vector3zz 

charCenterzz  *
=zz+ ,
(zz- .
sourceVerticeszz. <
[zz< =
vertexIndexzz= H
+zzI J
$numzzK L
]zzL M
+zzN O
sourceVerticeszzP ^
[zz^ _
vertexIndexzz_ j
+zzk l
$numzzm n
]zzn o
)zzo p
/zzq r
$numzzs t
;zzt u
copyOfVertices~~ &
[~~& '
materialIndex~~' 4
]~~4 5
[~~5 6
vertexIndex~~6 A
+~~B C
$num~~D E
]~~E F
=~~G H
sourceVertices~~I W
[~~W X
vertexIndex~~X c
+~~d e
$num~~f g
]~~g h
-~~i j

charCenter~~k u
;~~u v
copyOfVertices &
[& '
materialIndex' 4
]4 5
[5 6
vertexIndex6 A
+B C
$numD E
]E F
=G H
sourceVerticesI W
[W X
vertexIndexX c
+d e
$numf g
]g h
-i j

charCenterk u
;u v
copyOfVertices
ÄÄ &
[
ÄÄ& '
materialIndex
ÄÄ' 4
]
ÄÄ4 5
[
ÄÄ5 6
vertexIndex
ÄÄ6 A
+
ÄÄB C
$num
ÄÄD E
]
ÄÄE F
=
ÄÄG H
sourceVertices
ÄÄI W
[
ÄÄW X
vertexIndex
ÄÄX c
+
ÄÄd e
$num
ÄÄf g
]
ÄÄg h
-
ÄÄi j

charCenter
ÄÄk u
;
ÄÄu v
copyOfVertices
ÅÅ &
[
ÅÅ& '
materialIndex
ÅÅ' 4
]
ÅÅ4 5
[
ÅÅ5 6
vertexIndex
ÅÅ6 A
+
ÅÅB C
$num
ÅÅD E
]
ÅÅE F
=
ÅÅG H
sourceVertices
ÅÅI W
[
ÅÅW X
vertexIndex
ÅÅX c
+
ÅÅd e
$num
ÅÅf g
]
ÅÅg h
-
ÅÅi j

charCenter
ÅÅk u
;
ÅÅu v
float
ÑÑ 
randomScale
ÑÑ )
=
ÑÑ* +
Random
ÑÑ, 2
.
ÑÑ2 3
Range
ÑÑ3 8
(
ÑÑ8 9
$num
ÑÑ9 >
,
ÑÑ> ?
$num
ÑÑ@ E
)
ÑÑE F
;
ÑÑF G
matrix
áá 
=
áá  
	Matrix4x4
áá! *
.
áá* +
TRS
áá+ .
(
áá. /
Vector3
áá/ 6
.
áá6 7
one
áá7 :
,
áá: ;

Quaternion
áá< F
.
ááF G
identity
ááG O
,
ááO P
Vector3
ááQ X
.
ááX Y
one
ááY \
*
áá] ^
randomScale
áá_ j
)
ááj k
;
áák l
copyOfVertices
ää &
[
ää& '
materialIndex
ää' 4
]
ää4 5
[
ää5 6
vertexIndex
ää6 A
+
ääB C
$num
ääD E
]
ääE F
=
ääG H
matrix
ääI O
.
ääO P
MultiplyPoint3x4
ääP `
(
ää` a
copyOfVertices
ääa o
[
ääo p
materialIndex
ääp }
]
ää} ~
[
ää~ 
vertexIndexää ä
+ääã å
$numääç é
]ääé è
)ääè ê
;ääê ë
copyOfVertices
ãã &
[
ãã& '
materialIndex
ãã' 4
]
ãã4 5
[
ãã5 6
vertexIndex
ãã6 A
+
ããB C
$num
ããD E
]
ããE F
=
ããG H
matrix
ããI O
.
ããO P
MultiplyPoint3x4
ããP `
(
ãã` a
copyOfVertices
ããa o
[
ãão p
materialIndex
ããp }
]
ãã} ~
[
ãã~ 
vertexIndexãã ä
+ããã å
$numããç é
]ããé è
)ããè ê
;ããê ë
copyOfVertices
åå &
[
åå& '
materialIndex
åå' 4
]
åå4 5
[
åå5 6
vertexIndex
åå6 A
+
ååB C
$num
ååD E
]
ååE F
=
ååG H
matrix
ååI O
.
ååO P
MultiplyPoint3x4
ååP `
(
åå` a
copyOfVertices
ååa o
[
ååo p
materialIndex
ååp }
]
åå} ~
[
åå~ 
vertexIndexåå ä
+ååã å
$numååç é
]ååé è
)ååè ê
;ååê ë
copyOfVertices
çç &
[
çç& '
materialIndex
çç' 4
]
çç4 5
[
çç5 6
vertexIndex
çç6 A
+
ççB C
$num
ççD E
]
ççE F
=
ççG H
matrix
ççI O
.
ççO P
MultiplyPoint3x4
ççP `
(
çç` a
copyOfVertices
çça o
[
çço p
materialIndex
ççp }
]
çç} ~
[
çç~ 
vertexIndexçç ä
+ççã å
$numççç é
]ççé è
)ççè ê
;ççê ë
copyOfVertices
êê &
[
êê& '
materialIndex
êê' 4
]
êê4 5
[
êê5 6
vertexIndex
êê6 A
+
êêB C
$num
êêD E
]
êêE F
+=
êêG I

charCenter
êêJ T
;
êêT U
copyOfVertices
ëë &
[
ëë& '
materialIndex
ëë' 4
]
ëë4 5
[
ëë5 6
vertexIndex
ëë6 A
+
ëëB C
$num
ëëD E
]
ëëE F
+=
ëëG I

charCenter
ëëJ T
;
ëëT U
copyOfVertices
íí &
[
íí& '
materialIndex
íí' 4
]
íí4 5
[
íí5 6
vertexIndex
íí6 A
+
ííB C
$num
ííD E
]
ííE F
+=
ííG I

charCenter
ííJ T
;
ííT U
copyOfVertices
ìì &
[
ìì& '
materialIndex
ìì' 4
]
ìì4 5
[
ìì5 6
vertexIndex
ìì6 A
+
ììB C
$num
ììD E
]
ììE F
+=
ììG I

charCenter
ììJ T
;
ììT U
copyOfVertices
óó &
[
óó& '
materialIndex
óó' 4
]
óó4 5
[
óó5 6
vertexIndex
óó6 A
+
óóB C
$num
óóD E
]
óóE F
-=
óóG I
centerOfLine
óóJ V
;
óóV W
copyOfVertices
òò &
[
òò& '
materialIndex
òò' 4
]
òò4 5
[
òò5 6
vertexIndex
òò6 A
+
òòB C
$num
òòD E
]
òòE F
-=
òòG I
centerOfLine
òòJ V
;
òòV W
copyOfVertices
ôô &
[
ôô& '
materialIndex
ôô' 4
]
ôô4 5
[
ôô5 6
vertexIndex
ôô6 A
+
ôôB C
$num
ôôD E
]
ôôE F
-=
ôôG I
centerOfLine
ôôJ V
;
ôôV W
copyOfVertices
öö &
[
öö& '
materialIndex
öö' 4
]
öö4 5
[
öö5 6
vertexIndex
öö6 A
+
ööB C
$num
ööD E
]
ööE F
-=
ööG I
centerOfLine
ööJ V
;
ööV W
matrix
ùù 
=
ùù  
	Matrix4x4
ùù! *
.
ùù* +
TRS
ùù+ .
(
ùù. /
Vector3
ùù/ 6
.
ùù6 7
one
ùù7 :
,
ùù: ;
rotation
ùù< D
,
ùùD E
Vector3
ùùF M
.
ùùM N
one
ùùN Q
)
ùùQ R
;
ùùR S
copyOfVertices
†† &
[
††& '
materialIndex
††' 4
]
††4 5
[
††5 6
vertexIndex
††6 A
+
††B C
$num
††D E
]
††E F
=
††G H
matrix
††I O
.
††O P
MultiplyPoint3x4
††P `
(
††` a
copyOfVertices
††a o
[
††o p
materialIndex
††p }
]
††} ~
[
††~ 
vertexIndex†† ä
+††ã å
$num††ç é
]††é è
)††è ê
;††ê ë
copyOfVertices
°° &
[
°°& '
materialIndex
°°' 4
]
°°4 5
[
°°5 6
vertexIndex
°°6 A
+
°°B C
$num
°°D E
]
°°E F
=
°°G H
matrix
°°I O
.
°°O P
MultiplyPoint3x4
°°P `
(
°°` a
copyOfVertices
°°a o
[
°°o p
materialIndex
°°p }
]
°°} ~
[
°°~ 
vertexIndex°° ä
+°°ã å
$num°°ç é
]°°é è
)°°è ê
;°°ê ë
copyOfVertices
¢¢ &
[
¢¢& '
materialIndex
¢¢' 4
]
¢¢4 5
[
¢¢5 6
vertexIndex
¢¢6 A
+
¢¢B C
$num
¢¢D E
]
¢¢E F
=
¢¢G H
matrix
¢¢I O
.
¢¢O P
MultiplyPoint3x4
¢¢P `
(
¢¢` a
copyOfVertices
¢¢a o
[
¢¢o p
materialIndex
¢¢p }
]
¢¢} ~
[
¢¢~ 
vertexIndex¢¢ ä
+¢¢ã å
$num¢¢ç é
]¢¢é è
)¢¢è ê
;¢¢ê ë
copyOfVertices
££ &
[
££& '
materialIndex
££' 4
]
££4 5
[
££5 6
vertexIndex
££6 A
+
££B C
$num
££D E
]
££E F
=
££G H
matrix
££I O
.
££O P
MultiplyPoint3x4
££P `
(
££` a
copyOfVertices
££a o
[
££o p
materialIndex
££p }
]
££} ~
[
££~ 
vertexIndex££ ä
+££ã å
$num££ç é
]££é è
)££è ê
;££ê ë
copyOfVertices
¶¶ &
[
¶¶& '
materialIndex
¶¶' 4
]
¶¶4 5
[
¶¶5 6
vertexIndex
¶¶6 A
+
¶¶B C
$num
¶¶D E
]
¶¶E F
+=
¶¶G I
centerOfLine
¶¶J V
;
¶¶V W
copyOfVertices
ßß &
[
ßß& '
materialIndex
ßß' 4
]
ßß4 5
[
ßß5 6
vertexIndex
ßß6 A
+
ßßB C
$num
ßßD E
]
ßßE F
+=
ßßG I
centerOfLine
ßßJ V
;
ßßV W
copyOfVertices
®® &
[
®®& '
materialIndex
®®' 4
]
®®4 5
[
®®5 6
vertexIndex
®®6 A
+
®®B C
$num
®®D E
]
®®E F
+=
®®G I
centerOfLine
®®J V
;
®®V W
copyOfVertices
©© &
[
©©& '
materialIndex
©©' 4
]
©©4 5
[
©©5 6
vertexIndex
©©6 A
+
©©B C
$num
©©D E
]
©©E F
+=
©©G I
centerOfLine
©©J V
;
©©V W
}
™™ 
}
´´ 
for
ÆÆ 
(
ÆÆ 
int
ÆÆ 
i
ÆÆ 
=
ÆÆ 
$num
ÆÆ 
;
ÆÆ 
i
ÆÆ  !
<
ÆÆ" #
textInfo
ÆÆ$ ,
.
ÆÆ, -
meshInfo
ÆÆ- 5
.
ÆÆ5 6
Length
ÆÆ6 <
;
ÆÆ< =
i
ÆÆ> ?
++
ÆÆ? A
)
ÆÆA B
{
ØØ 
textInfo
∞∞ 
.
∞∞ 
meshInfo
∞∞ %
[
∞∞% &
i
∞∞& '
]
∞∞' (
.
∞∞( )
mesh
∞∞) -
.
∞∞- .
vertices
∞∞. 6
=
∞∞7 8
copyOfVertices
∞∞9 G
[
∞∞G H
i
∞∞H I
]
∞∞I J
;
∞∞J K
m_TextComponent
±± #
.
±±# $
UpdateGeometry
±±$ 2
(
±±2 3
textInfo
±±3 ;
.
±±; <
meshInfo
±±< D
[
±±D E
i
±±E F
]
±±F G
.
±±G H
mesh
±±H L
,
±±L M
i
±±N O
)
±±O P
;
±±P Q
}
≤≤ 
yield
¥¥ 
return
¥¥ 
new
¥¥  
WaitForSeconds
¥¥! /
(
¥¥/ 0
$num
¥¥0 4
)
¥¥4 5
;
¥¥5 6
}
µµ 
}
∂∂ 	
}
∏∏ 
}ππ ˛
LD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Scripts\CameraMovement.cs
public 
class 
CameraMovement 
: 
MonoBehaviour +
{ 
public 

	Transform 
target 
; 
public		 

float		 
	smoothing		 
;		 
public

 

Vector2

 
maxPosition

 
;

 
public 

Vector2 
minPosition 
; 
void 
Start	 
( 
) 
{ 
} 
void 

LateUpdate	 
( 
) 
{ 
if 

(
 
	transform 
. 
position 
!=  
target! '
.' (
position( 0
)0 1
{ 	
Vector3 
targetPosition "
=# $
new% (
Vector3) 0
(0 1
target1 7
.7 8
position8 @
.@ A
xA B
,B C
targetD J
.J K
positionK S
.S T
yT U
,U V
	transformW `
.` a
positiona i
.i j
zj k
)k l
;l m
targetPosition 
. 
x 
= 
Mathf $
.$ %
Clamp% *
(* +
targetPosition+ 9
.9 :
x: ;
,; <
minPosition= H
.H I
xI J
,J K
maxPositionL W
.W X
xX Y
)Y Z
;Z [
targetPosition 
. 
y 
= 
Mathf $
.$ %
Clamp% *
(* +
targetPosition+ 9
.9 :
y: ;
,; <
minPosition= H
.H I
yI J
,J K
maxPositionL W
.W X
yX Y
)Y Z
;Z [
	transform 
. 
position 
=  
Vector3! (
.( )
Lerp) -
(- .
	transform. 7
.7 8
position8 @
,@ A
targetPositionB P
,P Q
	smoothingR [
)[ \
;\ ]
} 	
} 
}   è√
oD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\TMP_TextSelector_B.cs
	namespace

 	
TMPro


 
.

 
Examples

 
{ 
public 

class 
TMP_TextSelector_B #
:$ %
MonoBehaviour& 3
,3 4 
IPointerEnterHandler5 I
,I J
IPointerExitHandlerK ^
,^ _ 
IPointerClickHandler` t
,t u
IPointerUpHandler	v á
{ 
public 
RectTransform 
TextPopup_Prefab_01 0
;0 1
private 
RectTransform %
m_TextPopup_RectTransform 7
;7 8
private 
TextMeshProUGUI $
m_TextPopup_TMPComponent  8
;8 9
private 
const 
string 

k_LinkText '
=( )
$str* L
;L M
private 
const 
string 

k_WordText '
=( )
$str* A
;A B
private 
TextMeshProUGUI 
m_TextMeshPro  -
;- .
private 
Canvas 
m_Canvas 
;  
private 
Camera 
m_Camera 
;  
private 
bool 
isHoveringObject %
;% &
private 
int 
m_selectedWord "
=# $
-% &
$num& '
;' (
private 
int 
m_selectedLink "
=# $
-% &
$num& '
;' (
private 
int 
m_lastIndex 
=  !
-" #
$num# $
;$ %
private!! 
	Matrix4x4!! 
m_matrix!! "
;!!" #
private## 
TMP_MeshInfo## 
[## 
]## &
m_cachedMeshInfoVertexData## 9
;##9 :
void%% 
Awake%% 
(%% 
)%% 
{&& 	
m_TextMeshPro'' 
='' 

gameObject'' &
.''& '
GetComponent''' 3
<''3 4
TextMeshProUGUI''4 C
>''C D
(''D E
)''E F
;''F G
m_Canvas** 
=** 

gameObject** !
.**! " 
GetComponentInParent**" 6
<**6 7
Canvas**7 =
>**= >
(**> ?
)**? @
;**@ A
if-- 
(-- 
m_Canvas-- 
.-- 

renderMode-- #
==--$ &

RenderMode--' 1
.--1 2
ScreenSpaceOverlay--2 D
)--D E
m_Camera.. 
=.. 
null.. 
;..  
else// 
m_Camera00 
=00 
m_Canvas00 #
.00# $
worldCamera00$ /
;00/ 0%
m_TextPopup_RectTransform33 %
=33& '
Instantiate33( 3
(333 4
TextPopup_Prefab_01334 G
)33G H
as33I K
RectTransform33L Y
;33Y Z%
m_TextPopup_RectTransform44 %
.44% &
	SetParent44& /
(44/ 0
m_Canvas440 8
.448 9
	transform449 B
,44B C
false44D I
)44I J
;44J K$
m_TextPopup_TMPComponent55 $
=55% &%
m_TextPopup_RectTransform55' @
.55@ A"
GetComponentInChildren55A W
<55W X
TextMeshProUGUI55X g
>55g h
(55h i
)55i j
;55j k%
m_TextPopup_RectTransform66 %
.66% &

gameObject66& 0
.660 1
	SetActive661 :
(66: ;
false66; @
)66@ A
;66A B
}77 	
void:: 
OnEnable:: 
(:: 
):: 
{;; 	
TMPro_EventManager== 
.== 
TEXT_CHANGED_EVENT== 1
.==1 2
Add==2 5
(==5 6
ON_TEXT_CHANGED==6 E
)==E F
;==F G
}>> 	
void@@ 
	OnDisable@@ 
(@@ 
)@@ 
{AA 	
TMPro_EventManagerCC 
.CC 
TEXT_CHANGED_EVENTCC 1
.CC1 2
RemoveCC2 8
(CC8 9
ON_TEXT_CHANGEDCC9 H
)CCH I
;CCI J
}DD 	
voidGG 
ON_TEXT_CHANGEDGG 
(GG 
ObjectGG #
objGG$ '
)GG' (
{HH 	
ifII 
(II 
objII 
==II 
m_TextMeshProII $
)II$ %
{JJ &
m_cachedMeshInfoVertexDataLL *
=LL+ ,
m_TextMeshProLL- :
.LL: ;
textInfoLL; C
.LLC D"
CopyMeshInfoVertexDataLLD Z
(LLZ [
)LL[ \
;LL\ ]
}MM 
}NN 	
voidQQ 

LateUpdateQQ 
(QQ 
)QQ 
{RR 	
ifSS 
(SS 
isHoveringObjectSS  
)SS  !
{TT 
intWW 
	charIndexWW 
=WW 
TMP_TextUtilitiesWW  1
.WW1 2%
FindIntersectingCharacterWW2 K
(WWK L
m_TextMeshProWWL Y
,WWY Z
InputWW[ `
.WW` a
mousePositionWWa n
,WWn o
m_CameraWWp x
,WWx y
trueWWz ~
)WW~ 
;	WW Ä
ifZZ 
(ZZ 
	charIndexZZ 
==ZZ  
-ZZ! "
$numZZ" #
||ZZ$ &
	charIndexZZ' 0
!=ZZ1 3
m_lastIndexZZ4 ?
)ZZ? @
{[[ )
RestoreCachedVertexAttributes\\ 1
(\\1 2
m_lastIndex\\2 =
)\\= >
;\\> ?
m_lastIndex]] 
=]]  !
-]]" #
$num]]# $
;]]$ %
}^^ 
if`` 
(`` 
	charIndex`` 
!=``  
-``! "
$num``" #
&&``$ &
	charIndex``' 0
!=``1 3
m_lastIndex``4 ?
&&``@ B
(``C D
Input``D I
.``I J
GetKey``J P
(``P Q
KeyCode``Q X
.``X Y
	LeftShift``Y b
)``b c
||``d f
Input``g l
.``l m
GetKey``m s
(``s t
KeyCode``t {
.``{ |

RightShift	``| Ü
)
``Ü á
)
``á à
)
``à â
{aa 
m_lastIndexbb 
=bb  !
	charIndexbb" +
;bb+ ,
intee 
materialIndexee %
=ee& '
m_TextMeshProee( 5
.ee5 6
textInfoee6 >
.ee> ?
characterInfoee? L
[eeL M
	charIndexeeM V
]eeV W
.eeW X"
materialReferenceIndexeeX n
;een o
inthh 
vertexIndexhh #
=hh$ %
m_TextMeshProhh& 3
.hh3 4
textInfohh4 <
.hh< =
characterInfohh= J
[hhJ K
	charIndexhhK T
]hhT U
.hhU V
vertexIndexhhV a
;hha b
Vector3kk 
[kk 
]kk 
verticeskk &
=kk' (
m_TextMeshProkk) 6
.kk6 7
textInfokk7 ?
.kk? @
meshInfokk@ H
[kkH I
materialIndexkkI V
]kkV W
.kkW X
verticeskkX `
;kk` a
Vector2nn 
charMidBaslinenn *
=nn+ ,
(nn- .
verticesnn. 6
[nn6 7
vertexIndexnn7 B
+nnC D
$numnnE F
]nnF G
+nnH I
verticesnnJ R
[nnR S
vertexIndexnnS ^
+nn_ `
$numnna b
]nnb c
)nnc d
/nne f
$numnng h
;nnh i
Vector3rr 
offsetrr "
=rr# $
charMidBaslinerr% 3
;rr3 4
verticesuu 
[uu 
vertexIndexuu (
+uu) *
$numuu+ ,
]uu, -
=uu. /
verticesuu0 8
[uu8 9
vertexIndexuu9 D
+uuE F
$numuuG H
]uuH I
-uuJ K
offsetuuL R
;uuR S
verticesvv 
[vv 
vertexIndexvv (
+vv) *
$numvv+ ,
]vv, -
=vv. /
verticesvv0 8
[vv8 9
vertexIndexvv9 D
+vvE F
$numvvG H
]vvH I
-vvJ K
offsetvvL R
;vvR S
verticesww 
[ww 
vertexIndexww (
+ww) *
$numww+ ,
]ww, -
=ww. /
verticesww0 8
[ww8 9
vertexIndexww9 D
+wwE F
$numwwG H
]wwH I
-wwJ K
offsetwwL R
;wwR S
verticesxx 
[xx 
vertexIndexxx (
+xx) *
$numxx+ ,
]xx, -
=xx. /
verticesxx0 8
[xx8 9
vertexIndexxx9 D
+xxE F
$numxxG H
]xxH I
-xxJ K
offsetxxL R
;xxR S
floatzz 

zoomFactorzz $
=zz% &
$numzz' +
;zz+ ,
m_matrix}} 
=}} 
	Matrix4x4}} (
.}}( )
TRS}}) ,
(}}, -
Vector3}}- 4
.}}4 5
zero}}5 9
,}}9 :

Quaternion}}; E
.}}E F
identity}}F N
,}}N O
Vector3}}P W
.}}W X
one}}X [
*}}\ ]

zoomFactor}}^ h
)}}h i
;}}i j
vertices
ÄÄ 
[
ÄÄ 
vertexIndex
ÄÄ (
+
ÄÄ) *
$num
ÄÄ+ ,
]
ÄÄ, -
=
ÄÄ. /
m_matrix
ÄÄ0 8
.
ÄÄ8 9
MultiplyPoint3x4
ÄÄ9 I
(
ÄÄI J
vertices
ÄÄJ R
[
ÄÄR S
vertexIndex
ÄÄS ^
+
ÄÄ_ `
$num
ÄÄa b
]
ÄÄb c
)
ÄÄc d
;
ÄÄd e
vertices
ÅÅ 
[
ÅÅ 
vertexIndex
ÅÅ (
+
ÅÅ) *
$num
ÅÅ+ ,
]
ÅÅ, -
=
ÅÅ. /
m_matrix
ÅÅ0 8
.
ÅÅ8 9
MultiplyPoint3x4
ÅÅ9 I
(
ÅÅI J
vertices
ÅÅJ R
[
ÅÅR S
vertexIndex
ÅÅS ^
+
ÅÅ_ `
$num
ÅÅa b
]
ÅÅb c
)
ÅÅc d
;
ÅÅd e
vertices
ÇÇ 
[
ÇÇ 
vertexIndex
ÇÇ (
+
ÇÇ) *
$num
ÇÇ+ ,
]
ÇÇ, -
=
ÇÇ. /
m_matrix
ÇÇ0 8
.
ÇÇ8 9
MultiplyPoint3x4
ÇÇ9 I
(
ÇÇI J
vertices
ÇÇJ R
[
ÇÇR S
vertexIndex
ÇÇS ^
+
ÇÇ_ `
$num
ÇÇa b
]
ÇÇb c
)
ÇÇc d
;
ÇÇd e
vertices
ÉÉ 
[
ÉÉ 
vertexIndex
ÉÉ (
+
ÉÉ) *
$num
ÉÉ+ ,
]
ÉÉ, -
=
ÉÉ. /
m_matrix
ÉÉ0 8
.
ÉÉ8 9
MultiplyPoint3x4
ÉÉ9 I
(
ÉÉI J
vertices
ÉÉJ R
[
ÉÉR S
vertexIndex
ÉÉS ^
+
ÉÉ_ `
$num
ÉÉa b
]
ÉÉb c
)
ÉÉc d
;
ÉÉd e
vertices
ÜÜ 
[
ÜÜ 
vertexIndex
ÜÜ (
+
ÜÜ) *
$num
ÜÜ+ ,
]
ÜÜ, -
=
ÜÜ. /
vertices
ÜÜ0 8
[
ÜÜ8 9
vertexIndex
ÜÜ9 D
+
ÜÜE F
$num
ÜÜG H
]
ÜÜH I
+
ÜÜJ K
offset
ÜÜL R
;
ÜÜR S
vertices
áá 
[
áá 
vertexIndex
áá (
+
áá) *
$num
áá+ ,
]
áá, -
=
áá. /
vertices
áá0 8
[
áá8 9
vertexIndex
áá9 D
+
ááE F
$num
ááG H
]
ááH I
+
ááJ K
offset
ááL R
;
ááR S
vertices
àà 
[
àà 
vertexIndex
àà (
+
àà) *
$num
àà+ ,
]
àà, -
=
àà. /
vertices
àà0 8
[
àà8 9
vertexIndex
àà9 D
+
ààE F
$num
ààG H
]
ààH I
+
ààJ K
offset
ààL R
;
ààR S
vertices
ââ 
[
ââ 
vertexIndex
ââ (
+
ââ) *
$num
ââ+ ,
]
ââ, -
=
ââ. /
vertices
ââ0 8
[
ââ8 9
vertexIndex
ââ9 D
+
ââE F
$num
ââG H
]
ââH I
+
ââJ K
offset
ââL R
;
ââR S
Color32
åå 
c
åå 
=
åå 
new
åå  #
Color32
åå$ +
(
åå+ ,
$num
åå, /
,
åå/ 0
$num
åå1 4
,
åå4 5
$num
åå6 9
,
åå9 :
$num
åå; >
)
åå> ?
;
åå? @
Color32
èè 
[
èè 
]
èè 
vertexColors
èè *
=
èè+ ,
m_TextMeshPro
èè- :
.
èè: ;
textInfo
èè; C
.
èèC D
meshInfo
èèD L
[
èèL M
materialIndex
èèM Z
]
èèZ [
.
èè[ \
colors32
èè\ d
;
èèd e
vertexColors
ëë  
[
ëë  !
vertexIndex
ëë! ,
+
ëë- .
$num
ëë/ 0
]
ëë0 1
=
ëë2 3
c
ëë4 5
;
ëë5 6
vertexColors
íí  
[
íí  !
vertexIndex
íí! ,
+
íí- .
$num
íí/ 0
]
íí0 1
=
íí2 3
c
íí4 5
;
íí5 6
vertexColors
ìì  
[
ìì  !
vertexIndex
ìì! ,
+
ìì- .
$num
ìì/ 0
]
ìì0 1
=
ìì2 3
c
ìì4 5
;
ìì5 6
vertexColors
îî  
[
îî  !
vertexIndex
îî! ,
+
îî- .
$num
îî/ 0
]
îî0 1
=
îî2 3
c
îî4 5
;
îî5 6
TMP_MeshInfo
òò  
meshInfo
òò! )
=
òò* +
m_TextMeshPro
òò, 9
.
òò9 :
textInfo
òò: B
.
òòB C
meshInfo
òòC K
[
òòK L
materialIndex
òòL Y
]
òòY Z
;
òòZ [
int
õõ 
lastVertexIndex
õõ '
=
õõ( )
vertices
õõ* 2
.
õõ2 3
Length
õõ3 9
-
õõ: ;
$num
õõ< =
;
õõ= >
meshInfo
üü 
.
üü 
SwapVertexData
üü +
(
üü+ ,
vertexIndex
üü, 7
,
üü7 8
lastVertexIndex
üü9 H
)
üüH I
;
üüI J
m_TextMeshPro
¢¢ !
.
¢¢! "
UpdateVertexData
¢¢" 2
(
¢¢2 3'
TMP_VertexDataUpdateFlags
¢¢3 L
.
¢¢L M
All
¢¢M P
)
¢¢P Q
;
¢¢Q R
}
££ 
int
©© 
	wordIndex
©© 
=
©© 
TMP_TextUtilities
©©  1
.
©©1 2"
FindIntersectingWord
©©2 F
(
©©F G
m_TextMeshPro
©©G T
,
©©T U
Input
©©V [
.
©©[ \
mousePosition
©©\ i
,
©©i j
m_Camera
©©k s
)
©©s t
;
©©t u
if
¨¨ 
(
¨¨ '
m_TextPopup_RectTransform
¨¨ -
!=
¨¨. 0
null
¨¨1 5
&&
¨¨6 8
m_selectedWord
¨¨9 G
!=
¨¨H J
-
¨¨K L
$num
¨¨L M
&&
¨¨N P
(
¨¨Q R
	wordIndex
¨¨R [
==
¨¨\ ^
-
¨¨_ `
$num
¨¨` a
||
¨¨b d
	wordIndex
¨¨e n
!=
¨¨o q
m_selectedWord¨¨r Ä
)¨¨Ä Å
)¨¨Å Ç
{
≠≠ 
TMP_WordInfo
ÆÆ  
wInfo
ÆÆ! &
=
ÆÆ' (
m_TextMeshPro
ÆÆ) 6
.
ÆÆ6 7
textInfo
ÆÆ7 ?
.
ÆÆ? @
wordInfo
ÆÆ@ H
[
ÆÆH I
m_selectedWord
ÆÆI W
]
ÆÆW X
;
ÆÆX Y
for
±± 
(
±± 
int
±± 
i
±± 
=
±±  
$num
±±! "
;
±±" #
i
±±$ %
<
±±& '
wInfo
±±( -
.
±±- .
characterCount
±±. <
;
±±< =
i
±±> ?
++
±±? A
)
±±A B
{
≤≤ 
int
≥≥ 
characterIndex
≥≥ *
=
≥≥+ ,
wInfo
≥≥- 2
.
≥≥2 3!
firstCharacterIndex
≥≥3 F
+
≥≥G H
i
≥≥I J
;
≥≥J K
int
∂∂ 
	meshIndex
∂∂ %
=
∂∂& '
m_TextMeshPro
∂∂( 5
.
∂∂5 6
textInfo
∂∂6 >
.
∂∂> ?
characterInfo
∂∂? L
[
∂∂L M
characterIndex
∂∂M [
]
∂∂[ \
.
∂∂\ ]$
materialReferenceIndex
∂∂] s
;
∂∂s t
int
ππ 
vertexIndex
ππ '
=
ππ( )
m_TextMeshPro
ππ* 7
.
ππ7 8
textInfo
ππ8 @
.
ππ@ A
characterInfo
ππA N
[
ππN O
characterIndex
ππO ]
]
ππ] ^
.
ππ^ _
vertexIndex
ππ_ j
;
ππj k
Color32
ºº 
[
ºº  
]
ºº  !
vertexColors
ºº" .
=
ºº/ 0
m_TextMeshPro
ºº1 >
.
ºº> ?
textInfo
ºº? G
.
ººG H
meshInfo
ººH P
[
ººP Q
	meshIndex
ººQ Z
]
ººZ [
.
ºº[ \
colors32
ºº\ d
;
ººd e
Color32
ææ 
c
ææ  !
=
ææ" #
vertexColors
ææ$ 0
[
ææ0 1
vertexIndex
ææ1 <
+
ææ= >
$num
ææ? @
]
ææ@ A
.
ææA B
Tint
ææB F
(
ææF G
$num
ææG O
)
ææO P
;
ææP Q
vertexColors
¿¿ $
[
¿¿$ %
vertexIndex
¿¿% 0
+
¿¿1 2
$num
¿¿3 4
]
¿¿4 5
=
¿¿6 7
c
¿¿8 9
;
¿¿9 :
vertexColors
¡¡ $
[
¡¡$ %
vertexIndex
¡¡% 0
+
¡¡1 2
$num
¡¡3 4
]
¡¡4 5
=
¡¡6 7
c
¡¡8 9
;
¡¡9 :
vertexColors
¬¬ $
[
¬¬$ %
vertexIndex
¬¬% 0
+
¬¬1 2
$num
¬¬3 4
]
¬¬4 5
=
¬¬6 7
c
¬¬8 9
;
¬¬9 :
vertexColors
√√ $
[
√√$ %
vertexIndex
√√% 0
+
√√1 2
$num
√√3 4
]
√√4 5
=
√√6 7
c
√√8 9
;
√√9 :
}
ƒƒ 
m_TextMeshPro
«« !
.
««! "
UpdateVertexData
««" 2
(
««2 3'
TMP_VertexDataUpdateFlags
««3 L
.
««L M
All
««M P
)
««P Q
;
««Q R
m_selectedWord
…… "
=
……# $
-
……% &
$num
……& '
;
……' (
}
   
if
ŒŒ 
(
ŒŒ 
	wordIndex
ŒŒ 
!=
ŒŒ  
-
ŒŒ! "
$num
ŒŒ" #
&&
ŒŒ$ &
	wordIndex
ŒŒ' 0
!=
ŒŒ1 3
m_selectedWord
ŒŒ4 B
&&
ŒŒC E
!
ŒŒF G
(
ŒŒG H
Input
ŒŒH M
.
ŒŒM N
GetKey
ŒŒN T
(
ŒŒT U
KeyCode
ŒŒU \
.
ŒŒ\ ]
	LeftShift
ŒŒ] f
)
ŒŒf g
||
ŒŒh j
Input
ŒŒk p
.
ŒŒp q
GetKey
ŒŒq w
(
ŒŒw x
KeyCode
ŒŒx 
.ŒŒ Ä

RightShiftŒŒÄ ä
)ŒŒä ã
)ŒŒã å
)ŒŒå ç
{
œœ 
m_selectedWord
–– "
=
––# $
	wordIndex
––% .
;
––. /
TMP_WordInfo
““  
wInfo
““! &
=
““' (
m_TextMeshPro
““) 6
.
““6 7
textInfo
““7 ?
.
““? @
wordInfo
““@ H
[
““H I
	wordIndex
““I R
]
““R S
;
““S T
for
’’ 
(
’’ 
int
’’ 
i
’’ 
=
’’  
$num
’’! "
;
’’" #
i
’’$ %
<
’’& '
wInfo
’’( -
.
’’- .
characterCount
’’. <
;
’’< =
i
’’> ?
++
’’? A
)
’’A B
{
÷÷ 
int
◊◊ 
characterIndex
◊◊ *
=
◊◊+ ,
wInfo
◊◊- 2
.
◊◊2 3!
firstCharacterIndex
◊◊3 F
+
◊◊G H
i
◊◊I J
;
◊◊J K
int
⁄⁄ 
	meshIndex
⁄⁄ %
=
⁄⁄& '
m_TextMeshPro
⁄⁄( 5
.
⁄⁄5 6
textInfo
⁄⁄6 >
.
⁄⁄> ?
characterInfo
⁄⁄? L
[
⁄⁄L M
characterIndex
⁄⁄M [
]
⁄⁄[ \
.
⁄⁄\ ]$
materialReferenceIndex
⁄⁄] s
;
⁄⁄s t
int
‹‹ 
vertexIndex
‹‹ '
=
‹‹( )
m_TextMeshPro
‹‹* 7
.
‹‹7 8
textInfo
‹‹8 @
.
‹‹@ A
characterInfo
‹‹A N
[
‹‹N O
characterIndex
‹‹O ]
]
‹‹] ^
.
‹‹^ _
vertexIndex
‹‹_ j
;
‹‹j k
Color32
ﬂﬂ 
[
ﬂﬂ  
]
ﬂﬂ  !
vertexColors
ﬂﬂ" .
=
ﬂﬂ/ 0
m_TextMeshPro
ﬂﬂ1 >
.
ﬂﬂ> ?
textInfo
ﬂﬂ? G
.
ﬂﬂG H
meshInfo
ﬂﬂH P
[
ﬂﬂP Q
	meshIndex
ﬂﬂQ Z
]
ﬂﬂZ [
.
ﬂﬂ[ \
colors32
ﬂﬂ\ d
;
ﬂﬂd e
Color32
·· 
c
··  !
=
··" #
vertexColors
··$ 0
[
··0 1
vertexIndex
··1 <
+
··= >
$num
··? @
]
··@ A
.
··A B
Tint
··B F
(
··F G
$num
··G L
)
··L M
;
··M N
vertexColors
„„ $
[
„„$ %
vertexIndex
„„% 0
+
„„1 2
$num
„„3 4
]
„„4 5
=
„„6 7
c
„„8 9
;
„„9 :
vertexColors
‰‰ $
[
‰‰$ %
vertexIndex
‰‰% 0
+
‰‰1 2
$num
‰‰3 4
]
‰‰4 5
=
‰‰6 7
c
‰‰8 9
;
‰‰9 :
vertexColors
ÂÂ $
[
ÂÂ$ %
vertexIndex
ÂÂ% 0
+
ÂÂ1 2
$num
ÂÂ3 4
]
ÂÂ4 5
=
ÂÂ6 7
c
ÂÂ8 9
;
ÂÂ9 :
vertexColors
ÊÊ $
[
ÊÊ$ %
vertexIndex
ÊÊ% 0
+
ÊÊ1 2
$num
ÊÊ3 4
]
ÊÊ4 5
=
ÊÊ6 7
c
ÊÊ8 9
;
ÊÊ9 :
}
ÁÁ 
m_TextMeshPro
ÍÍ !
.
ÍÍ! "
UpdateVertexData
ÍÍ" 2
(
ÍÍ2 3'
TMP_VertexDataUpdateFlags
ÍÍ3 L
.
ÍÍL M
All
ÍÍM P
)
ÍÍP Q
;
ÍÍQ R
}
ÏÏ 
int
ÚÚ 
	linkIndex
ÚÚ 
=
ÚÚ 
TMP_TextUtilities
ÚÚ  1
.
ÚÚ1 2"
FindIntersectingLink
ÚÚ2 F
(
ÚÚF G
m_TextMeshPro
ÚÚG T
,
ÚÚT U
Input
ÚÚV [
.
ÚÚ[ \
mousePosition
ÚÚ\ i
,
ÚÚi j
m_Camera
ÚÚk s
)
ÚÚs t
;
ÚÚt u
if
ıı 
(
ıı 
(
ıı 
	linkIndex
ıı 
==
ıı !
-
ıı" #
$num
ıı# $
&&
ıı% '
m_selectedLink
ıı( 6
!=
ıı7 9
-
ıı: ;
$num
ıı; <
)
ıı< =
||
ıı> @
	linkIndex
ııA J
!=
ııK M
m_selectedLink
ııN \
)
ıı\ ]
{
ˆˆ '
m_TextPopup_RectTransform
˜˜ -
.
˜˜- .

gameObject
˜˜. 8
.
˜˜8 9
	SetActive
˜˜9 B
(
˜˜B C
false
˜˜C H
)
˜˜H I
;
˜˜I J
m_selectedLink
¯¯ "
=
¯¯# $
-
¯¯% &
$num
¯¯& '
;
¯¯' (
}
˘˘ 
if
¸¸ 
(
¸¸ 
	linkIndex
¸¸ 
!=
¸¸  
-
¸¸! "
$num
¸¸" #
&&
¸¸$ &
	linkIndex
¸¸' 0
!=
¸¸1 3
m_selectedLink
¸¸4 B
)
¸¸B C
{
˝˝ 
m_selectedLink
˛˛ "
=
˛˛# $
	linkIndex
˛˛% .
;
˛˛. /
TMP_LinkInfo
ÄÄ  
linkInfo
ÄÄ! )
=
ÄÄ* +
m_TextMeshPro
ÄÄ, 9
.
ÄÄ9 :
textInfo
ÄÄ: B
.
ÄÄB C
linkInfo
ÄÄC K
[
ÄÄK L
	linkIndex
ÄÄL U
]
ÄÄU V
;
ÄÄV W
Vector3
ÑÑ #
worldPointInRectangle
ÑÑ 1
;
ÑÑ1 2"
RectTransformUtility
ÖÖ (
.
ÖÖ( )0
"ScreenPointToWorldPointInRectangle
ÖÖ) K
(
ÖÖK L
m_TextMeshPro
ÖÖL Y
.
ÖÖY Z
rectTransform
ÖÖZ g
,
ÖÖg h
Input
ÖÖi n
.
ÖÖn o
mousePosition
ÖÖo |
,
ÖÖ| }
m_CameraÖÖ~ Ü
,ÖÖÜ á
outÖÖà ã%
worldPointInRectangleÖÖå °
)ÖÖ° ¢
;ÖÖ¢ £
switch
áá 
(
áá 
linkInfo
áá $
.
áá$ %
	GetLinkID
áá% .
(
áá. /
)
áá/ 0
)
áá0 1
{
àà 
case
ââ 
$str
ââ $
:
ââ$ %'
m_TextPopup_RectTransform
ää 5
.
ää5 6
position
ää6 >
=
ää? @#
worldPointInRectangle
ääA V
;
ääV W'
m_TextPopup_RectTransform
ãã 5
.
ãã5 6

gameObject
ãã6 @
.
ãã@ A
	SetActive
ããA J
(
ããJ K
true
ããK O
)
ããO P
;
ããP Q&
m_TextPopup_TMPComponent
åå 4
.
åå4 5
text
åå5 9
=
åå: ;

k_LinkText
åå< F
+
ååG H
$str
ååI Q
;
ååQ R
break
çç !
;
çç! "
case
éé 
$str
éé $
:
éé$ %'
m_TextPopup_RectTransform
èè 5
.
èè5 6
position
èè6 >
=
èè? @#
worldPointInRectangle
èèA V
;
èèV W'
m_TextPopup_RectTransform
êê 5
.
êê5 6

gameObject
êê6 @
.
êê@ A
	SetActive
êêA J
(
êêJ K
true
êêK O
)
êêO P
;
êêP Q&
m_TextPopup_TMPComponent
ëë 4
.
ëë4 5
text
ëë5 9
=
ëë: ;

k_LinkText
ëë< F
+
ëëG H
$str
ëëI Q
;
ëëQ R
break
íí !
;
íí! "
}
ìì 
}
îî 
}
óó 
else
òò 
{
ôô 
if
õõ 
(
õõ 
m_lastIndex
õõ 
!=
õõ  "
-
õõ# $
$num
õõ$ %
)
õõ% &
{
úú +
RestoreCachedVertexAttributes
ùù 1
(
ùù1 2
m_lastIndex
ùù2 =
)
ùù= >
;
ùù> ?
m_lastIndex
ûû 
=
ûû  !
-
ûû" #
$num
ûû# $
;
ûû$ %
}
üü 
}
†† 
}
¢¢ 	
public
•• 
void
•• 
OnPointerEnter
•• "
(
••" #
PointerEventData
••# 3
	eventData
••4 =
)
••= >
{
¶¶ 	
isHoveringObject
®® 
=
®® 
true
®® #
;
®®# $
}
©© 	
public
¨¨ 
void
¨¨ 
OnPointerExit
¨¨ !
(
¨¨! "
PointerEventData
¨¨" 2
	eventData
¨¨3 <
)
¨¨< =
{
≠≠ 	
isHoveringObject
ØØ 
=
ØØ 
false
ØØ $
;
ØØ$ %
}
∞∞ 	
public
≥≥ 
void
≥≥ 
OnPointerClick
≥≥ "
(
≥≥" #
PointerEventData
≥≥# 3
	eventData
≥≥4 =
)
≥≥= >
{
¥¥ 	
}
øø 	
public
¬¬ 
void
¬¬ 
OnPointerUp
¬¬ 
(
¬¬  
PointerEventData
¬¬  0
	eventData
¬¬1 :
)
¬¬: ;
{
√√ 	
}
≈≈ 	
void
»» +
RestoreCachedVertexAttributes
»» *
(
»»* +
int
»»+ .
index
»»/ 4
)
»»4 5
{
…… 	
if
   
(
   
index
   
==
   
-
   
$num
   
||
   
index
   $
>
  % &
m_TextMeshPro
  ' 4
.
  4 5
textInfo
  5 =
.
  = >
characterCount
  > L
-
  M N
$num
  O P
)
  P Q
return
  R X
;
  X Y
int
ÕÕ 
materialIndex
ÕÕ 
=
ÕÕ 
m_TextMeshPro
ÕÕ  -
.
ÕÕ- .
textInfo
ÕÕ. 6
.
ÕÕ6 7
characterInfo
ÕÕ7 D
[
ÕÕD E
index
ÕÕE J
]
ÕÕJ K
.
ÕÕK L$
materialReferenceIndex
ÕÕL b
;
ÕÕb c
int
–– 
vertexIndex
–– 
=
–– 
m_TextMeshPro
–– +
.
––+ ,
textInfo
––, 4
.
––4 5
characterInfo
––5 B
[
––B C
index
––C H
]
––H I
.
––I J
vertexIndex
––J U
;
––U V
Vector3
‘‘ 
[
‘‘ 
]
‘‘ 
src_vertices
‘‘ "
=
‘‘# $(
m_cachedMeshInfoVertexData
‘‘% ?
[
‘‘? @
materialIndex
‘‘@ M
]
‘‘M N
.
‘‘N O
vertices
‘‘O W
;
‘‘W X
Vector3
◊◊ 
[
◊◊ 
]
◊◊ 
dst_vertices
◊◊ "
=
◊◊# $
m_TextMeshPro
◊◊% 2
.
◊◊2 3
textInfo
◊◊3 ;
.
◊◊; <
meshInfo
◊◊< D
[
◊◊D E
materialIndex
◊◊E R
]
◊◊R S
.
◊◊S T
vertices
◊◊T \
;
◊◊\ ]
dst_vertices
⁄⁄ 
[
⁄⁄ 
vertexIndex
⁄⁄ $
+
⁄⁄% &
$num
⁄⁄' (
]
⁄⁄( )
=
⁄⁄* +
src_vertices
⁄⁄, 8
[
⁄⁄8 9
vertexIndex
⁄⁄9 D
+
⁄⁄E F
$num
⁄⁄G H
]
⁄⁄H I
;
⁄⁄I J
dst_vertices
€€ 
[
€€ 
vertexIndex
€€ $
+
€€% &
$num
€€' (
]
€€( )
=
€€* +
src_vertices
€€, 8
[
€€8 9
vertexIndex
€€9 D
+
€€E F
$num
€€G H
]
€€H I
;
€€I J
dst_vertices
‹‹ 
[
‹‹ 
vertexIndex
‹‹ $
+
‹‹% &
$num
‹‹' (
]
‹‹( )
=
‹‹* +
src_vertices
‹‹, 8
[
‹‹8 9
vertexIndex
‹‹9 D
+
‹‹E F
$num
‹‹G H
]
‹‹H I
;
‹‹I J
dst_vertices
›› 
[
›› 
vertexIndex
›› $
+
››% &
$num
››' (
]
››( )
=
››* +
src_vertices
››, 8
[
››8 9
vertexIndex
››9 D
+
››E F
$num
››G H
]
››H I
;
››I J
Color32
·· 
[
·· 
]
·· 

dst_colors
··  
=
··! "
m_TextMeshPro
··# 0
.
··0 1
textInfo
··1 9
.
··9 :
meshInfo
··: B
[
··B C
materialIndex
··C P
]
··P Q
.
··Q R
colors32
··R Z
;
··Z [
Color32
‰‰ 
[
‰‰ 
]
‰‰ 

src_colors
‰‰  
=
‰‰! "(
m_cachedMeshInfoVertexData
‰‰# =
[
‰‰= >
materialIndex
‰‰> K
]
‰‰K L
.
‰‰L M
colors32
‰‰M U
;
‰‰U V

dst_colors
ÁÁ 
[
ÁÁ 
vertexIndex
ÁÁ "
+
ÁÁ# $
$num
ÁÁ% &
]
ÁÁ& '
=
ÁÁ( )

src_colors
ÁÁ* 4
[
ÁÁ4 5
vertexIndex
ÁÁ5 @
+
ÁÁA B
$num
ÁÁC D
]
ÁÁD E
;
ÁÁE F

dst_colors
ËË 
[
ËË 
vertexIndex
ËË "
+
ËË# $
$num
ËË% &
]
ËË& '
=
ËË( )

src_colors
ËË* 4
[
ËË4 5
vertexIndex
ËË5 @
+
ËËA B
$num
ËËC D
]
ËËD E
;
ËËE F

dst_colors
ÈÈ 
[
ÈÈ 
vertexIndex
ÈÈ "
+
ÈÈ# $
$num
ÈÈ% &
]
ÈÈ& '
=
ÈÈ( )

src_colors
ÈÈ* 4
[
ÈÈ4 5
vertexIndex
ÈÈ5 @
+
ÈÈA B
$num
ÈÈC D
]
ÈÈD E
;
ÈÈE F

dst_colors
ÍÍ 
[
ÍÍ 
vertexIndex
ÍÍ "
+
ÍÍ# $
$num
ÍÍ% &
]
ÍÍ& '
=
ÍÍ( )

src_colors
ÍÍ* 4
[
ÍÍ4 5
vertexIndex
ÍÍ5 @
+
ÍÍA B
$num
ÍÍC D
]
ÍÍD E
;
ÍÍE F
Vector2
ÓÓ 
[
ÓÓ 
]
ÓÓ 
src_uv0s
ÓÓ 
=
ÓÓ  (
m_cachedMeshInfoVertexData
ÓÓ! ;
[
ÓÓ; <
materialIndex
ÓÓ< I
]
ÓÓI J
.
ÓÓJ K
uvs0
ÓÓK O
;
ÓÓO P
Vector2
ÔÔ 
[
ÔÔ 
]
ÔÔ 
dst_uv0s
ÔÔ 
=
ÔÔ  
m_TextMeshPro
ÔÔ! .
.
ÔÔ. /
textInfo
ÔÔ/ 7
.
ÔÔ7 8
meshInfo
ÔÔ8 @
[
ÔÔ@ A
materialIndex
ÔÔA N
]
ÔÔN O
.
ÔÔO P
uvs0
ÔÔP T
;
ÔÔT U
dst_uv0s
 
[
 
vertexIndex
  
+
! "
$num
# $
]
$ %
=
& '
src_uv0s
( 0
[
0 1
vertexIndex
1 <
+
= >
$num
? @
]
@ A
;
A B
dst_uv0s
ÒÒ 
[
ÒÒ 
vertexIndex
ÒÒ  
+
ÒÒ! "
$num
ÒÒ# $
]
ÒÒ$ %
=
ÒÒ& '
src_uv0s
ÒÒ( 0
[
ÒÒ0 1
vertexIndex
ÒÒ1 <
+
ÒÒ= >
$num
ÒÒ? @
]
ÒÒ@ A
;
ÒÒA B
dst_uv0s
ÚÚ 
[
ÚÚ 
vertexIndex
ÚÚ  
+
ÚÚ! "
$num
ÚÚ# $
]
ÚÚ$ %
=
ÚÚ& '
src_uv0s
ÚÚ( 0
[
ÚÚ0 1
vertexIndex
ÚÚ1 <
+
ÚÚ= >
$num
ÚÚ? @
]
ÚÚ@ A
;
ÚÚA B
dst_uv0s
ÛÛ 
[
ÛÛ 
vertexIndex
ÛÛ  
+
ÛÛ! "
$num
ÛÛ# $
]
ÛÛ$ %
=
ÛÛ& '
src_uv0s
ÛÛ( 0
[
ÛÛ0 1
vertexIndex
ÛÛ1 <
+
ÛÛ= >
$num
ÛÛ? @
]
ÛÛ@ A
;
ÛÛA B
Vector2
ˆˆ 
[
ˆˆ 
]
ˆˆ 
src_uv2s
ˆˆ 
=
ˆˆ  (
m_cachedMeshInfoVertexData
ˆˆ! ;
[
ˆˆ; <
materialIndex
ˆˆ< I
]
ˆˆI J
.
ˆˆJ K
uvs2
ˆˆK O
;
ˆˆO P
Vector2
˜˜ 
[
˜˜ 
]
˜˜ 
dst_uv2s
˜˜ 
=
˜˜  
m_TextMeshPro
˜˜! .
.
˜˜. /
textInfo
˜˜/ 7
.
˜˜7 8
meshInfo
˜˜8 @
[
˜˜@ A
materialIndex
˜˜A N
]
˜˜N O
.
˜˜O P
uvs2
˜˜P T
;
˜˜T U
dst_uv2s
¯¯ 
[
¯¯ 
vertexIndex
¯¯  
+
¯¯! "
$num
¯¯# $
]
¯¯$ %
=
¯¯& '
src_uv2s
¯¯( 0
[
¯¯0 1
vertexIndex
¯¯1 <
+
¯¯= >
$num
¯¯? @
]
¯¯@ A
;
¯¯A B
dst_uv2s
˘˘ 
[
˘˘ 
vertexIndex
˘˘  
+
˘˘! "
$num
˘˘# $
]
˘˘$ %
=
˘˘& '
src_uv2s
˘˘( 0
[
˘˘0 1
vertexIndex
˘˘1 <
+
˘˘= >
$num
˘˘? @
]
˘˘@ A
;
˘˘A B
dst_uv2s
˙˙ 
[
˙˙ 
vertexIndex
˙˙  
+
˙˙! "
$num
˙˙# $
]
˙˙$ %
=
˙˙& '
src_uv2s
˙˙( 0
[
˙˙0 1
vertexIndex
˙˙1 <
+
˙˙= >
$num
˙˙? @
]
˙˙@ A
;
˙˙A B
dst_uv2s
˚˚ 
[
˚˚ 
vertexIndex
˚˚  
+
˚˚! "
$num
˚˚# $
]
˚˚$ %
=
˚˚& '
src_uv2s
˚˚( 0
[
˚˚0 1
vertexIndex
˚˚1 <
+
˚˚= >
$num
˚˚? @
]
˚˚@ A
;
˚˚A B
int
ˇˇ 
	lastIndex
ˇˇ 
=
ˇˇ 
(
ˇˇ 
src_vertices
ˇˇ )
.
ˇˇ) *
Length
ˇˇ* 0
/
ˇˇ1 2
$num
ˇˇ3 4
-
ˇˇ5 6
$num
ˇˇ7 8
)
ˇˇ8 9
*
ˇˇ: ;
$num
ˇˇ< =
;
ˇˇ= >
dst_vertices
ÇÇ 
[
ÇÇ 
	lastIndex
ÇÇ "
+
ÇÇ# $
$num
ÇÇ% &
]
ÇÇ& '
=
ÇÇ( )
src_vertices
ÇÇ* 6
[
ÇÇ6 7
	lastIndex
ÇÇ7 @
+
ÇÇA B
$num
ÇÇC D
]
ÇÇD E
;
ÇÇE F
dst_vertices
ÉÉ 
[
ÉÉ 
	lastIndex
ÉÉ "
+
ÉÉ# $
$num
ÉÉ% &
]
ÉÉ& '
=
ÉÉ( )
src_vertices
ÉÉ* 6
[
ÉÉ6 7
	lastIndex
ÉÉ7 @
+
ÉÉA B
$num
ÉÉC D
]
ÉÉD E
;
ÉÉE F
dst_vertices
ÑÑ 
[
ÑÑ 
	lastIndex
ÑÑ "
+
ÑÑ# $
$num
ÑÑ% &
]
ÑÑ& '
=
ÑÑ( )
src_vertices
ÑÑ* 6
[
ÑÑ6 7
	lastIndex
ÑÑ7 @
+
ÑÑA B
$num
ÑÑC D
]
ÑÑD E
;
ÑÑE F
dst_vertices
ÖÖ 
[
ÖÖ 
	lastIndex
ÖÖ "
+
ÖÖ# $
$num
ÖÖ% &
]
ÖÖ& '
=
ÖÖ( )
src_vertices
ÖÖ* 6
[
ÖÖ6 7
	lastIndex
ÖÖ7 @
+
ÖÖA B
$num
ÖÖC D
]
ÖÖD E
;
ÖÖE F

src_colors
àà 
=
àà (
m_cachedMeshInfoVertexData
àà 3
[
àà3 4
materialIndex
àà4 A
]
ààA B
.
ààB C
colors32
ààC K
;
ààK L

dst_colors
ââ 
=
ââ 
m_TextMeshPro
ââ &
.
ââ& '
textInfo
ââ' /
.
ââ/ 0
meshInfo
ââ0 8
[
ââ8 9
materialIndex
ââ9 F
]
ââF G
.
ââG H
colors32
ââH P
;
ââP Q

dst_colors
ää 
[
ää 
	lastIndex
ää  
+
ää! "
$num
ää# $
]
ää$ %
=
ää& '

src_colors
ää( 2
[
ää2 3
	lastIndex
ää3 <
+
ää= >
$num
ää? @
]
ää@ A
;
ääA B

dst_colors
ãã 
[
ãã 
	lastIndex
ãã  
+
ãã! "
$num
ãã# $
]
ãã$ %
=
ãã& '

src_colors
ãã( 2
[
ãã2 3
	lastIndex
ãã3 <
+
ãã= >
$num
ãã? @
]
ãã@ A
;
ããA B

dst_colors
åå 
[
åå 
	lastIndex
åå  
+
åå! "
$num
åå# $
]
åå$ %
=
åå& '

src_colors
åå( 2
[
åå2 3
	lastIndex
åå3 <
+
åå= >
$num
åå? @
]
åå@ A
;
ååA B

dst_colors
çç 
[
çç 
	lastIndex
çç  
+
çç! "
$num
çç# $
]
çç$ %
=
çç& '

src_colors
çç( 2
[
çç2 3
	lastIndex
çç3 <
+
çç= >
$num
çç? @
]
çç@ A
;
ççA B
src_uv0s
êê 
=
êê (
m_cachedMeshInfoVertexData
êê 1
[
êê1 2
materialIndex
êê2 ?
]
êê? @
.
êê@ A
uvs0
êêA E
;
êêE F
dst_uv0s
ëë 
=
ëë 
m_TextMeshPro
ëë $
.
ëë$ %
textInfo
ëë% -
.
ëë- .
meshInfo
ëë. 6
[
ëë6 7
materialIndex
ëë7 D
]
ëëD E
.
ëëE F
uvs0
ëëF J
;
ëëJ K
dst_uv0s
íí 
[
íí 
	lastIndex
íí 
+
íí  
$num
íí! "
]
íí" #
=
íí$ %
src_uv0s
íí& .
[
íí. /
	lastIndex
íí/ 8
+
íí9 :
$num
íí; <
]
íí< =
;
íí= >
dst_uv0s
ìì 
[
ìì 
	lastIndex
ìì 
+
ìì  
$num
ìì! "
]
ìì" #
=
ìì$ %
src_uv0s
ìì& .
[
ìì. /
	lastIndex
ìì/ 8
+
ìì9 :
$num
ìì; <
]
ìì< =
;
ìì= >
dst_uv0s
îî 
[
îî 
	lastIndex
îî 
+
îî  
$num
îî! "
]
îî" #
=
îî$ %
src_uv0s
îî& .
[
îî. /
	lastIndex
îî/ 8
+
îî9 :
$num
îî; <
]
îî< =
;
îî= >
dst_uv0s
ïï 
[
ïï 
	lastIndex
ïï 
+
ïï  
$num
ïï! "
]
ïï" #
=
ïï$ %
src_uv0s
ïï& .
[
ïï. /
	lastIndex
ïï/ 8
+
ïï9 :
$num
ïï; <
]
ïï< =
;
ïï= >
src_uv2s
òò 
=
òò (
m_cachedMeshInfoVertexData
òò 1
[
òò1 2
materialIndex
òò2 ?
]
òò? @
.
òò@ A
uvs2
òòA E
;
òòE F
dst_uv2s
ôô 
=
ôô 
m_TextMeshPro
ôô $
.
ôô$ %
textInfo
ôô% -
.
ôô- .
meshInfo
ôô. 6
[
ôô6 7
materialIndex
ôô7 D
]
ôôD E
.
ôôE F
uvs2
ôôF J
;
ôôJ K
dst_uv2s
öö 
[
öö 
	lastIndex
öö 
+
öö  
$num
öö! "
]
öö" #
=
öö$ %
src_uv2s
öö& .
[
öö. /
	lastIndex
öö/ 8
+
öö9 :
$num
öö; <
]
öö< =
;
öö= >
dst_uv2s
õõ 
[
õõ 
	lastIndex
õõ 
+
õõ  
$num
õõ! "
]
õõ" #
=
õõ$ %
src_uv2s
õõ& .
[
õõ. /
	lastIndex
õõ/ 8
+
õõ9 :
$num
õõ; <
]
õõ< =
;
õõ= >
dst_uv2s
úú 
[
úú 
	lastIndex
úú 
+
úú  
$num
úú! "
]
úú" #
=
úú$ %
src_uv2s
úú& .
[
úú. /
	lastIndex
úú/ 8
+
úú9 :
$num
úú; <
]
úú< =
;
úú= >
dst_uv2s
ùù 
[
ùù 
	lastIndex
ùù 
+
ùù  
$num
ùù! "
]
ùù" #
=
ùù$ %
src_uv2s
ùù& .
[
ùù. /
	lastIndex
ùù/ 8
+
ùù9 :
$num
ùù; <
]
ùù< =
;
ùù= >
m_TextMeshPro
†† 
.
†† 
UpdateVertexData
†† *
(
††* +'
TMP_VertexDataUpdateFlags
††+ D
.
††D E
All
††E H
)
††H I
;
††I J
}
°° 	
}
¢¢ 
}££ ≠
MD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Stats\StatSystem\Player.cs
public 
class 
Player 
: 
MonoBehaviour #
{ 
[ 
SerializeField 
] 
private 
StatsUI $
statsUI% ,
;, -
public 

StatsUI 
StatsUI 
=> 
statsUI %
;% &
public		 

StatInteractable		 
Interactable		 (
{		( )
get		* -
;		- .
set		/ 2
;		2 3
}		4 5
private 
bool 
done 
= 
false 
; 
private 
void 
Update 
( 
) 
{ 
if 

(
 
statsUI 
. 
isOpen 
) 
{ 
done 
= 
true 
; 
return 
; 
} 	
if 

(
 
! 
done 
) 
{ 
if 
( 
Interactable 
!= 
null #
)# $
{ 
Interactable 
. 
Interact %
(% &
this& *
)* +
;+ ,
} 
} 	
} 
} Ô
QD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Stats\StatSystem\CloseStats.cs
public 
class 

CloseStats 
: 
MonoBehaviour '
{ 
[ 
SerializeField 
] 
private 

GameObject '
parent( .
;. /
[ 
SerializeField 
] 
private 

GameObject '
	statPhone( 1
;1 2
public 

void 
CloseStatsButton  
(  !
)! "
{ 
for 
( 
int 
i 
= 
$num 
; 
i 
< 
parent "
." #
	transform# ,
., -

childCount- 7
;7 8
i9 :
++: <
)< =
{ 	
Debug 
. 
Log 
( 
$str 
+ 
i 
)  
;  !
var 
child 
= 
parent 
. 
	transform (
.( )
GetChild) 1
(1 2
i2 3
)3 4
.4 5

gameObject5 ?
;? @
if 
( 
child 
!= 
null 
) 
child 
. 
	SetActive 
(  
false  %
)% &
;& '
} 	
Destroy 
( 
	statPhone 
) 
; 
} 
} £
kD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\EnvMapAnimator.cs
public 
class 
EnvMapAnimator 
: 
MonoBehaviour +
{, -
public 

Vector3 
RotationSpeeds !
;! "
private		 
TMP_Text		 
m_textMeshPro		 "
;		" #
private

 
Material

 

m_material

 
;

  
void 
Awake	 
( 
) 
{ 
m_textMeshPro 
= 
GetComponent $
<$ %
TMP_Text% -
>- .
(. /
)/ 0
;0 1

m_material 
= 
m_textMeshPro "
." #
fontSharedMaterial# 5
;5 6
} 
IEnumerator 
Start 
( 
) 
{ 
	Matrix4x4 
matrix 
= 
new 
	Matrix4x4 (
(( )
)) *
;* +
while 
( 
true 
) 
{ 	
matrix 
. 
SetTRS 
( 
Vector3 "
." #
zero# '
,' (

Quaternion) 3
.3 4
Euler4 9
(9 :
Time: >
.> ?
time? C
*D E
RotationSpeedsF T
.T U
xU V
,V W
TimeX \
.\ ]
time] a
*b c
RotationSpeedsd r
.r s
ys t
,u v
Timew {
.{ |
time	| Ä
*
Å Ç
RotationSpeeds
É ë
.
ë í
z
í ì
)
ì î
,
î ï
Vector3
ñ ù
.
ù û
one
û °
)
° ¢
;
¢ £

m_material 
. 
	SetMatrix  
(  !
$str! -
,- .
matrix/ 5
)5 6
;6 7
yield   
return   
null   
;   
}!! 	
}"" 
}## ÉY
sD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\TMP_UiFrameRateCounter.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class "
TMP_UiFrameRateCounter '
:( )
MonoBehaviour* 7
{		 
public

 
float

 
UpdateInterval

 #
=

$ %
$num

& *
;

* +
private 
float 
m_LastInterval $
=% &
$num' (
;( )
private 
int 
m_Frames 
= 
$num  
;  !
public 
enum %
FpsCounterAnchorPositions -
{. /
TopLeft0 7
,7 8

BottomLeft9 C
,C D
TopRightE M
,M N
BottomRightO Z
}[ \
;\ ]
public %
FpsCounterAnchorPositions (
AnchorPosition) 7
=8 9%
FpsCounterAnchorPositions: S
.S T
TopRightT \
;\ ]
private 
string 
htmlColorTag #
;# $
private 
const 
string 
fpsLabel %
=& '
$str( a
;a b
private 
TextMeshProUGUI 
m_TextMeshPro  -
;- .
private 
RectTransform $
m_frameCounter_transform 6
;6 7
private %
FpsCounterAnchorPositions )
last_AnchorPosition* =
;= >
void 
Awake 
( 
) 
{ 	
if 
( 
! 
enabled 
) 
return 
; 
Application 
. 
targetFrameRate '
=( )
$num* .
;. /

GameObject!! 
frameCounter!! #
=!!$ %
new!!& )

GameObject!!* 4
(!!4 5
$str!!5 D
)!!D E
;!!E F$
m_frameCounter_transform"" $
=""% &
frameCounter""' 3
.""3 4
AddComponent""4 @
<""@ A
RectTransform""A N
>""N O
(""O P
)""P Q
;""Q R$
m_frameCounter_transform$$ $
.$$$ %
	SetParent$$% .
($$. /
this$$/ 3
.$$3 4
	transform$$4 =
,$$= >
false$$? D
)$$D E
;$$E F
m_TextMeshPro&& 
=&& 
frameCounter&& (
.&&( )
AddComponent&&) 5
<&&5 6
TextMeshProUGUI&&6 E
>&&E F
(&&F G
)&&G H
;&&H I
m_TextMeshPro'' 
.'' 
font'' 
=''  
	Resources''! *
.''* +
Load''+ /
<''/ 0
TMP_FontAsset''0 =
>''= >
(''> ?
$str''? e
)''e f
;''f g
m_TextMeshPro(( 
.(( 
fontSharedMaterial(( ,
=((- .
	Resources((/ 8
.((8 9
Load((9 =
<((= >
Material((> F
>((F G
(((G H
$str((H x
)((x y
;((y z
m_TextMeshPro** 
.** 
enableWordWrapping** ,
=**- .
false**/ 4
;**4 5
m_TextMeshPro++ 
.++ 
fontSize++ "
=++# $
$num++% '
;++' (
m_TextMeshPro-- 
.-- 
	isOverlay-- #
=--$ %
true--& *
;--* +%
Set_FrameCounter_Position// %
(//% &
AnchorPosition//& 4
)//4 5
;//5 6
last_AnchorPosition00 
=00  !
AnchorPosition00" 0
;000 1
}11 	
void44 
Start44 
(44 
)44 
{55 	
m_LastInterval66 
=66 
Time66 !
.66! " 
realtimeSinceStartup66" 6
;666 7
m_Frames77 
=77 
$num77 
;77 
}88 	
void;; 
Update;; 
(;; 
);; 
{<< 	
if== 
(== 
AnchorPosition== 
!=== !
last_AnchorPosition==" 5
)==5 6%
Set_FrameCounter_Position>> )
(>>) *
AnchorPosition>>* 8
)>>8 9
;>>9 :
last_AnchorPosition@@ 
=@@  !
AnchorPosition@@" 0
;@@0 1
m_FramesBB 
+=BB 
$numBB 
;BB 
floatCC 
timeNowCC 
=CC 
TimeCC  
.CC  ! 
realtimeSinceStartupCC! 5
;CC5 6
ifEE 
(EE 
timeNowEE 
>EE 
m_LastIntervalEE (
+EE) *
UpdateIntervalEE+ 9
)EE9 :
{FF 
floatHH 
fpsHH 
=HH 
m_FramesHH $
/HH% &
(HH' (
timeNowHH( /
-HH0 1
m_LastIntervalHH2 @
)HH@ A
;HHA B
floatII 
msII 
=II 
$numII "
/II# $
MathfII% *
.II* +
MaxII+ .
(II. /
fpsII/ 2
,II2 3
$numII4 <
)II< =
;II= >
ifKK 
(KK 
fpsKK 
<KK 
$numKK 
)KK 
htmlColorTagLL  
=LL! "
$strLL# 3
;LL3 4
elseMM 
ifMM 
(MM 
fpsMM 
<MM 
$numMM !
)MM! "
htmlColorTagNN  
=NN! "
$strNN# 0
;NN0 1
elseOO 
htmlColorTagPP  
=PP! "
$strPP# 2
;PP2 3
m_TextMeshProRR 
.RR 
SetTextRR %
(RR% &
htmlColorTagRR& 2
+RR3 4
fpsLabelRR5 =
,RR= >
fpsRR? B
,RRB C
msRRD F
)RRF G
;RRG H
m_FramesTT 
=TT 
$numTT 
;TT 
m_LastIntervalUU 
=UU  
timeNowUU! (
;UU( )
}VV 
}WW 	
voidZZ %
Set_FrameCounter_PositionZZ &
(ZZ& '%
FpsCounterAnchorPositionsZZ' @
anchor_positionZZA P
)ZZP Q
{[[ 	
switch\\ 
(\\ 
anchor_position\\ #
)\\# $
{]] 
case^^ %
FpsCounterAnchorPositions^^ .
.^^. /
TopLeft^^/ 6
:^^6 7
m_TextMeshPro__ !
.__! "
	alignment__" +
=__, - 
TextAlignmentOptions__. B
.__B C
TopLeft__C J
;__J K$
m_frameCounter_transform`` ,
.``, -
pivot``- 2
=``3 4
new``5 8
Vector2``9 @
(``@ A
$num``A B
,``B C
$num``D E
)``E F
;``F G$
m_frameCounter_transformaa ,
.aa, -
	anchorMinaa- 6
=aa7 8
newaa9 <
Vector2aa= D
(aaD E
$numaaE J
,aaJ K
$numaaL Q
)aaQ R
;aaR S$
m_frameCounter_transformbb ,
.bb, -
	anchorMaxbb- 6
=bb7 8
newbb9 <
Vector2bb= D
(bbD E
$numbbE J
,bbJ K
$numbbL Q
)bbQ R
;bbR S$
m_frameCounter_transformcc ,
.cc, -
anchoredPositioncc- =
=cc> ?
newcc@ C
Vector2ccD K
(ccK L
$numccL M
,ccM N
$numccO P
)ccP Q
;ccQ R
breakdd 
;dd 
caseee %
FpsCounterAnchorPositionsee .
.ee. /

BottomLeftee/ 9
:ee9 :
m_TextMeshProff !
.ff! "
	alignmentff" +
=ff, - 
TextAlignmentOptionsff. B
.ffB C

BottomLeftffC M
;ffM N$
m_frameCounter_transformgg ,
.gg, -
pivotgg- 2
=gg3 4
newgg5 8
Vector2gg9 @
(gg@ A
$numggA B
,ggB C
$numggD E
)ggE F
;ggF G$
m_frameCounter_transformhh ,
.hh, -
	anchorMinhh- 6
=hh7 8
newhh9 <
Vector2hh= D
(hhD E
$numhhE J
,hhJ K
$numhhL Q
)hhQ R
;hhR S$
m_frameCounter_transformii ,
.ii, -
	anchorMaxii- 6
=ii7 8
newii9 <
Vector2ii= D
(iiD E
$numiiE J
,iiJ K
$numiiL Q
)iiQ R
;iiR S$
m_frameCounter_transformjj ,
.jj, -
anchoredPositionjj- =
=jj> ?
newjj@ C
Vector2jjD K
(jjK L
$numjjL M
,jjM N
$numjjO P
)jjP Q
;jjQ R
breakkk 
;kk 
casell %
FpsCounterAnchorPositionsll .
.ll. /
TopRightll/ 7
:ll7 8
m_TextMeshPromm !
.mm! "
	alignmentmm" +
=mm, - 
TextAlignmentOptionsmm. B
.mmB C
TopRightmmC K
;mmK L$
m_frameCounter_transformnn ,
.nn, -
pivotnn- 2
=nn3 4
newnn5 8
Vector2nn9 @
(nn@ A
$numnnA B
,nnB C
$numnnD E
)nnE F
;nnF G$
m_frameCounter_transformoo ,
.oo, -
	anchorMinoo- 6
=oo7 8
newoo9 <
Vector2oo= D
(ooD E
$numooE J
,ooJ K
$numooL Q
)ooQ R
;ooR S$
m_frameCounter_transformpp ,
.pp, -
	anchorMaxpp- 6
=pp7 8
newpp9 <
Vector2pp= D
(ppD E
$numppE J
,ppJ K
$numppL Q
)ppQ R
;ppR S$
m_frameCounter_transformqq ,
.qq, -
anchoredPositionqq- =
=qq> ?
newqq@ C
Vector2qqD K
(qqK L
$numqqL M
,qqM N
$numqqO P
)qqP Q
;qqQ R
breakrr 
;rr 
casess %
FpsCounterAnchorPositionsss .
.ss. /
BottomRightss/ :
:ss: ;
m_TextMeshPrott !
.tt! "
	alignmenttt" +
=tt, - 
TextAlignmentOptionstt. B
.ttB C
BottomRightttC N
;ttN O$
m_frameCounter_transformuu ,
.uu, -
pivotuu- 2
=uu3 4
newuu5 8
Vector2uu9 @
(uu@ A
$numuuA B
,uuB C
$numuuD E
)uuE F
;uuF G$
m_frameCounter_transformvv ,
.vv, -
	anchorMinvv- 6
=vv7 8
newvv9 <
Vector2vv= D
(vvD E
$numvvE J
,vvJ K
$numvvL Q
)vvQ R
;vvR S$
m_frameCounter_transformww ,
.ww, -
	anchorMaxww- 6
=ww7 8
newww9 <
Vector2ww= D
(wwD E
$numwwE J
,wwJ K
$numwwL Q
)wwQ R
;wwR S$
m_frameCounter_transformxx ,
.xx, -
anchoredPositionxx- =
=xx> ?
newxx@ C
Vector2xxD K
(xxK L
$numxxL M
,xxM N
$numxxO P
)xxP Q
;xxQ R
breakyy 
;yy 
}zz 
}{{ 	
}|| 
}}} ⁄
ND:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Scripts\Dialogue_Manager.cs
public 
class 
Dialogue_Manager 
: 
MonoBehaviour  -
{ 
public		 

Text		 

dialogText		 
;		 
private 
Queue 
< 
string 
> 
	sentences #
;# $
void 
Start	 
( 
) 
{ 
	sentences 
= 
new 
Queue 
< 
string $
>$ %
(% &
)& '
;' (
} 
public 

void 
StartDialogue 
( 
Dialogue &
dialogue' /
)/ 0
{ 
	sentences 
. 
Clear 
( 
) 
; 
foreach 
( 
string 
s 
in 
dialogue %
.% &
	sentences& /
)/ 0
{ 	
	sentences 
. 
Enqueue 
( 
s 
)  
;  !
} 	
DisplayNextSentence!! 
(!! 
)!! 
;!! 
}"" 
public$$ 

void$$ 
DisplayNextSentence$$ #
($$# $
)$$$ %
{%% 
if&& 

(&&
 
	sentences&& 
.&& 
Count&& 
==&& 
$num&& 
)&&  
{'' 	
EndDialogue(( 
((( 
)(( 
;(( 
return)) 
;)) 
}** 	
string,, 
sentence,, 
=,, 
	sentences,, #
.,,# $
Dequeue,,$ +
(,,+ ,
),,, -
;,,- .

dialogText-- 
.-- 
text-- 
=-- 
sentence-- "
;--" #
}// 
void11 
EndDialogue11	 
(11 
)11 
{22 
Debug33 
.33 
Log33 
(33 
(33 
$str33 )
)33) *
)33* +
;33+ ,
}44 
}77 ˇ
FD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Scripts\Dialogue.cs
[ 
System 
. 
Serializable 
] 
public 
class 
Dialogue 
{ 
public 

string 
name 
; 
public		 

string		 
[		 
]		 
	sentences		 
;		 
private 
Dialogue_Manager 
dMan !
;! "
} «
RD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Stats\StatSystem\StatsObject.cs
[ 
CreateAssetMenu 
( 
menuName 
= 
$str /
)/ 0
]0 1
public 
class 
StatsObject 
: 
ScriptableObject +
{ 
[ 
SerializeField 
] 
[ 
TextArea 
] 
private  '
string( .
[. /
]/ 0
stat1 5
;5 6
public		 

string		 
[		 
]		 
Stats		 
=>		 
stat		 !
;		! "
}

 ±±
mD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\CameraController.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class 
CameraController !
:" #
MonoBehaviour$ 1
{		 
public

 
enum

 
CameraModes

 
{

  !
Follow

" (
,

( )
	Isometric

* 3
,

3 4
Free

5 9
}

: ;
private 
	Transform 
cameraTransform )
;) *
private 
	Transform 
dummyTarget %
;% &
public 
	Transform 
CameraTarget %
;% &
public 
float 
FollowDistance #
=$ %
$num& +
;+ ,
public 
float 
MaxFollowDistance &
=' (
$num) /
;/ 0
public 
float 
MinFollowDistance &
=' (
$num) -
;- .
public 
float 
ElevationAngle #
=$ %
$num& +
;+ ,
public 
float 
MaxElevationAngle &
=' (
$num) .
;. /
public 
float 
MinElevationAngle &
=' (
$num) +
;+ ,
public 
float 
OrbitalAngle !
=" #
$num$ &
;& '
public 
CameraModes 

CameraMode %
=& '
CameraModes( 3
.3 4
Follow4 :
;: ;
public 
bool 
MovementSmoothing %
=& '
true( ,
;, -
public 
bool 
RotationSmoothing %
=& '
false( -
;- .
private 
bool 
previousSmoothing &
;& '
public!! 
float!! "
MovementSmoothingValue!! +
=!!, -
$num!!. 1
;!!1 2
public"" 
float"" "
RotationSmoothingValue"" +
="", -
$num"". 2
;""2 3
public$$ 
float$$ 
MoveSensitivity$$ $
=$$% &
$num$$' +
;$$+ ,
private&& 
Vector3&& 
currentVelocity&& '
=&&( )
Vector3&&* 1
.&&1 2
zero&&2 6
;&&6 7
private'' 
Vector3'' 
desiredPosition'' '
;''' (
private(( 
float(( 
mouseX(( 
;(( 
private)) 
float)) 
mouseY)) 
;)) 
private** 
Vector3** 

moveVector** "
;**" #
private++ 
float++ 

mouseWheel++  
;++  !
private11 
const11 
string11  
event_SmoothingValue11 1
=112 3
$str114 N
;11N O
private22 
const22 
string22  
event_FollowDistance22 1
=222 3
$str224 J
;22J K
void55 
Awake55 
(55 
)55 
{66 	
if77 
(77 
QualitySettings77 
.77  

vSyncCount77  *
>77+ ,
$num77- .
)77. /
Application88 
.88 
targetFrameRate88 +
=88, -
$num88. 0
;880 1
else99 
Application:: 
.:: 
targetFrameRate:: +
=::, -
-::. /
$num::/ 0
;::0 1
if<< 
(<< 
Application<< 
.<< 
platform<< $
==<<% '
RuntimePlatform<<( 7
.<<7 8
IPhonePlayer<<8 D
||<<E G
Application<<H S
.<<S T
platform<<T \
==<<] _
RuntimePlatform<<` o
.<<o p
Android<<p w
)<<w x
Input== 
.== $
simulateMouseWithTouches== .
===/ 0
false==1 6
;==6 7
cameraTransform?? 
=?? 
	transform?? '
;??' (
previousSmoothing@@ 
=@@ 
MovementSmoothing@@  1
;@@1 2
}AA 	
voidEE 
StartEE 
(EE 
)EE 
{FF 	
ifGG 
(GG 
CameraTargetGG 
==GG 
nullGG  $
)GG$ %
{HH 
dummyTargetJJ 
=JJ 
newJJ !

GameObjectJJ" ,
(JJ, -
$strJJ- <
)JJ< =
.JJ= >
	transformJJ> G
;JJG H
CameraTargetKK 
=KK 
dummyTargetKK *
;KK* +
}LL 
}MM 	
voidPP 

LateUpdatePP 
(PP 
)PP 
{QQ 	
GetPlayerInputRR 
(RR 
)RR 
;RR 
ifVV 
(VV 
CameraTargetVV 
!=VV 
nullVV  $
)VV$ %
{WW 
ifXX 
(XX 

CameraModeXX 
==XX !
CameraModesXX" -
.XX- .
	IsometricXX. 7
)XX7 8
{YY 
desiredPositionZZ #
=ZZ$ %
CameraTargetZZ& 2
.ZZ2 3
positionZZ3 ;
+ZZ< =

QuaternionZZ> H
.ZZH I
EulerZZI N
(ZZN O
ElevationAngleZZO ]
,ZZ] ^
OrbitalAngleZZ_ k
,ZZk l
$numZZm o
)ZZo p
*ZZq r
newZZs v
Vector3ZZw ~
(ZZ~ 
$num	ZZ Ä
,
ZZÄ Å
$num
ZZÇ É
,
ZZÉ Ñ
-
ZZÖ Ü
FollowDistance
ZZÜ î
)
ZZî ï
;
ZZï ñ
}[[ 
else\\ 
if\\ 
(\\ 

CameraMode\\ #
==\\$ &
CameraModes\\' 2
.\\2 3
Follow\\3 9
)\\9 :
{]] 
desiredPosition^^ #
=^^$ %
CameraTarget^^& 2
.^^2 3
position^^3 ;
+^^< =
CameraTarget^^> J
.^^J K
TransformDirection^^K ]
(^^] ^

Quaternion^^^ h
.^^h i
Euler^^i n
(^^n o
ElevationAngle^^o }
,^^} ~
OrbitalAngle	^^ ã
,
^^ã å
$num
^^ç è
)
^^è ê
*
^^ë í
(
^^ì î
new
^^î ó
Vector3
^^ò ü
(
^^ü †
$num
^^† °
,
^^° ¢
$num
^^£ §
,
^^§ •
-
^^¶ ß
FollowDistance
^^ß µ
)
^^µ ∂
)
^^∂ ∑
)
^^∑ ∏
;
^^∏ π
}__ 
else`` 
{aa 
}cc 
ifee 
(ee 
MovementSmoothingee %
==ee& (
trueee) -
)ee- .
{ff 
cameraTransformhh #
.hh# $
positionhh$ ,
=hh- .
Vector3hh/ 6
.hh6 7

SmoothDamphh7 A
(hhA B
cameraTransformhhB Q
.hhQ R
positionhhR Z
,hhZ [
desiredPositionhh\ k
,hhk l
refhhm p
currentVelocity	hhq Ä
,
hhÄ Å$
MovementSmoothingValue
hhÇ ò
*
hhô ö
Time
hhõ ü
.
hhü †
fixedDeltaTime
hh† Æ
)
hhÆ Ø
;
hhØ ∞
}jj 
elsekk 
{ll 
cameraTransformnn #
.nn# $
positionnn$ ,
=nn- .
desiredPositionnn/ >
;nn> ?
}oo 
ifqq 
(qq 
RotationSmoothingqq %
==qq& (
trueqq) -
)qq- .
cameraTransformrr #
.rr# $
rotationrr$ ,
=rr- .

Quaternionrr/ 9
.rr9 :
Lerprr: >
(rr> ?
cameraTransformrr? N
.rrN O
rotationrrO W
,rrW X

QuaternionrrY c
.rrc d
LookRotationrrd p
(rrp q
CameraTargetrrq }
.rr} ~
position	rr~ Ü
-
rrá à
cameraTransform
rrâ ò
.
rrò ô
position
rrô °
)
rr° ¢
,
rr¢ £$
RotationSmoothingValue
rr§ ∫
*
rrª º
Time
rrΩ ¡
.
rr¡ ¬
	deltaTime
rr¬ À
)
rrÀ Ã
;
rrÃ Õ
elsess 
{tt 
cameraTransformuu #
.uu# $
LookAtuu$ *
(uu* +
CameraTargetuu+ 7
)uu7 8
;uu8 9
}vv 
}xx 
}zz 	
void~~ 
GetPlayerInput~~ 
(~~ 
)~~ 
{ 	

moveVector
ÄÄ 
=
ÄÄ 
Vector3
ÄÄ  
.
ÄÄ  !
zero
ÄÄ! %
;
ÄÄ% &

mouseWheel
ÉÉ 
=
ÉÉ 
Input
ÉÉ 
.
ÉÉ 
GetAxis
ÉÉ &
(
ÉÉ& '
$str
ÉÉ' :
)
ÉÉ: ;
;
ÉÉ; <
float
ÖÖ 

touchCount
ÖÖ 
=
ÖÖ 
Input
ÖÖ $
.
ÖÖ$ %

touchCount
ÖÖ% /
;
ÖÖ/ 0
if
áá 
(
áá 
Input
áá 
.
áá 
GetKey
áá 
(
áá 
KeyCode
áá $
.
áá$ %
	LeftShift
áá% .
)
áá. /
||
áá0 2
Input
áá3 8
.
áá8 9
GetKey
áá9 ?
(
áá? @
KeyCode
áá@ G
.
ááG H

RightShift
ááH R
)
ááR S
||
ááT V

touchCount
ááW a
>
ááb c
$num
áád e
)
ááe f
{
àà 

mouseWheel
ââ 
*=
ââ 
$num
ââ  
;
ââ  !
if
ãã 
(
ãã 
Input
ãã 
.
ãã 

GetKeyDown
ãã $
(
ãã$ %
KeyCode
ãã% ,
.
ãã, -
I
ãã- .
)
ãã. /
)
ãã/ 0

CameraMode
åå 
=
åå  
CameraModes
åå! ,
.
åå, -
	Isometric
åå- 6
;
åå6 7
if
éé 
(
éé 
Input
éé 
.
éé 

GetKeyDown
éé $
(
éé$ %
KeyCode
éé% ,
.
éé, -
F
éé- .
)
éé. /
)
éé/ 0

CameraMode
èè 
=
èè  
CameraModes
èè! ,
.
èè, -
Follow
èè- 3
;
èè3 4
if
ëë 
(
ëë 
Input
ëë 
.
ëë 

GetKeyDown
ëë $
(
ëë$ %
KeyCode
ëë% ,
.
ëë, -
S
ëë- .
)
ëë. /
)
ëë/ 0
MovementSmoothing
íí %
=
íí& '
!
íí( )
MovementSmoothing
íí) :
;
íí: ;
if
ññ 
(
ññ 
Input
ññ 
.
ññ 
GetMouseButton
ññ (
(
ññ( )
$num
ññ) *
)
ññ* +
)
ññ+ ,
{
óó 
mouseY
òò 
=
òò 
Input
òò "
.
òò" #
GetAxis
òò# *
(
òò* +
$str
òò+ 4
)
òò4 5
;
òò5 6
mouseX
ôô 
=
ôô 
Input
ôô "
.
ôô" #
GetAxis
ôô# *
(
ôô* +
$str
ôô+ 4
)
ôô4 5
;
ôô5 6
if
õõ 
(
õõ 
mouseY
õõ 
>
õõ  
$num
õõ! &
||
õõ' )
mouseY
õõ* 0
<
õõ1 2
-
õõ3 4
$num
õõ4 9
)
õõ9 :
{
úú 
ElevationAngle
ùù &
-=
ùù' )
mouseY
ùù* 0
*
ùù1 2
MoveSensitivity
ùù3 B
;
ùùB C
ElevationAngle
üü &
=
üü' (
Mathf
üü) .
.
üü. /
Clamp
üü/ 4
(
üü4 5
ElevationAngle
üü5 C
,
üüC D
MinElevationAngle
üüE V
,
üüV W
MaxElevationAngle
üüX i
)
üüi j
;
üüj k
}
†† 
if
¢¢ 
(
¢¢ 
mouseX
¢¢ 
>
¢¢  
$num
¢¢! &
||
¢¢' )
mouseX
¢¢* 0
<
¢¢1 2
-
¢¢3 4
$num
¢¢4 9
)
¢¢9 :
{
££ 
OrbitalAngle
§§ $
+=
§§% '
mouseX
§§( .
*
§§/ 0
MoveSensitivity
§§1 @
;
§§@ A
if
•• 
(
•• 
OrbitalAngle
•• (
>
••) *
$num
••+ .
)
••. /
OrbitalAngle
¶¶ (
-=
¶¶) +
$num
¶¶, /
;
¶¶/ 0
if
ßß 
(
ßß 
OrbitalAngle
ßß (
<
ßß) *
$num
ßß+ ,
)
ßß, -
OrbitalAngle
®® (
+=
®®) +
$num
®®, /
;
®®/ 0
}
©© 
}
™™ 
if
≠≠ 
(
≠≠ 

touchCount
≠≠ 
==
≠≠ !
$num
≠≠" #
&&
≠≠$ &
Input
≠≠' ,
.
≠≠, -
GetTouch
≠≠- 5
(
≠≠5 6
$num
≠≠6 7
)
≠≠7 8
.
≠≠8 9
phase
≠≠9 >
==
≠≠? A

TouchPhase
≠≠B L
.
≠≠L M
Moved
≠≠M R
)
≠≠R S
{
ÆÆ 
Vector2
ØØ 
deltaPosition
ØØ )
=
ØØ* +
Input
ØØ, 1
.
ØØ1 2
GetTouch
ØØ2 :
(
ØØ: ;
$num
ØØ; <
)
ØØ< =
.
ØØ= >
deltaPosition
ØØ> K
;
ØØK L
if
≤≤ 
(
≤≤ 
deltaPosition
≤≤ %
.
≤≤% &
y
≤≤& '
>
≤≤( )
$num
≤≤* /
||
≤≤0 2
deltaPosition
≤≤3 @
.
≤≤@ A
y
≤≤A B
<
≤≤C D
-
≤≤E F
$num
≤≤F K
)
≤≤K L
{
≥≥ 
ElevationAngle
¥¥ &
-=
¥¥' )
deltaPosition
¥¥* 7
.
¥¥7 8
y
¥¥8 9
*
¥¥: ;
$num
¥¥< @
;
¥¥@ A
ElevationAngle
∂∂ &
=
∂∂' (
Mathf
∂∂) .
.
∂∂. /
Clamp
∂∂/ 4
(
∂∂4 5
ElevationAngle
∂∂5 C
,
∂∂C D
MinElevationAngle
∂∂E V
,
∂∂V W
MaxElevationAngle
∂∂X i
)
∂∂i j
;
∂∂j k
}
∑∑ 
if
ªª 
(
ªª 
deltaPosition
ªª %
.
ªª% &
x
ªª& '
>
ªª( )
$num
ªª* /
||
ªª0 2
deltaPosition
ªª3 @
.
ªª@ A
x
ªªA B
<
ªªC D
-
ªªE F
$num
ªªF K
)
ªªK L
{
ºº 
OrbitalAngle
ΩΩ $
+=
ΩΩ% '
deltaPosition
ΩΩ( 5
.
ΩΩ5 6
x
ΩΩ6 7
*
ΩΩ8 9
$num
ΩΩ: >
;
ΩΩ> ?
if
ææ 
(
ææ 
OrbitalAngle
ææ (
>
ææ) *
$num
ææ+ .
)
ææ. /
OrbitalAngle
øø (
-=
øø) +
$num
øø, /
;
øø/ 0
if
¿¿ 
(
¿¿ 
OrbitalAngle
¿¿ (
<
¿¿) *
$num
¿¿+ ,
)
¿¿, -
OrbitalAngle
¡¡ (
+=
¡¡) +
$num
¡¡, /
;
¡¡/ 0
}
¬¬ 
}
ƒƒ 
if
«« 
(
«« 
Input
«« 
.
«« 
GetMouseButton
«« (
(
««( )
$num
««) *
)
««* +
)
««+ ,
{
»» 
Ray
…… 
ray
…… 
=
…… 
Camera
…… $
.
……$ %
main
……% )
.
……) *
ScreenPointToRay
……* :
(
……: ;
Input
……; @
.
……@ A
mousePosition
……A N
)
……N O
;
……O P

RaycastHit
   
hit
   "
;
  " #
if
ÃÃ 
(
ÃÃ 
Physics
ÃÃ 
.
ÃÃ  
Raycast
ÃÃ  '
(
ÃÃ' (
ray
ÃÃ( +
,
ÃÃ+ ,
out
ÃÃ- 0
hit
ÃÃ1 4
,
ÃÃ4 5
$num
ÃÃ6 9
,
ÃÃ9 :
$num
ÃÃ; <
<<
ÃÃ= ?
$num
ÃÃ@ B
|
ÃÃC D
$num
ÃÃE F
<<
ÃÃG I
$num
ÃÃJ L
|
ÃÃM N
$num
ÃÃO P
<<
ÃÃQ S
$num
ÃÃT V
|
ÃÃW X
$num
ÃÃY Z
<<
ÃÃ[ ]
$num
ÃÃ^ `
)
ÃÃ` a
)
ÃÃa b
{
ÕÕ 
if
ŒŒ 
(
ŒŒ 
hit
ŒŒ 
.
ŒŒ  
	transform
ŒŒ  )
==
ŒŒ* ,
CameraTarget
ŒŒ- 9
)
ŒŒ9 :
{
œœ 
OrbitalAngle
—— (
=
——) *
$num
——+ ,
;
——, -
}
““ 
else
”” 
{
‘‘ 
CameraTarget
’’ (
=
’’) *
hit
’’+ .
.
’’. /
	transform
’’/ 8
;
’’8 9
OrbitalAngle
÷÷ (
=
÷÷) *
$num
÷÷+ ,
;
÷÷, -
MovementSmoothing
◊◊ -
=
◊◊. /
previousSmoothing
◊◊0 A
;
◊◊A B
}
ÿÿ 
}
⁄⁄ 
}
€€ 
if
ﬁﬁ 
(
ﬁﬁ 
Input
ﬁﬁ 
.
ﬁﬁ 
GetMouseButton
ﬁﬁ (
(
ﬁﬁ( )
$num
ﬁﬁ) *
)
ﬁﬁ* +
)
ﬁﬁ+ ,
{
ﬂﬂ 
if
‡‡ 
(
‡‡ 
dummyTarget
‡‡ #
==
‡‡$ &
null
‡‡' +
)
‡‡+ ,
{
·· 
dummyTarget
„„ #
=
„„$ %
new
„„& )

GameObject
„„* 4
(
„„4 5
$str
„„5 D
)
„„D E
.
„„E F
	transform
„„F O
;
„„O P
dummyTarget
‰‰ #
.
‰‰# $
position
‰‰$ ,
=
‰‰- .
CameraTarget
‰‰/ ;
.
‰‰; <
position
‰‰< D
;
‰‰D E
dummyTarget
ÂÂ #
.
ÂÂ# $
rotation
ÂÂ$ ,
=
ÂÂ- .
CameraTarget
ÂÂ/ ;
.
ÂÂ; <
rotation
ÂÂ< D
;
ÂÂD E
CameraTarget
ÊÊ $
=
ÊÊ% &
dummyTarget
ÊÊ' 2
;
ÊÊ2 3
previousSmoothing
ÁÁ )
=
ÁÁ* +
MovementSmoothing
ÁÁ, =
;
ÁÁ= >
MovementSmoothing
ËË )
=
ËË* +
false
ËË, 1
;
ËË1 2
}
ÈÈ 
else
ÍÍ 
if
ÍÍ 
(
ÍÍ 
dummyTarget
ÍÍ (
!=
ÍÍ) +
CameraTarget
ÍÍ, 8
)
ÍÍ8 9
{
ÎÎ 
dummyTarget
ÌÌ #
.
ÌÌ# $
position
ÌÌ$ ,
=
ÌÌ- .
CameraTarget
ÌÌ/ ;
.
ÌÌ; <
position
ÌÌ< D
;
ÌÌD E
dummyTarget
ÓÓ #
.
ÓÓ# $
rotation
ÓÓ$ ,
=
ÓÓ- .
CameraTarget
ÓÓ/ ;
.
ÓÓ; <
rotation
ÓÓ< D
;
ÓÓD E
CameraTarget
ÔÔ $
=
ÔÔ% &
dummyTarget
ÔÔ' 2
;
ÔÔ2 3
previousSmoothing
 )
=
* +
MovementSmoothing
, =
;
= >
MovementSmoothing
ÒÒ )
=
ÒÒ* +
false
ÒÒ, 1
;
ÒÒ1 2
}
ÚÚ 
mouseY
ıı 
=
ıı 
Input
ıı "
.
ıı" #
GetAxis
ıı# *
(
ıı* +
$str
ıı+ 4
)
ıı4 5
;
ıı5 6
mouseX
ˆˆ 
=
ˆˆ 
Input
ˆˆ "
.
ˆˆ" #
GetAxis
ˆˆ# *
(
ˆˆ* +
$str
ˆˆ+ 4
)
ˆˆ4 5
;
ˆˆ5 6

moveVector
¯¯ 
=
¯¯  
cameraTransform
¯¯! 0
.
¯¯0 1 
TransformDirection
¯¯1 C
(
¯¯C D
mouseX
¯¯D J
,
¯¯J K
mouseY
¯¯L R
,
¯¯R S
$num
¯¯T U
)
¯¯U V
;
¯¯V W
dummyTarget
˙˙ 
.
˙˙  
	Translate
˙˙  )
(
˙˙) *
-
˙˙* +

moveVector
˙˙+ 5
,
˙˙5 6
Space
˙˙7 <
.
˙˙< =
World
˙˙= B
)
˙˙B C
;
˙˙C D
}
¸¸ 
}
˛˛ 
if
ÅÅ 
(
ÅÅ 

touchCount
ÅÅ 
==
ÅÅ 
$num
ÅÅ 
)
ÅÅ  
{
ÇÇ 
Touch
ÉÉ 
touch0
ÉÉ 
=
ÉÉ 
Input
ÉÉ $
.
ÉÉ$ %
GetTouch
ÉÉ% -
(
ÉÉ- .
$num
ÉÉ. /
)
ÉÉ/ 0
;
ÉÉ0 1
Touch
ÑÑ 
touch1
ÑÑ 
=
ÑÑ 
Input
ÑÑ $
.
ÑÑ$ %
GetTouch
ÑÑ% -
(
ÑÑ- .
$num
ÑÑ. /
)
ÑÑ/ 0
;
ÑÑ0 1
Vector2
ÜÜ 
touch0PrevPos
ÜÜ %
=
ÜÜ& '
touch0
ÜÜ( .
.
ÜÜ. /
position
ÜÜ/ 7
-
ÜÜ8 9
touch0
ÜÜ: @
.
ÜÜ@ A
deltaPosition
ÜÜA N
;
ÜÜN O
Vector2
áá 
touch1PrevPos
áá %
=
áá& '
touch1
áá( .
.
áá. /
position
áá/ 7
-
áá8 9
touch1
áá: @
.
áá@ A
deltaPosition
ááA N
;
ááN O
float
ââ 
prevTouchDelta
ââ $
=
ââ% &
(
ââ' (
touch0PrevPos
ââ( 5
-
ââ6 7
touch1PrevPos
ââ8 E
)
ââE F
.
ââF G
	magnitude
ââG P
;
ââP Q
float
ää 

touchDelta
ää  
=
ää! "
(
ää# $
touch0
ää$ *
.
ää* +
position
ää+ 3
-
ää4 5
touch1
ää6 <
.
ää< =
position
ää= E
)
ääE F
.
ääF G
	magnitude
ääG P
;
ääP Q
float
åå 
	zoomDelta
åå 
=
åå  !
prevTouchDelta
åå" 0
-
åå1 2

touchDelta
åå3 =
;
åå= >
if
éé 
(
éé 
	zoomDelta
éé 
>
éé 
$num
éé  %
||
éé& (
	zoomDelta
éé) 2
<
éé3 4
-
éé5 6
$num
éé6 ;
)
éé; <
{
èè 
FollowDistance
êê "
+=
êê# %
	zoomDelta
êê& /
*
êê0 1
$num
êê2 7
;
êê7 8
FollowDistance
íí "
=
íí# $
Mathf
íí% *
.
íí* +
Clamp
íí+ 0
(
íí0 1
FollowDistance
íí1 ?
,
íí? @
MinFollowDistance
ííA R
,
ííR S
MaxFollowDistance
ííT e
)
ííe f
;
ííf g
}
ìì 
}
ññ 
if
ôô 
(
ôô 

mouseWheel
ôô 
<
ôô 
-
ôô 
$num
ôô #
||
ôô$ &

mouseWheel
ôô' 1
>
ôô2 3
$num
ôô4 9
)
ôô9 :
{
öö 
FollowDistance
úú 
-=
úú !

mouseWheel
úú" ,
*
úú- .
$num
úú/ 3
;
úú3 4
FollowDistance
ûû 
=
ûû  
Mathf
ûû! &
.
ûû& '
Clamp
ûû' ,
(
ûû, -
FollowDistance
ûû- ;
,
ûû; <
MinFollowDistance
ûû= N
,
ûûN O
MaxFollowDistance
ûûP a
)
ûûa b
;
ûûb c
}
üü 
}
¢¢ 	
}
££ 
}§§ ∆
ND:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Stats\StatSystem\StatsUI.cs
public 
class 
StatsUI 
: 
MonoBehaviour $
{ 
[ 
SerializeField 
] 
private 

GameObject '
statsBox( 0
;0 1
[ 
SerializeField 
] 
private 

GameObject '

statsClose( 2
;2 3
[		 
SerializeField		 
]		 
private		 
TMP_Text		 %
	textLabel		& /
;		/ 0
public 

bool 
isOpen 
{ 
get 
; 
private %
set& )
;) *
}+ ,
private 
TypewriterEffect 
typewriterEffect -
;- .
private 
void 
Start 
( 
) 
{ 
typewriterEffect 
= 
GetComponent '
<' (
TypewriterEffect( 8
>8 9
(9 :
): ;
;; <
statsBox 
. 
	SetActive 
( 
false  
)  !
;! "
	textLabel 
. 
text 
= 
string 
.  
Empty  %
;% &

statsClose 
. 
	SetActive 
( 
false "
)" #
;# $
} 
public 

void 
	ShowStats 
( 
StatsObject &

statObject' 1
)1 2
{ 
isOpen 
= 
true 
; 
statsBox 
. 
	SetActive 
( 
true 
)  
;  !
StartCoroutine   
(   
StepThroughStats   '
(  ' (

statObject  ( 2
)  2 3
)  3 4
;  4 5
}!! 
private## 
IEnumerator## 
StepThroughStats## (
(##) *
StatsObject##* 5

statObject##6 @
)##@ A
{$$ 
	textLabel%% 
.%% 
text%% 
=%% 

statObject%% #
.%%# $
Stats%%$ )
[%%) *
$num%%* +
]%%+ ,
;%%, -
yield'' 
return'' 
new'' 
WaitForSeconds'' '
(''' (
$num''( )
)'') *
;''* +
CloseStatsBox66 
(66 
)66 
;66 
}77 
private99 
void99 
CloseStatsBox99 
(99 
)99  
{99! "
isOpen:: 
=:: 
false:: 
;:: 

statsClose<< 
.<< 
	SetActive<< 
(<< 
true<< !
)<<! "
;<<" #
}== 
}>> ÷
QD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Stats\StatSystem\PhoneBlink.cs
public 
class 

PhoneBlink 
: 
MonoBehaviour '
{ 
public 

Color 

startColor 
= 
Color #
.# $
green$ )
;) *
public 

Color 
endColor 
= 
Color !
.! "
black" '
;' (
[ 
Range 

(
 
$num 
, 
$num 
) 
] 
public		 

float		 
speed		 
=		 
$num		 
;		 
Renderer 
ren 
; 
void 
Awake	 
( 
) 
{ 
ren 
= 
GetComponent 
< 
Renderer #
># $
($ %
)% &
;& '
} 
void 
Update	 
( 
) 
{ 
ren 
. 
material 
. 
color 
= 
Color "
." #
Lerp# '
(' (

startColor( 2
,2 3
endColor4 <
,< =
Mathf> C
.C D
PingPongD L
(L M
TimeM Q
.Q R
timeR V
*W X
speedY ^
,^ _
$num` a
)a b
)b c
;c d
} 
} Å
kD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\DropdownSample.cs
public 
class 
DropdownSample 
: 
MonoBehaviour *
{ 
[ 
SerializeField 
] 
private 
TextMeshProUGUI	 
text 
= 
null  $
;$ %
[		 
SerializeField		 
]		 
private

 
TMP_Dropdown

	 &
dropdownWithoutPlaceholder

 0
=

1 2
null

3 7
;

7 8
[ 
SerializeField 
] 
private 
TMP_Dropdown	 #
dropdownWithPlaceholder -
=. /
null0 4
;4 5
public 
void 
OnButtonClick 
( 
) 
{ 
text 
. 
text 
= #
dropdownWithPlaceholder %
.% &
value& +
>, -
-. /
$num/ 0
?1 2
$str3 G
+H I&
dropdownWithoutPlaceholderJ d
.d e
valuee j
+k l
$strm r
+s t$
dropdownWithPlaceholder	u å
.
å ç
value
ç í
:
ì î
$str
ï µ
;
µ ∂
} 
} π0
uD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\TMP_PhoneNumberValidator.cs
	namespace 	
TMPro
 
{ 
[

 
Serializable

 
]

 
public 

class $
TMP_PhoneNumberValidator )
:* +
TMP_InputValidator, >
{ 
public 
override 
char 
Validate %
(% &
ref& )
string* 0
text1 5
,5 6
ref7 :
int; >
pos? B
,B C
charD H
chI K
)K L
{ 	
Debug 
. 
Log 
( 
$str -
)- .
;. /
if 
( 
ch 
< 
$char 
&& 
ch 
>  
$char! $
)$ %
return& ,
(- .
char. 2
)2 3
$num3 4
;4 5
int 
length 
= 
text 
. 
Length $
;$ %
for 
( 
int 
i 
= 
$num 
; 
i 
< 
length  &
+' (
$num) *
;* +
i, -
++- /
)/ 0
{ 
switch 
( 
i 
) 
{ 
case 
$num 
: 
if 
( 
i 
==  
length! '
)' (
text  
=! "
$str# &
+' (
ch) +
;+ ,
pos   
=   
$num   
;    
break!! 
;!! 
case"" 
$num"" 
:"" 
if## 
(## 
i## 
==##  
length##! '
)##' (
text$$  
+=$$! #
ch$$$ &
;$$& '
pos%% 
=%% 
$num%% 
;%%  
break&& 
;&& 
case'' 
$num'' 
:'' 
if(( 
((( 
i(( 
==((  
length((! '
)((' (
text))  
+=))! #
ch))$ &
;))& '
pos** 
=** 
$num** 
;**  
break++ 
;++ 
case,, 
$num,, 
:,, 
if-- 
(-- 
i-- 
==--  
length--! '
)--' (
text..  
+=..! #
ch..$ &
+..' (
$str..) -
;..- .
pos// 
=// 
$num// 
;//  
break00 
;00 
case11 
$num11 
:11 
if22 
(22 
i22 
==22  
length22! '
)22' (
text33  
+=33! #
$str33$ (
+33) *
ch33+ -
;33- .
pos44 
=44 
$num44 
;44  
break55 
;55 
case66 
$num66 
:66 
if77 
(77 
i77 
==77  
length77! '
)77' (
text88  
+=88! #
$str88$ '
+88( )
ch88* ,
;88, -
pos99 
=99 
$num99 
;99  
break:: 
;:: 
case;; 
$num;; 
:;; 
if<< 
(<< 
i<< 
==<<  
length<<! '
)<<' (
text==  
+===! #
ch==$ &
;==& '
pos>> 
=>> 
$num>> 
;>>  
break?? 
;?? 
case@@ 
$num@@ 
:@@ 
ifAA 
(AA 
iAA 
==AA  
lengthAA! '
)AA' (
textBB  
+=BB! #
chBB$ &
;BB& '
posCC 
=CC 
$numCC 
;CC  
breakDD 
;DD 
caseEE 
$numEE 
:EE 
ifFF 
(FF 
iFF 
==FF  
lengthFF! '
)FF' (
textGG  
+=GG! #
chGG$ &
+GG' (
$strGG) ,
;GG, -
posHH 
=HH 
$numHH  
;HH  !
breakII 
;II 
caseJJ 
$numJJ 
:JJ 
ifKK 
(KK 
iKK 
==KK  
lengthKK! '
)KK' (
textLL  
+=LL! #
$strLL$ '
+LL( )
chLL* ,
;LL, -
posMM 
=MM 
$numMM  
;MM  !
breakNN 
;NN 
caseOO 
$numOO 
:OO 
ifPP 
(PP 
iPP 
==PP  
lengthPP! '
)PP' (
textQQ  
+=QQ! #
chQQ$ &
;QQ& '
posRR 
=RR 
$numRR  
;RR  !
breakSS 
;SS 
caseTT 
$numTT 
:TT 
ifUU 
(UU 
iUU 
==UU  
lengthUU! '
)UU' (
textVV  
+=VV! #
chVV$ &
;VV& '
posWW 
=WW 
$numWW  
;WW  !
breakXX 
;XX 
caseYY 
$numYY 
:YY 
ifZZ 
(ZZ 
iZZ 
==ZZ  
lengthZZ! '
)ZZ' (
text[[  
+=[[! #
ch[[$ &
;[[& '
pos\\ 
=\\ 
$num\\  
;\\  !
break]] 
;]] 
case^^ 
$num^^ 
:^^ 
if__ 
(__ 
i__ 
==__  
length__! '
)__' (
text``  
+=``! #
ch``$ &
;``& '
posaa 
=aa 
$numaa  
;aa  !
breakbb 
;bb 
}cc 
}dd 
returnff 
chff 
;ff 
}gg 	
}hh 
}ii ƒ
GD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Scripts\Shortcuts.cs
public 
class 
	Shortcuts 
: 
MonoBehaviour &
{ 
void 
Update	 
( 
) 
{ 
if		 

(		 
Input		 
.		 
GetKey		 
(		 
$str		 !
)		! "
)		" #
{

 	
Application 
. 
Quit 
( 
) 
; 
} 	
} 
} ¸3
uD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\TMPro_InstructionOverlay.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class $
TMPro_InstructionOverlay )
:* +
MonoBehaviour, 9
{		 
public 
enum %
FpsCounterAnchorPositions -
{. /
TopLeft0 7
,7 8

BottomLeft9 C
,C D
TopRightE M
,M N
BottomRightO Z
}[ \
;\ ]
public %
FpsCounterAnchorPositions (
AnchorPosition) 7
=8 9%
FpsCounterAnchorPositions: S
.S T

BottomLeftT ^
;^ _
private 
const 
string 
instructions )
=* +
$str, y
;y z
private 
TextMeshPro 
m_TextMeshPro )
;) *
private 
TextContainer 
m_textContainer -
;- .
private 
	Transform $
m_frameCounter_transform 2
;2 3
private 
Camera 
m_camera 
;  
void 
Awake 
( 
) 
{ 	
if 
( 
! 
enabled 
) 
return 
; 
m_camera 
= 
Camera 
. 
main "
;" #

GameObject 
frameCounter #
=$ %
new& )

GameObject* 4
(4 5
$str5 D
)D E
;E F$
m_frameCounter_transform   $
=  % &
frameCounter  ' 3
.  3 4
	transform  4 =
;  = >$
m_frameCounter_transform!! $
.!!$ %
parent!!% +
=!!, -
m_camera!!. 6
.!!6 7
	transform!!7 @
;!!@ A$
m_frameCounter_transform"" $
.""$ %
localRotation""% 2
=""3 4

Quaternion""5 ?
.""? @
identity""@ H
;""H I
m_TextMeshPro%% 
=%% 
frameCounter%% (
.%%( )
AddComponent%%) 5
<%%5 6
TextMeshPro%%6 A
>%%A B
(%%B C
)%%C D
;%%D E
m_TextMeshPro&& 
.&& 
font&& 
=&&  
	Resources&&! *
.&&* +
Load&&+ /
<&&/ 0
TMP_FontAsset&&0 =
>&&= >
(&&> ?
$str&&? e
)&&e f
;&&f g
m_TextMeshPro'' 
.'' 
fontSharedMaterial'' ,
=''- .
	Resources''/ 8
.''8 9
Load''9 =
<''= >
Material''> F
>''F G
(''G H
$str''H x
)''x y
;''y z
m_TextMeshPro)) 
.)) 
fontSize)) "
=))# $
$num))% '
;))' (
m_TextMeshPro++ 
.++ 
	isOverlay++ #
=++$ %
true++& *
;++* +
m_textContainer,, 
=,, 
frameCounter,, *
.,,* +
GetComponent,,+ 7
<,,7 8
TextContainer,,8 E
>,,E F
(,,F G
),,G H
;,,H I%
Set_FrameCounter_Position.. %
(..% &
AnchorPosition..& 4
)..4 5
;..5 6
m_TextMeshPro11 
.11 
text11 
=11  
instructions11! -
;11- .
}33 	
void88 %
Set_FrameCounter_Position88 &
(88& '%
FpsCounterAnchorPositions88' @
anchor_position88A P
)88P Q
{99 	
switch;; 
(;; 
anchor_position;; #
);;# $
{<< 
case== %
FpsCounterAnchorPositions== .
.==. /
TopLeft==/ 6
:==6 7
m_textContainer?? #
.??# $
anchorPosition??$ 2
=??3 4 
TextContainerAnchors??5 I
.??I J
TopLeft??J Q
;??Q R$
m_frameCounter_transform@@ ,
.@@, -
position@@- 5
=@@6 7
m_camera@@8 @
.@@@ A 
ViewportToWorldPoint@@A U
(@@U V
new@@V Y
Vector3@@Z a
(@@a b
$num@@b c
,@@c d
$num@@e f
,@@f g
$num@@h n
)@@n o
)@@o p
;@@p q
breakAA 
;AA 
caseBB %
FpsCounterAnchorPositionsBB .
.BB. /

BottomLeftBB/ 9
:BB9 :
m_textContainerDD #
.DD# $
anchorPositionDD$ 2
=DD3 4 
TextContainerAnchorsDD5 I
.DDI J

BottomLeftDDJ T
;DDT U$
m_frameCounter_transformEE ,
.EE, -
positionEE- 5
=EE6 7
m_cameraEE8 @
.EE@ A 
ViewportToWorldPointEEA U
(EEU V
newEEV Y
Vector3EEZ a
(EEa b
$numEEb c
,EEc d
$numEEe f
,EEf g
$numEEh n
)EEn o
)EEo p
;EEp q
breakFF 
;FF 
caseGG %
FpsCounterAnchorPositionsGG .
.GG. /
TopRightGG/ 7
:GG7 8
m_textContainerII #
.II# $
anchorPositionII$ 2
=II3 4 
TextContainerAnchorsII5 I
.III J
TopRightIIJ R
;IIR S$
m_frameCounter_transformJJ ,
.JJ, -
positionJJ- 5
=JJ6 7
m_cameraJJ8 @
.JJ@ A 
ViewportToWorldPointJJA U
(JJU V
newJJV Y
Vector3JJZ a
(JJa b
$numJJb c
,JJc d
$numJJe f
,JJf g
$numJJh n
)JJn o
)JJo p
;JJp q
breakKK 
;KK 
caseLL %
FpsCounterAnchorPositionsLL .
.LL. /
BottomRightLL/ :
:LL: ;
m_textContainerNN #
.NN# $
anchorPositionNN$ 2
=NN3 4 
TextContainerAnchorsNN5 I
.NNI J
BottomRightNNJ U
;NNU V$
m_frameCounter_transformOO ,
.OO, -
positionOO- 5
=OO6 7
m_cameraOO8 @
.OO@ A 
ViewportToWorldPointOOA U
(OOU V
newOOV Y
Vector3OOZ a
(OOa b
$numOOb c
,OOc d
$numOOe f
,OOf g
$numOOh n
)OOn o
)OOo p
;OOp q
breakPP 
;PP 
}QQ 
}RR 	
}SS 
}TT ª'
nD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\VertexColorCycler.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class 
VertexColorCycler "
:# $
MonoBehaviour% 2
{		 
private 
TMP_Text 
m_TextComponent (
;( )
void 
Awake 
( 
) 
{ 	
m_TextComponent 
= 
GetComponent *
<* +
TMP_Text+ 3
>3 4
(4 5
)5 6
;6 7
} 	
void 
Start 
( 
) 
{ 	
StartCoroutine 
( 
AnimateVertexColors .
(. /
)/ 0
)0 1
;1 2
} 	
IEnumerator 
AnimateVertexColors '
(' (
)( )
{ 	
m_TextComponent   
.   
ForceMeshUpdate   +
(  + ,
)  , -
;  - .
TMP_TextInfo"" 
textInfo"" !
=""" #
m_TextComponent""$ 3
.""3 4
textInfo""4 <
;""< =
int## 
currentCharacter##  
=##! "
$num### $
;##$ %
Color32%% 
[%% 
]%% 
newVertexColors%% %
;%%% &
Color32&& 
c0&& 
=&& 
m_TextComponent&& (
.&&( )
color&&) .
;&&. /
while(( 
((( 
true(( 
)(( 
{)) 
int** 
characterCount** "
=**# $
textInfo**% -
.**- .
characterCount**. <
;**< =
if-- 
(-- 
characterCount-- "
==--# %
$num--& '
)--' (
{.. 
yield// 
return//  
new//! $
WaitForSeconds//% 3
(//3 4
$num//4 9
)//9 :
;//: ;
continue00 
;00 
}11 
int44 
materialIndex44 !
=44" #
textInfo44$ ,
.44, -
characterInfo44- :
[44: ;
currentCharacter44; K
]44K L
.44L M"
materialReferenceIndex44M c
;44c d
newVertexColors77 
=77  !
textInfo77" *
.77* +
meshInfo77+ 3
[773 4
materialIndex774 A
]77A B
.77B C
colors3277C K
;77K L
int:: 
vertexIndex:: 
=::  !
textInfo::" *
.::* +
characterInfo::+ 8
[::8 9
currentCharacter::9 I
]::I J
.::J K
vertexIndex::K V
;::V W
if== 
(== 
textInfo== 
.== 
characterInfo== *
[==* +
currentCharacter==+ ;
]==; <
.==< =
	isVisible=== F
)==F G
{>> 
c0?? 
=?? 
new?? 
Color32?? $
(??$ %
(??% &
byte??& *
)??* +
Random??+ 1
.??1 2
Range??2 7
(??7 8
$num??8 9
,??9 :
$num??; >
)??> ?
,??? @
(??A B
byte??B F
)??F G
Random??G M
.??M N
Range??N S
(??S T
$num??T U
,??U V
$num??W Z
)??Z [
,??[ \
(??] ^
byte??^ b
)??b c
Random??c i
.??i j
Range??j o
(??o p
$num??p q
,??q r
$num??s v
)??v w
,??w x
$num??y |
)??| }
;??} ~
newVertexColorsAA #
[AA# $
vertexIndexAA$ /
+AA0 1
$numAA2 3
]AA3 4
=AA5 6
c0AA7 9
;AA9 :
newVertexColorsBB #
[BB# $
vertexIndexBB$ /
+BB0 1
$numBB2 3
]BB3 4
=BB5 6
c0BB7 9
;BB9 :
newVertexColorsCC #
[CC# $
vertexIndexCC$ /
+CC0 1
$numCC2 3
]CC3 4
=CC5 6
c0CC7 9
;CC9 :
newVertexColorsDD #
[DD# $
vertexIndexDD$ /
+DD0 1
$numDD2 3
]DD3 4
=DD5 6
c0DD7 9
;DD9 :
m_TextComponentGG #
.GG# $
UpdateVertexDataGG$ 4
(GG4 5%
TMP_VertexDataUpdateFlagsGG5 N
.GGN O
Colors32GGO W
)GGW X
;GGX Y
}KK 
currentCharacterMM  
=MM! "
(MM# $
currentCharacterMM$ 4
+MM5 6
$numMM7 8
)MM8 9
%MM: ;
characterCountMM< J
;MMJ K
yieldOO 
returnOO 
newOO  
WaitForSecondsOO! /
(OO/ 0
$numOO0 5
)OO5 6
;OO6 7
}PP 
}QQ 	
}SS 
}TT ∑
WD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Stats\StatSystem\StatInteractable.cs
public 
	interface 
StatInteractable !
{ 
void 
Interact	 
( 
Player 
player 
)  
;  !
} ì
eD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\TeleType.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class 
TeleType 
: 
MonoBehaviour )
{		 
private 
string 
label01 
=  
$str	! Å
;
Å Ç
private 
string 
label02 
=  
$str	! Å
;
Å Ç
private 
TMP_Text 
m_textMeshPro &
;& '
void 
Awake 
( 
) 
{ 	
m_textMeshPro 
= 
GetComponent (
<( )
TMP_Text) 1
>1 2
(2 3
)3 4
;4 5
m_textMeshPro 
. 
text 
=  
label01! (
;( )
m_textMeshPro 
. 
enableWordWrapping ,
=- .
true/ 3
;3 4
m_textMeshPro 
. 
	alignment #
=$ % 
TextAlignmentOptions& :
.: ;
Top; >
;> ?
},, 	
IEnumerator// 
Start// 
(// 
)// 
{00 	
m_textMeshPro33 
.33 
ForceMeshUpdate33 )
(33) *
)33* +
;33+ ,
int66 "
totalVisibleCharacters66 &
=66' (
m_textMeshPro66) 6
.666 7
textInfo667 ?
.66? @
characterCount66@ N
;66N O
int77 
counter77 
=77 
$num77 
;77 
int88 
visibleCount88 
=88 
$num88  
;88  !
while:: 
(:: 
true:: 
):: 
{;; 
visibleCount<< 
=<< 
counter<< &
%<<' (
(<<) *"
totalVisibleCharacters<<* @
+<<A B
$num<<C D
)<<D E
;<<E F
m_textMeshPro>> 
.>>  
maxVisibleCharacters>> 2
=>>3 4
visibleCount>>5 A
;>>A B
ifAA 
(AA 
visibleCountAA  
>=AA! #"
totalVisibleCharactersAA$ :
)AA: ;
{BB 
yieldCC 
returnCC  
newCC! $
WaitForSecondsCC% 3
(CC3 4
$numCC4 8
)CC8 9
;CC9 :
m_textMeshProDD !
.DD! "
textDD" &
=DD' (
label02DD) 0
;DD0 1
yieldEE 
returnEE  
newEE! $
WaitForSecondsEE% 3
(EE3 4
$numEE4 8
)EE8 9
;EE9 :
m_textMeshProFF !
.FF! "
textFF" &
=FF' (
label01FF) 0
;FF0 1
yieldGG 
returnGG  
newGG! $
WaitForSecondsGG% 3
(GG3 4
$numGG4 8
)GG8 9
;GG9 :
}HH 
counterJJ 
+=JJ 
$numJJ 
;JJ 
yieldLL 
returnLL 
newLL  
WaitForSecondsLL! /
(LL/ 0
$numLL0 5
)LL5 6
;LL6 7
}MM 
}PP 	
}RR 
}SS 
qD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\TMP_ExampleScript_01.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public

 

class

  
TMP_ExampleScript_01

 %
:

& '
MonoBehaviour

( 5
{ 
public 
enum 

objectType 
{  
TextMeshPro! ,
=- .
$num/ 0
,0 1
TextMeshProUGUI2 A
=B C
$numD E
}F G
;G H
public 

objectType 

ObjectType $
;$ %
public 
bool 
isStatic 
; 
private 
TMP_Text 
m_text 
;  
private 
const 
string 
k_label $
=% &
$str' J
;J K
private 
int 
count 
; 
void 
Awake 
( 
) 
{ 	
if 
( 

ObjectType 
== 
$num 
)  
m_text 
= 
GetComponent %
<% &
TextMeshPro& 1
>1 2
(2 3
)3 4
??5 7

gameObject8 B
.B C
AddComponentC O
<O P
TextMeshProP [
>[ \
(\ ]
)] ^
;^ _
else 
m_text   
=   
GetComponent   %
<  % &
TextMeshProUGUI  & 5
>  5 6
(  6 7
)  7 8
??  9 ;

gameObject  < F
.  F G
AddComponent  G S
<  S T
TextMeshProUGUI  T c
>  c d
(  d e
)  e f
;  f g
m_text## 
.## 
font## 
=## 
	Resources## #
.### $
Load##$ (
<##( )
TMP_FontAsset##) 6
>##6 7
(##7 8
$str##8 U
)##U V
;##V W
m_text&& 
.&& 
fontSharedMaterial&& %
=&&& '
	Resources&&( 1
.&&1 2
Load&&2 6
<&&6 7
Material&&7 ?
>&&? @
(&&@ A
$str&&A l
)&&l m
;&&m n
m_text)) 
.)) 
fontSize)) 
=)) 
$num)) !
;))! "
m_text,, 
.,, 
text,, 
=,, 
$str,, C
;,,C D
Vector2// 
size// 
=// 
m_text// !
.//! "
GetPreferredValues//" 4
(//4 5
Mathf//5 :
.//: ;
Infinity//; C
,//C D
Mathf//E J
.//J K
Infinity//K S
)//S T
;//T U
m_text22 
.22 
rectTransform22  
.22  !
	sizeDelta22! *
=22+ ,
new22- 0
Vector2221 8
(228 9
size229 =
.22= >
x22> ?
,22? @
size22A E
.22E F
y22F G
)22G H
;22H I
}33 	
void66 
Update66 
(66 
)66 
{77 	
if88 
(88 
!88 
isStatic88 
)88 
{99 
m_text:: 
.:: 
SetText:: 
(:: 
k_label:: &
,::& '
count::( -
%::. /
$num::0 4
)::4 5
;::5 6
count;; 
+=;; 
$num;; 
;;; 
}<< 
}== 	
}?? 
}@@ ¶1
qD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\TextConsoleSimulator.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class  
TextConsoleSimulator %
:& '
MonoBehaviour( 5
{ 
private		 
TMP_Text		 
m_TextComponent		 (
;		( )
private

 
bool

 
hasTextChanged

 #
;

# $
void 
Awake 
( 
) 
{ 	
m_TextComponent 
= 

gameObject (
.( )
GetComponent) 5
<5 6
TMP_Text6 >
>> ?
(? @
)@ A
;A B
} 	
void 
Start 
( 
) 
{ 	
StartCoroutine 
( 
RevealCharacters +
(+ ,
m_TextComponent, ;
); <
)< =
;= >
} 	
void 
OnEnable 
( 
) 
{ 	
TMPro_EventManager 
. 
TEXT_CHANGED_EVENT 1
.1 2
Add2 5
(5 6
ON_TEXT_CHANGED6 E
)E F
;F G
} 	
void 
	OnDisable 
( 
) 
{   	
TMPro_EventManager!! 
.!! 
TEXT_CHANGED_EVENT!! 1
.!!1 2
Remove!!2 8
(!!8 9
ON_TEXT_CHANGED!!9 H
)!!H I
;!!I J
}"" 	
void&& 
ON_TEXT_CHANGED&& 
(&& 
Object&& #
obj&&$ '
)&&' (
{'' 	
hasTextChanged(( 
=(( 
true(( !
;((! "
})) 	
IEnumerator00 
RevealCharacters00 $
(00$ %
TMP_Text00% -
textComponent00. ;
)00; <
{11 	
textComponent22 
.22 
ForceMeshUpdate22 )
(22) *
)22* +
;22+ ,
TMP_TextInfo44 
textInfo44 !
=44" #
textComponent44$ 1
.441 2
textInfo442 :
;44: ;
int66 "
totalVisibleCharacters66 &
=66' (
textInfo66) 1
.661 2
characterCount662 @
;66@ A
int77 
visibleCount77 
=77 
$num77  
;77  !
while99 
(99 
true99 
)99 
{:: 
if;; 
(;; 
hasTextChanged;; "
);;" #
{<< "
totalVisibleCharacters== *
===+ ,
textInfo==- 5
.==5 6
characterCount==6 D
;==D E
hasTextChanged>> "
=>># $
false>>% *
;>>* +
}?? 
ifAA 
(AA 
visibleCountAA  
>AA! ""
totalVisibleCharactersAA# 9
)AA9 :
{BB 
yieldCC 
returnCC  
newCC! $
WaitForSecondsCC% 3
(CC3 4
$numCC4 8
)CC8 9
;CC9 :
visibleCountDD  
=DD! "
$numDD# $
;DD$ %
}EE 
textComponentGG 
.GG  
maxVisibleCharactersGG 2
=GG3 4
visibleCountGG5 A
;GGA B
visibleCountII 
+=II 
$numII  !
;II! "
yieldKK 
returnKK 
nullKK !
;KK! "
}LL 
}MM 	
IEnumeratorTT 
RevealWordsTT 
(TT  
TMP_TextTT  (
textComponentTT) 6
)TT6 7
{UU 	
textComponentVV 
.VV 
ForceMeshUpdateVV )
(VV) *
)VV* +
;VV+ ,
intXX 
totalWordCountXX 
=XX  
textComponentXX! .
.XX. /
textInfoXX/ 7
.XX7 8
	wordCountXX8 A
;XXA B
intYY "
totalVisibleCharactersYY &
=YY' (
textComponentYY) 6
.YY6 7
textInfoYY7 ?
.YY? @
characterCountYY@ N
;YYN O
intZZ 
counterZZ 
=ZZ 
$numZZ 
;ZZ 
int[[ 
currentWord[[ 
=[[ 
$num[[ 
;[[  
int\\ 
visibleCount\\ 
=\\ 
$num\\  
;\\  !
while^^ 
(^^ 
true^^ 
)^^ 
{__ 
currentWord`` 
=`` 
counter`` %
%``& '
(``( )
totalWordCount``) 7
+``8 9
$num``: ;
)``; <
;``< =
ifcc 
(cc 
currentWordcc 
==cc  "
$numcc# $
)cc$ %
visibleCountdd  
=dd! "
$numdd# $
;dd$ %
elseee 
ifee 
(ee 
currentWordee $
<ee% &
totalWordCountee' 5
)ee5 6
visibleCountff  
=ff! "
textComponentff# 0
.ff0 1
textInfoff1 9
.ff9 :
wordInfoff: B
[ffB C
currentWordffC N
-ffO P
$numffQ R
]ffR S
.ffS T
lastCharacterIndexffT f
+ffg h
$numffi j
;ffj k
elsegg 
ifgg 
(gg 
currentWordgg $
==gg% '
totalWordCountgg( 6
)gg6 7
visibleCounthh  
=hh! ""
totalVisibleCharactershh# 9
;hh9 :
textComponentjj 
.jj  
maxVisibleCharactersjj 2
=jj3 4
visibleCountjj5 A
;jjA B
ifmm 
(mm 
visibleCountmm  
>=mm! #"
totalVisibleCharactersmm$ :
)mm: ;
{nn 
yieldoo 
returnoo  
newoo! $
WaitForSecondsoo% 3
(oo3 4
$numoo4 8
)oo8 9
;oo9 :
}pp 
counterrr 
+=rr 
$numrr 
;rr 
yieldtt 
returntt 
newtt  
WaitForSecondstt! /
(tt/ 0
$numtt0 4
)tt4 5
;tt5 6
}uu 
}vv 	
}xx 
}yy ˇà
gD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\VertexZoom.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public

 

class

 

VertexZoom

 
:

 
MonoBehaviour

 +
{ 
public 
float 
AngleMultiplier $
=% &
$num' +
;+ ,
public 
float 
SpeedMultiplier $
=% &
$num' +
;+ ,
public 
float 

CurveScale 
=  !
$num" &
;& '
private 
TMP_Text 
m_TextComponent (
;( )
private 
bool 
hasTextChanged #
;# $
void 
Awake 
( 
) 
{ 	
m_TextComponent 
= 
GetComponent *
<* +
TMP_Text+ 3
>3 4
(4 5
)5 6
;6 7
} 	
void 
OnEnable 
( 
) 
{ 	
TMPro_EventManager 
. 
TEXT_CHANGED_EVENT 1
.1 2
Add2 5
(5 6
ON_TEXT_CHANGED6 E
)E F
;F G
} 	
void 
	OnDisable 
( 
) 
{   	
TMPro_EventManager"" 
."" 
TEXT_CHANGED_EVENT"" 1
.""1 2
Remove""2 8
(""8 9
ON_TEXT_CHANGED""9 H
)""H I
;""I J
}## 	
void&& 
Start&& 
(&& 
)&& 
{'' 	
StartCoroutine(( 
((( 
AnimateVertexColors(( .
(((. /
)((/ 0
)((0 1
;((1 2
})) 	
void,, 
ON_TEXT_CHANGED,, 
(,, 
Object,, #
obj,,$ '
),,' (
{-- 	
if.. 
(.. 
obj.. 
==.. 
m_TextComponent.. &
)..& '
hasTextChanged// 
=//  
true//! %
;//% &
}00 	
IEnumerator66 
AnimateVertexColors66 '
(66' (
)66( )
{77 	
m_TextComponent;; 
.;; 
ForceMeshUpdate;; +
(;;+ ,
);;, -
;;;- .
TMP_TextInfo== 
textInfo== !
===" #
m_TextComponent==$ 3
.==3 4
textInfo==4 <
;==< =
	Matrix4x4?? 
matrix?? 
;?? 
TMP_MeshInfo@@ 
[@@ 
]@@ $
cachedMeshInfoVertexData@@ 3
=@@4 5
textInfo@@6 >
.@@> ?"
CopyMeshInfoVertexData@@? U
(@@U V
)@@V W
;@@W X
ListCC 
<CC 
floatCC 
>CC 
modifiedCharScaleCC )
=CC* +
newCC, /
ListCC0 4
<CC4 5
floatCC5 :
>CC: ;
(CC; <
)CC< =
;CC= >
ListDD 
<DD 
intDD 
>DD 
scaleSortingOrderDD '
=DD( )
newDD* -
ListDD. 2
<DD2 3
intDD3 6
>DD6 7
(DD7 8
)DD8 9
;DD9 :
hasTextChangedFF 
=FF 
trueFF !
;FF! "
whileHH 
(HH 
trueHH 
)HH 
{II 
ifKK 
(KK 
hasTextChangedKK "
)KK" #
{LL $
cachedMeshInfoVertexDataNN ,
=NN- .
textInfoNN/ 7
.NN7 8"
CopyMeshInfoVertexDataNN8 N
(NNN O
)NNO P
;NNP Q
hasTextChangedPP "
=PP# $
falsePP% *
;PP* +
}QQ 
intSS 
characterCountSS "
=SS# $
textInfoSS% -
.SS- .
characterCountSS. <
;SS< =
ifVV 
(VV 
characterCountVV "
==VV# %
$numVV& '
)VV' (
{WW 
yieldXX 
returnXX  
newXX! $
WaitForSecondsXX% 3
(XX3 4
$numXX4 9
)XX9 :
;XX: ;
continueYY 
;YY 
}ZZ 
modifiedCharScale]] !
.]]! "
Clear]]" '
(]]' (
)]]( )
;]]) *
scaleSortingOrder^^ !
.^^! "
Clear^^" '
(^^' (
)^^( )
;^^) *
for`` 
(`` 
int`` 
i`` 
=`` 
$num`` 
;`` 
i``  !
<``" #
characterCount``$ 2
;``2 3
i``4 5
++``5 7
)``7 8
{aa 
TMP_CharacterInfobb %
charInfobb& .
=bb/ 0
textInfobb1 9
.bb9 :
characterInfobb: G
[bbG H
ibbH I
]bbI J
;bbJ K
ifee 
(ee 
!ee 
charInfoee !
.ee! "
	isVisibleee" +
)ee+ ,
continueff  
;ff  !
intii 
materialIndexii %
=ii& '
textInfoii( 0
.ii0 1
characterInfoii1 >
[ii> ?
iii? @
]ii@ A
.iiA B"
materialReferenceIndexiiB X
;iiX Y
intll 
vertexIndexll #
=ll$ %
textInfoll& .
.ll. /
characterInfoll/ <
[ll< =
ill= >
]ll> ?
.ll? @
vertexIndexll@ K
;llK L
Vector3oo 
[oo 
]oo 
sourceVerticesoo ,
=oo- .$
cachedMeshInfoVertexDataoo/ G
[ooG H
materialIndexooH U
]ooU V
.ooV W
verticesooW _
;oo_ `
Vector2tt 
charMidBaslinett *
=tt+ ,
(tt- .
sourceVerticestt. <
[tt< =
vertexIndextt= H
+ttI J
$numttK L
]ttL M
+ttN O
sourceVerticesttP ^
[tt^ _
vertexIndextt_ j
+ttk l
$numttm n
]ttn o
)tto p
/ttq r
$numtts t
;ttt u
Vector3xx 
offsetxx "
=xx# $
charMidBaslinexx% 3
;xx3 4
Vector3zz 
[zz 
]zz 
destinationVerticeszz 1
=zz2 3
textInfozz4 <
.zz< =
meshInfozz= E
[zzE F
materialIndexzzF S
]zzS T
.zzT U
verticeszzU ]
;zz] ^
destinationVertices|| '
[||' (
vertexIndex||( 3
+||4 5
$num||6 7
]||7 8
=||9 :
sourceVertices||; I
[||I J
vertexIndex||J U
+||V W
$num||X Y
]||Y Z
-||[ \
offset||] c
;||c d
destinationVertices}} '
[}}' (
vertexIndex}}( 3
+}}4 5
$num}}6 7
]}}7 8
=}}9 :
sourceVertices}}; I
[}}I J
vertexIndex}}J U
+}}V W
$num}}X Y
]}}Y Z
-}}[ \
offset}}] c
;}}c d
destinationVertices~~ '
[~~' (
vertexIndex~~( 3
+~~4 5
$num~~6 7
]~~7 8
=~~9 :
sourceVertices~~; I
[~~I J
vertexIndex~~J U
+~~V W
$num~~X Y
]~~Y Z
-~~[ \
offset~~] c
;~~c d
destinationVertices '
[' (
vertexIndex( 3
+4 5
$num6 7
]7 8
=9 :
sourceVertices; I
[I J
vertexIndexJ U
+V W
$numX Y
]Y Z
-[ \
offset] c
;c d
float
ÑÑ 
randomScale
ÑÑ %
=
ÑÑ& '
Random
ÑÑ( .
.
ÑÑ. /
Range
ÑÑ/ 4
(
ÑÑ4 5
$num
ÑÑ5 7
,
ÑÑ7 8
$num
ÑÑ9 =
)
ÑÑ= >
;
ÑÑ> ?
modifiedCharScale
áá %
.
áá% &
Add
áá& )
(
áá) *
randomScale
áá* 5
)
áá5 6
;
áá6 7
scaleSortingOrder
àà %
.
àà% &
Add
àà& )
(
àà) *
modifiedCharScale
àà* ;
.
àà; <
Count
àà< A
-
ààB C
$num
ààD E
)
ààE F
;
ààF G
matrix
åå 
=
åå 
	Matrix4x4
åå &
.
åå& '
TRS
åå' *
(
åå* +
new
åå+ .
Vector3
åå/ 6
(
åå6 7
$num
åå7 8
,
åå8 9
$num
åå: ;
,
åå; <
$num
åå= >
)
åå> ?
,
åå? @

Quaternion
ååA K
.
ååK L
identity
ååL T
,
ååT U
Vector3
ååV ]
.
åå] ^
one
åå^ a
*
ååb c
randomScale
ååd o
)
ååo p
;
ååp q!
destinationVertices
éé '
[
éé' (
vertexIndex
éé( 3
+
éé4 5
$num
éé6 7
]
éé7 8
=
éé9 :
matrix
éé; A
.
ééA B
MultiplyPoint3x4
ééB R
(
ééR S!
destinationVertices
ééS f
[
ééf g
vertexIndex
éég r
+
éés t
$num
ééu v
]
éév w
)
ééw x
;
ééx y!
destinationVertices
èè '
[
èè' (
vertexIndex
èè( 3
+
èè4 5
$num
èè6 7
]
èè7 8
=
èè9 :
matrix
èè; A
.
èèA B
MultiplyPoint3x4
èèB R
(
èèR S!
destinationVertices
èèS f
[
èèf g
vertexIndex
èèg r
+
èès t
$num
èèu v
]
èèv w
)
èèw x
;
èèx y!
destinationVertices
êê '
[
êê' (
vertexIndex
êê( 3
+
êê4 5
$num
êê6 7
]
êê7 8
=
êê9 :
matrix
êê; A
.
êêA B
MultiplyPoint3x4
êêB R
(
êêR S!
destinationVertices
êêS f
[
êêf g
vertexIndex
êêg r
+
êês t
$num
êêu v
]
êêv w
)
êêw x
;
êêx y!
destinationVertices
ëë '
[
ëë' (
vertexIndex
ëë( 3
+
ëë4 5
$num
ëë6 7
]
ëë7 8
=
ëë9 :
matrix
ëë; A
.
ëëA B
MultiplyPoint3x4
ëëB R
(
ëëR S!
destinationVertices
ëëS f
[
ëëf g
vertexIndex
ëëg r
+
ëës t
$num
ëëu v
]
ëëv w
)
ëëw x
;
ëëx y!
destinationVertices
ìì '
[
ìì' (
vertexIndex
ìì( 3
+
ìì4 5
$num
ìì6 7
]
ìì7 8
+=
ìì9 ;
offset
ìì< B
;
ììB C!
destinationVertices
îî '
[
îî' (
vertexIndex
îî( 3
+
îî4 5
$num
îî6 7
]
îî7 8
+=
îî9 ;
offset
îî< B
;
îîB C!
destinationVertices
ïï '
[
ïï' (
vertexIndex
ïï( 3
+
ïï4 5
$num
ïï6 7
]
ïï7 8
+=
ïï9 ;
offset
ïï< B
;
ïïB C!
destinationVertices
ññ '
[
ññ' (
vertexIndex
ññ( 3
+
ññ4 5
$num
ññ6 7
]
ññ7 8
+=
ññ9 ;
offset
ññ< B
;
ññB C
Vector2
ôô 
[
ôô 
]
ôô 

sourceUVs0
ôô (
=
ôô) *&
cachedMeshInfoVertexData
ôô+ C
[
ôôC D
materialIndex
ôôD Q
]
ôôQ R
.
ôôR S
uvs0
ôôS W
;
ôôW X
Vector2
öö 
[
öö 
]
öö 
destinationUVs0
öö -
=
öö. /
textInfo
öö0 8
.
öö8 9
meshInfo
öö9 A
[
ööA B
materialIndex
ööB O
]
ööO P
.
ööP Q
uvs0
ööQ U
;
ööU V
destinationUVs0
úú #
[
úú# $
vertexIndex
úú$ /
+
úú0 1
$num
úú2 3
]
úú3 4
=
úú5 6

sourceUVs0
úú7 A
[
úúA B
vertexIndex
úúB M
+
úúN O
$num
úúP Q
]
úúQ R
;
úúR S
destinationUVs0
ùù #
[
ùù# $
vertexIndex
ùù$ /
+
ùù0 1
$num
ùù2 3
]
ùù3 4
=
ùù5 6

sourceUVs0
ùù7 A
[
ùùA B
vertexIndex
ùùB M
+
ùùN O
$num
ùùP Q
]
ùùQ R
;
ùùR S
destinationUVs0
ûû #
[
ûû# $
vertexIndex
ûû$ /
+
ûû0 1
$num
ûû2 3
]
ûû3 4
=
ûû5 6

sourceUVs0
ûû7 A
[
ûûA B
vertexIndex
ûûB M
+
ûûN O
$num
ûûP Q
]
ûûQ R
;
ûûR S
destinationUVs0
üü #
[
üü# $
vertexIndex
üü$ /
+
üü0 1
$num
üü2 3
]
üü3 4
=
üü5 6

sourceUVs0
üü7 A
[
üüA B
vertexIndex
üüB M
+
üüN O
$num
üüP Q
]
üüQ R
;
üüR S
Color32
¢¢ 
[
¢¢ 
]
¢¢ 
sourceColors32
¢¢ ,
=
¢¢- .&
cachedMeshInfoVertexData
¢¢/ G
[
¢¢G H
materialIndex
¢¢H U
]
¢¢U V
.
¢¢V W
colors32
¢¢W _
;
¢¢_ `
Color32
££ 
[
££ 
]
££ !
destinationColors32
££ 1
=
££2 3
textInfo
££4 <
.
££< =
meshInfo
££= E
[
££E F
materialIndex
££F S
]
££S T
.
££T U
colors32
££U ]
;
££] ^!
destinationColors32
•• '
[
••' (
vertexIndex
••( 3
+
••4 5
$num
••6 7
]
••7 8
=
••9 :
sourceColors32
••; I
[
••I J
vertexIndex
••J U
+
••V W
$num
••X Y
]
••Y Z
;
••Z [!
destinationColors32
¶¶ '
[
¶¶' (
vertexIndex
¶¶( 3
+
¶¶4 5
$num
¶¶6 7
]
¶¶7 8
=
¶¶9 :
sourceColors32
¶¶; I
[
¶¶I J
vertexIndex
¶¶J U
+
¶¶V W
$num
¶¶X Y
]
¶¶Y Z
;
¶¶Z [!
destinationColors32
ßß '
[
ßß' (
vertexIndex
ßß( 3
+
ßß4 5
$num
ßß6 7
]
ßß7 8
=
ßß9 :
sourceColors32
ßß; I
[
ßßI J
vertexIndex
ßßJ U
+
ßßV W
$num
ßßX Y
]
ßßY Z
;
ßßZ [!
destinationColors32
®® '
[
®®' (
vertexIndex
®®( 3
+
®®4 5
$num
®®6 7
]
®®7 8
=
®®9 :
sourceColors32
®®; I
[
®®I J
vertexIndex
®®J U
+
®®V W
$num
®®X Y
]
®®Y Z
;
®®Z [
}
©© 
for
¨¨ 
(
¨¨ 
int
¨¨ 
i
¨¨ 
=
¨¨ 
$num
¨¨ 
;
¨¨ 
i
¨¨  !
<
¨¨" #
textInfo
¨¨$ ,
.
¨¨, -
meshInfo
¨¨- 5
.
¨¨5 6
Length
¨¨6 <
;
¨¨< =
i
¨¨> ?
++
¨¨? A
)
¨¨A B
{
≠≠ 
scaleSortingOrder
ØØ %
.
ØØ% &
Sort
ØØ& *
(
ØØ* +
(
ØØ+ ,
a
ØØ, -
,
ØØ- .
b
ØØ/ 0
)
ØØ0 1
=>
ØØ2 4
modifiedCharScale
ØØ5 F
[
ØØF G
a
ØØG H
]
ØØH I
.
ØØI J
	CompareTo
ØØJ S
(
ØØS T
modifiedCharScale
ØØT e
[
ØØe f
b
ØØf g
]
ØØg h
)
ØØh i
)
ØØi j
;
ØØj k
textInfo
±± 
.
±± 
meshInfo
±± %
[
±±% &
i
±±& '
]
±±' (
.
±±( )
SortGeometry
±±) 5
(
±±5 6
scaleSortingOrder
±±6 G
)
±±G H
;
±±H I
textInfo
¥¥ 
.
¥¥ 
meshInfo
¥¥ %
[
¥¥% &
i
¥¥& '
]
¥¥' (
.
¥¥( )
mesh
¥¥) -
.
¥¥- .
vertices
¥¥. 6
=
¥¥7 8
textInfo
¥¥9 A
.
¥¥A B
meshInfo
¥¥B J
[
¥¥J K
i
¥¥K L
]
¥¥L M
.
¥¥M N
vertices
¥¥N V
;
¥¥V W
textInfo
µµ 
.
µµ 
meshInfo
µµ %
[
µµ% &
i
µµ& '
]
µµ' (
.
µµ( )
mesh
µµ) -
.
µµ- .
uv
µµ. 0
=
µµ1 2
textInfo
µµ3 ;
.
µµ; <
meshInfo
µµ< D
[
µµD E
i
µµE F
]
µµF G
.
µµG H
uvs0
µµH L
;
µµL M
textInfo
∂∂ 
.
∂∂ 
meshInfo
∂∂ %
[
∂∂% &
i
∂∂& '
]
∂∂' (
.
∂∂( )
mesh
∂∂) -
.
∂∂- .
colors32
∂∂. 6
=
∂∂7 8
textInfo
∂∂9 A
.
∂∂A B
meshInfo
∂∂B J
[
∂∂J K
i
∂∂K L
]
∂∂L M
.
∂∂M N
colors32
∂∂N V
;
∂∂V W
m_TextComponent
∏∏ #
.
∏∏# $
UpdateGeometry
∏∏$ 2
(
∏∏2 3
textInfo
∏∏3 ;
.
∏∏; <
meshInfo
∏∏< D
[
∏∏D E
i
∏∏E F
]
∏∏F G
.
∏∏G H
mesh
∏∏H L
,
∏∏L M
i
∏∏N O
)
∏∏O P
;
∏∏P Q
}
ππ 
yield
ªª 
return
ªª 
new
ªª  
WaitForSeconds
ªª! /
(
ªª/ 0
$num
ªª0 4
)
ªª4 5
;
ªª5 6
}
ºº 
}
ΩΩ 	
}
øø 
}¿¿ Í%
gD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\ObjectSpin.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class 

ObjectSpin 
: 
MonoBehaviour +
{		 
public 
float 
	SpinSpeed 
=  
$num! "
;" #
public 
int 
RotationRange  
=! "
$num# %
;% &
private 
	Transform 
m_transform %
;% &
private 
float 
m_time 
; 
private 
Vector3 
	m_prevPOS !
;! "
private 
Vector3 
m_initial_Rotation *
;* +
private 
Vector3 
m_initial_Position *
;* +
private 
Color32 
m_lightColor $
;$ %
private 
int 
frames 
= 
$num 
; 
public 
enum 

MotionType 
{  
Rotation! )
,) *
BackAndForth+ 7
,7 8
Translation9 D
}E F
;F G
public 

MotionType 
Motion  
;  !
void 
Awake 
( 
) 
{ 	
m_transform 
= 
	transform #
;# $
m_initial_Rotation 
=  
m_transform! ,
., -
rotation- 5
.5 6
eulerAngles6 A
;A B
m_initial_Position 
=  
m_transform! ,
., -
position- 5
;5 6
Light!! 
light!! 
=!! 
GetComponent!! &
<!!& '
Light!!' ,
>!!, -
(!!- .
)!!. /
;!!/ 0
m_lightColor"" 
="" 
light""  
!=""! #
null""$ (
?"") *
light""+ 0
.""0 1
color""1 6
:""7 8
Color""9 >
.""> ?
black""? D
;""D E
}## 	
void'' 
Update'' 
('' 
)'' 
{(( 	
if)) 
()) 
Motion)) 
==)) 

MotionType)) $
.))$ %
Rotation))% -
)))- .
{** 
m_transform++ 
.++ 
Rotate++ "
(++" #
$num++# $
,++$ %
	SpinSpeed++& /
*++0 1
Time++2 6
.++6 7
	deltaTime++7 @
,++@ A
$num++B C
)++C D
;++D E
},, 
else-- 
if-- 
(-- 
Motion-- 
==-- 

MotionType-- )
.--) *
BackAndForth--* 6
)--6 7
{.. 
m_time// 
+=// 
	SpinSpeed// #
*//$ %
Time//& *
.//* +
	deltaTime//+ 4
;//4 5
m_transform00 
.00 
rotation00 $
=00% &

Quaternion00' 1
.001 2
Euler002 7
(007 8
m_initial_Rotation008 J
.00J K
x00K L
,00L M
Mathf00N S
.00S T
Sin00T W
(00W X
m_time00X ^
)00^ _
*00` a
RotationRange00b o
+00p q
m_initial_Rotation	00r Ñ
.
00Ñ Ö
y
00Ö Ü
,
00Ü á 
m_initial_Rotation
00à ö
.
00ö õ
z
00õ ú
)
00ú ù
;
00ù û
}11 
else22 
{33 
m_time44 
+=44 
	SpinSpeed44 #
*44$ %
Time44& *
.44* +
	deltaTime44+ 4
;444 5
float66 
x66 
=66 
$num66 
*66 
Mathf66 $
.66$ %
Cos66% (
(66( )
m_time66) /
*660 1
$num662 6
)666 7
;667 8
float77 
y77 
=77 
$num77 
;77 
float88 
z88 
=88 
$num88 
;88 
m_transform:: 
.:: 
position:: $
=::% &
m_initial_Position::' 9
+::: ;
new::< ?
Vector3::@ G
(::G H
x::H I
,::I J
z::K L
,::L M
y::N O
)::O P
;::P Q
	m_prevPOS@@ 
=@@ 
m_transform@@ '
.@@' (
position@@( 0
;@@0 1
framesAA 
+=AA 
$numAA 
;AA 
}BB 
}CC 	
}DD 
}EE ¡Ò
rD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\TMP_TextInfoDebugTool.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public

 

class

 !
TMP_TextInfoDebugTool

 &
:

' (
MonoBehaviour

) 6
{ 
public 
bool 
ShowCharacters "
;" #
public 
bool 
	ShowWords 
; 
public 
bool 
	ShowLinks 
; 
public 
bool 
	ShowLines 
; 
public 
bool 
ShowMeshBounds "
;" #
public 
bool 
ShowTextBounds "
;" #
[ 	
Space	 
( 
$num 
) 
] 
[ 	
TextArea	 
( 
$num 
, 
$num 
) 
] 
public 
string 
ObjectStats !
;! "
[ 	
SerializeField	 
] 
private 
TMP_Text 
m_TextComponent (
;( )
private 
	Transform 
m_Transform %
;% &
private 
TMP_TextInfo 

m_TextInfo '
;' (
private 
float 
m_ScaleMultiplier '
;' (
private   
float   
m_HandleSize   "
;  " #
void## 
OnDrawGizmos## 
(## 
)## 
{$$ 	
if%% 
(%% 
m_TextComponent%% 
==%%  "
null%%# '
)%%' (
{&& 
m_TextComponent'' 
=''  !
GetComponent''" .
<''. /
TMP_Text''/ 7
>''7 8
(''8 9
)''9 :
;'': ;
if)) 
()) 
m_TextComponent)) #
==))$ &
null))' +
)))+ ,
return** 
;** 
}++ 
m_Transform-- 
=-- 
m_TextComponent-- )
.--) *
	transform--* 3
;--3 4

m_TextInfo00 
=00 
m_TextComponent00 (
.00( )
textInfo00) 1
;001 2
ObjectStats33 
=33 
$str33 (
+33) *

m_TextInfo33+ 5
.335 6
characterCount336 D
+33E F
$str33G S
+33T U

m_TextInfo33V `
.33` a
	wordCount33a j
+33k l
$str33m z
+33{ |

m_TextInfo	33} á
.
33á à

spaceCount
33à í
+
33ì î
$str
33ï £
+
33§ •

m_TextInfo
33¶ ∞
.
33∞ ±
spriteCount
33± º
+
33Ω æ
$str
33ø À
+
33Ã Õ

m_TextInfo
33Œ ÿ
.
33ÿ Ÿ
	linkCount
33Ÿ ‚
+44 
$str44 '
+44( )

m_TextInfo44* 4
.444 5
	lineCount445 >
+44? @
$str44A M
+44N O

m_TextInfo44P Z
.44Z [
	pageCount44[ d
;44d e
m_ScaleMultiplier77 
=77 
m_TextComponent77  /
.77/ 0
GetType770 7
(777 8
)778 9
==77: <
typeof77= C
(77C D
TextMeshPro77D O
)77O P
?77Q R
$num77S T
:77U V
$num77W [
;77[ \
m_HandleSize88 
=88 
HandleUtility88 (
.88( )
GetHandleSize88) 6
(886 7
m_Transform887 B
.88B C
position88C K
)88K L
*88M N
m_ScaleMultiplier88O `
;88` a
if<< 
(<< 
	ShowLines<< 
)<< 
DrawLineBounds== 
(== 
)==  
;==  !
ifBB 
(BB 
	ShowWordsBB 
)BB 
DrawWordBoundsCC 
(CC 
)CC  
;CC  !
ifHH 
(HH 
ShowCharactersHH 
)HH  
DrawCharactersBoundsII $
(II$ %
)II% &
;II& '
ifNN 
(NN 
	ShowLinksNN 
)NN 
DrawLinkBoundsOO 
(OO 
)OO  
;OO  !
ifTT 
(TT 
ShowMeshBoundsTT 
)TT 

DrawBoundsUU 
(UU 
)UU 
;UU 
ifZZ 
(ZZ 
ShowTextBoundsZZ 
)ZZ 
DrawTextBounds[[ 
([[ 
)[[  
;[[  !
}]] 	
voiddd  
DrawCharactersBoundsdd !
(dd! "
)dd" #
{ee 	
intff 
characterCountff 
=ff  

m_TextInfoff! +
.ff+ ,
characterCountff, :
;ff: ;
forhh 
(hh 
inthh 
ihh 
=hh 
$numhh 
;hh 
ihh 
<hh 
characterCounthh  .
;hh. /
ihh0 1
++hh1 3
)hh3 4
{ii 
TMP_CharacterInfokk !
characterInfokk" /
=kk0 1

m_TextInfokk2 <
.kk< =
characterInfokk= J
[kkJ K
ikkK L
]kkL M
;kkM N
boolmm 
isCharacterVisiblemm '
=mm( )
imm* +
<mm, -
m_TextComponentmm. =
.mm= > 
maxVisibleCharactersmm> R
&&mmS U
characterInfonn* 7
.nn7 8

lineNumbernn8 B
<nnC D
m_TextComponentnnE T
.nnT U
maxVisibleLinesnnU d
&&nne g
ioo* +
>=oo, .
m_TextComponentoo/ >
.oo> ?!
firstVisibleCharacteroo? T
;ooT U
ifqq 
(qq 
m_TextComponentqq #
.qq# $
overflowModeqq$ 0
==qq1 3
TextOverflowModesqq4 E
.qqE F
PageqqF J
)qqJ K
isCharacterVisiblerr &
=rr' (
isCharacterVisiblerr) ;
&&rr< >
characterInforr? L
.rrL M

pageNumberrrM W
+rrX Y
$numrrZ [
==rr\ ^
m_TextComponentrr_ n
.rrn o
pageToDisplayrro |
;rr| }
iftt 
(tt 
!tt 
isCharacterVisiblett '
)tt' (
continueuu 
;uu 
floatww 
dottedLineSizeww $
=ww% &
$numww' (
;ww( )
Vector3zz 

bottomLeftzz "
=zz# $
m_Transformzz% 0
.zz0 1
TransformPointzz1 ?
(zz? @
characterInfozz@ M
.zzM N

bottomLeftzzN X
)zzX Y
;zzY Z
Vector3{{ 
topLeft{{ 
={{  !
m_Transform{{" -
.{{- .
TransformPoint{{. <
({{< =
new{{= @
Vector3{{A H
({{H I
characterInfo{{I V
.{{V W
topLeft{{W ^
.{{^ _
x{{_ `
,{{` a
characterInfo{{b o
.{{o p
topLeft{{p w
.{{w x
y{{x y
,{{y z
$num{{{ |
){{| }
){{} ~
;{{~ 
Vector3|| 
topRight||  
=||! "
m_Transform||# .
.||. /
TransformPoint||/ =
(||= >
characterInfo||> K
.||K L
topRight||L T
)||T U
;||U V
Vector3}} 
bottomRight}} #
=}}$ %
m_Transform}}& 1
.}}1 2
TransformPoint}}2 @
(}}@ A
new}}A D
Vector3}}E L
(}}L M
characterInfo}}M Z
.}}Z [
bottomRight}}[ f
.}}f g
x}}g h
,}}h i
characterInfo}}j w
.}}w x
bottomRight	}}x É
.
}}É Ñ
y
}}Ñ Ö
,
}}Ö Ü
$num
}}á à
)
}}à â
)
}}â ä
;
}}ä ã
if
ÄÄ 
(
ÄÄ 
characterInfo
ÄÄ !
.
ÄÄ! "
	isVisible
ÄÄ" +
)
ÄÄ+ ,
{
ÅÅ 
Color
ÇÇ 
color
ÇÇ 
=
ÇÇ  !
Color
ÇÇ" '
.
ÇÇ' (
green
ÇÇ( -
;
ÇÇ- .!
DrawDottedRectangle
ÉÉ '
(
ÉÉ' (

bottomLeft
ÉÉ( 2
,
ÉÉ2 3
topRight
ÉÉ4 <
,
ÉÉ< =
color
ÉÉ> C
)
ÉÉC D
;
ÉÉD E
}
ÑÑ 
else
ÖÖ 
{
ÜÜ 
Color
áá 
color
áá 
=
áá  !
Color
áá" '
.
áá' (
grey
áá( ,
;
áá, -
float
ââ 
whiteSpaceAdvance
ââ +
=
ââ, -
Math
ââ. 2
.
ââ2 3
Abs
ââ3 6
(
ââ6 7
characterInfo
ââ7 D
.
ââD E
origin
ââE K
-
ââL M
characterInfo
ââN [
.
ââ[ \
xAdvance
ââ\ d
)
ââd e
>
ââf g
$num
ââh m
?
âân o
characterInfo
ââp }
.
ââ} ~
xAdvanceââ~ Ü
:ââá à
characterInfoâââ ñ
.ââñ ó
originââó ù
+ââû ü
(ââ† °
characterInfoââ° Æ
.ââÆ Ø
ascenderââØ ∑
-ââ∏ π
characterInfoââ∫ «
.ââ« »
	descenderââ» —
)ââ— “
*ââ” ‘
$numââ’ ⁄
;ââ⁄ €!
DrawDottedRectangle
ää '
(
ää' (
m_Transform
ää( 3
.
ää3 4
TransformPoint
ää4 B
(
ääB C
new
ääC F
Vector3
ääG N
(
ääN O
characterInfo
ääO \
.
ää\ ]
origin
ää] c
,
ääc d
characterInfo
ääe r
.
äär s
	descender
ääs |
,
ää| }
$num
ää~ 
)ää Ä
)ääÄ Å
,ääÅ Ç
m_TransformääÉ é
.ääé è
TransformPointääè ù
(ääù û
newääû °
Vector3ää¢ ©
(ää© ™!
whiteSpaceAdvanceää™ ª
,ääª º
characterInfoääΩ  
.ää  À
ascenderääÀ ”
,ää” ‘
$numää’ ÷
)ää÷ ◊
)ää◊ ÿ
,ääÿ Ÿ
colorää⁄ ﬂ
,ääﬂ ‡
$numää· ‚
)ää‚ „
;ää„ ‰
}
ãã 
float
çç 
origin
çç 
=
çç 
characterInfo
çç ,
.
çç, -
origin
çç- 3
;
çç3 4
float
éé 
advance
éé 
=
éé 
characterInfo
éé  -
.
éé- .
xAdvance
éé. 6
;
éé6 7
float
èè 

ascentline
èè  
=
èè! "
characterInfo
èè# 0
.
èè0 1
ascender
èè1 9
;
èè9 :
float
êê 
baseline
êê 
=
êê  
characterInfo
êê! .
.
êê. /
baseLine
êê/ 7
;
êê7 8
float
ëë 
descentline
ëë !
=
ëë" #
characterInfo
ëë$ 1
.
ëë1 2
	descender
ëë2 ;
;
ëë; <
Vector3
îî 
ascentlineStart
îî '
=
îî( )
m_Transform
îî* 5
.
îî5 6
TransformPoint
îî6 D
(
îîD E
new
îîE H
Vector3
îîI P
(
îîP Q
origin
îîQ W
,
îîW X

ascentline
îîY c
,
îîc d
$num
îîe f
)
îîf g
)
îîg h
;
îîh i
Vector3
ïï 
ascentlineEnd
ïï %
=
ïï& '
m_Transform
ïï( 3
.
ïï3 4
TransformPoint
ïï4 B
(
ïïB C
new
ïïC F
Vector3
ïïG N
(
ïïN O
advance
ïïO V
,
ïïV W

ascentline
ïïX b
,
ïïb c
$num
ïïd e
)
ïïe f
)
ïïf g
;
ïïg h
Handles
óó 
.
óó 
color
óó 
=
óó 
Color
óó  %
.
óó% &
cyan
óó& *
;
óó* +
Handles
òò 
.
òò 
DrawDottedLine
òò &
(
òò& '
ascentlineStart
òò' 6
,
òò6 7
ascentlineEnd
òò8 E
,
òòE F
dottedLineSize
òòG U
)
òòU V
;
òòV W
float
õõ 
capline
õõ 
=
õõ 
characterInfo
õõ  -
.
õõ- .
	fontAsset
õõ. 7
==
õõ8 :
null
õõ; ?
?
õõ@ A
$num
õõB C
:
õõD E
baseline
õõF N
+
õõO P
characterInfo
õõQ ^
.
õõ^ _
	fontAsset
õõ_ h
.
õõh i
faceInfo
õõi q
.
õõq r
capLine
õõr y
*
õõz {
characterInfoõõ| â
.õõâ ä
scaleõõä è
;õõè ê
Vector3
úú 
capHeightStart
úú &
=
úú' (
new
úú) ,
Vector3
úú- 4
(
úú4 5
topLeft
úú5 <
.
úú< =
x
úú= >
,
úú> ?
m_Transform
úú@ K
.
úúK L
TransformPoint
úúL Z
(
úúZ [
new
úú[ ^
Vector3
úú_ f
(
úúf g
$num
úúg h
,
úúh i
capline
úúj q
,
úúq r
$num
úús t
)
úút u
)
úúu v
.
úúv w
y
úúw x
,
úúx y
$num
úúz {
)
úú{ |
;
úú| }
Vector3
ùù 
capHeightEnd
ùù $
=
ùù% &
new
ùù' *
Vector3
ùù+ 2
(
ùù2 3
topRight
ùù3 ;
.
ùù; <
x
ùù< =
,
ùù= >
m_Transform
ùù? J
.
ùùJ K
TransformPoint
ùùK Y
(
ùùY Z
new
ùùZ ]
Vector3
ùù^ e
(
ùùe f
$num
ùùf g
,
ùùg h
capline
ùùi p
,
ùùp q
$num
ùùr s
)
ùùs t
)
ùùt u
.
ùùu v
y
ùùv w
,
ùùw x
$num
ùùy z
)
ùùz {
;
ùù{ |
float
üü 
meanline
üü 
=
üü  
characterInfo
üü! .
.
üü. /
	fontAsset
üü/ 8
==
üü9 ;
null
üü< @
?
üüA B
$num
üüC D
:
üüE F
baseline
üüG O
+
üüP Q
characterInfo
üüR _
.
üü_ `
	fontAsset
üü` i
.
üüi j
faceInfo
üüj r
.
üür s
meanLine
üüs {
*
üü| }
characterInfoüü~ ã
.üüã å
scaleüüå ë
;üüë í
Vector3
†† 
meanlineStart
†† %
=
††& '
new
††( +
Vector3
††, 3
(
††3 4
topLeft
††4 ;
.
††; <
x
††< =
,
††= >
m_Transform
††? J
.
††J K
TransformPoint
††K Y
(
††Y Z
new
††Z ]
Vector3
††^ e
(
††e f
$num
††f g
,
††g h
meanline
††i q
,
††q r
$num
††s t
)
††t u
)
††u v
.
††v w
y
††w x
,
††x y
$num
††z {
)
††{ |
;
††| }
Vector3
°° 
meanlineEnd
°° #
=
°°$ %
new
°°& )
Vector3
°°* 1
(
°°1 2
topRight
°°2 :
.
°°: ;
x
°°; <
,
°°< =
m_Transform
°°> I
.
°°I J
TransformPoint
°°J X
(
°°X Y
new
°°Y \
Vector3
°°] d
(
°°d e
$num
°°e f
,
°°f g
meanline
°°h p
,
°°p q
$num
°°r s
)
°°s t
)
°°t u
.
°°u v
y
°°v w
,
°°w x
$num
°°y z
)
°°z {
;
°°{ |
if
££ 
(
££ 
characterInfo
££ !
.
££! "
	isVisible
££" +
)
££+ ,
{
§§ 
Handles
¶¶ 
.
¶¶ 
color
¶¶ !
=
¶¶" #
Color
¶¶$ )
.
¶¶) *
cyan
¶¶* .
;
¶¶. /
Handles
ßß 
.
ßß 
DrawDottedLine
ßß *
(
ßß* +
capHeightStart
ßß+ 9
,
ßß9 :
capHeightEnd
ßß; G
,
ßßG H
dottedLineSize
ßßI W
)
ßßW X
;
ßßX Y
Handles
™™ 
.
™™ 
color
™™ !
=
™™" #
Color
™™$ )
.
™™) *
cyan
™™* .
;
™™. /
Handles
´´ 
.
´´ 
DrawDottedLine
´´ *
(
´´* +
meanlineStart
´´+ 8
,
´´8 9
meanlineEnd
´´: E
,
´´E F
dottedLineSize
´´G U
)
´´U V
;
´´V W
}
¨¨ 
Vector3
ØØ 
baselineStart
ØØ %
=
ØØ& '
m_Transform
ØØ( 3
.
ØØ3 4
TransformPoint
ØØ4 B
(
ØØB C
new
ØØC F
Vector3
ØØG N
(
ØØN O
origin
ØØO U
,
ØØU V
baseline
ØØW _
,
ØØ_ `
$num
ØØa b
)
ØØb c
)
ØØc d
;
ØØd e
Vector3
∞∞ 
baselineEnd
∞∞ #
=
∞∞$ %
m_Transform
∞∞& 1
.
∞∞1 2
TransformPoint
∞∞2 @
(
∞∞@ A
new
∞∞A D
Vector3
∞∞E L
(
∞∞L M
advance
∞∞M T
,
∞∞T U
baseline
∞∞V ^
,
∞∞^ _
$num
∞∞` a
)
∞∞a b
)
∞∞b c
;
∞∞c d
Handles
≤≤ 
.
≤≤ 
color
≤≤ 
=
≤≤ 
Color
≤≤  %
.
≤≤% &
cyan
≤≤& *
;
≤≤* +
Handles
≥≥ 
.
≥≥ 
DrawDottedLine
≥≥ &
(
≥≥& '
baselineStart
≥≥' 4
,
≥≥4 5
baselineEnd
≥≥6 A
,
≥≥A B
dottedLineSize
≥≥C Q
)
≥≥Q R
;
≥≥R S
Vector3
∂∂ 
descentlineStart
∂∂ (
=
∂∂) *
m_Transform
∂∂+ 6
.
∂∂6 7
TransformPoint
∂∂7 E
(
∂∂E F
new
∂∂F I
Vector3
∂∂J Q
(
∂∂Q R
origin
∂∂R X
,
∂∂X Y
descentline
∂∂Z e
,
∂∂e f
$num
∂∂g h
)
∂∂h i
)
∂∂i j
;
∂∂j k
Vector3
∑∑ 
descentlineEnd
∑∑ &
=
∑∑' (
m_Transform
∑∑) 4
.
∑∑4 5
TransformPoint
∑∑5 C
(
∑∑C D
new
∑∑D G
Vector3
∑∑H O
(
∑∑O P
advance
∑∑P W
,
∑∑W X
descentline
∑∑Y d
,
∑∑d e
$num
∑∑f g
)
∑∑g h
)
∑∑h i
;
∑∑i j
Handles
ππ 
.
ππ 
color
ππ 
=
ππ 
Color
ππ  %
.
ππ% &
cyan
ππ& *
;
ππ* +
Handles
∫∫ 
.
∫∫ 
DrawDottedLine
∫∫ &
(
∫∫& '
descentlineStart
∫∫' 7
,
∫∫7 8
descentlineEnd
∫∫9 G
,
∫∫G H
dottedLineSize
∫∫I W
)
∫∫W X
;
∫∫X Y
Vector3
ΩΩ 
originPosition
ΩΩ &
=
ΩΩ' (
m_Transform
ΩΩ) 4
.
ΩΩ4 5
TransformPoint
ΩΩ5 C
(
ΩΩC D
new
ΩΩD G
Vector3
ΩΩH O
(
ΩΩO P
origin
ΩΩP V
,
ΩΩV W
baseline
ΩΩX `
,
ΩΩ` a
$num
ΩΩb c
)
ΩΩc d
)
ΩΩd e
;
ΩΩe f
DrawCrosshair
ææ 
(
ææ 
originPosition
ææ ,
,
ææ, -
$num
ææ. 3
/
ææ4 5
m_ScaleMultiplier
ææ6 G
,
ææG H
Color
ææI N
.
ææN O
cyan
ææO S
)
ææS T
;
ææT U
Vector3
¡¡ 
advancePosition
¡¡ '
=
¡¡( )
m_Transform
¡¡* 5
.
¡¡5 6
TransformPoint
¡¡6 D
(
¡¡D E
new
¡¡E H
Vector3
¡¡I P
(
¡¡P Q
advance
¡¡Q X
,
¡¡X Y
baseline
¡¡Z b
,
¡¡b c
$num
¡¡d e
)
¡¡e f
)
¡¡f g
;
¡¡g h

DrawSquare
¬¬ 
(
¬¬ 
advancePosition
¬¬ *
,
¬¬* +
$num
¬¬, 2
/
¬¬3 4
m_ScaleMultiplier
¬¬5 F
,
¬¬F G
Color
¬¬H M
.
¬¬M N
yellow
¬¬N T
)
¬¬T U
;
¬¬U V
DrawCrosshair
√√ 
(
√√ 
advancePosition
√√ -
,
√√- .
$num
√√/ 6
/
√√7 8
m_ScaleMultiplier
√√9 J
,
√√J K
Color
√√L Q
.
√√Q R
yellow
√√R X
)
√√X Y
;
√√Y Z
if
∆∆ 
(
∆∆ 
m_HandleSize
∆∆ 
<
∆∆  !
$num
∆∆" &
)
∆∆& '
{
«« 
GUIStyle
»» 
style
»» !
=
»»" #
new
»»$ '
GUIStyle
»»( 0
(
»»0 1
GUI
»»1 4
.
»»4 5
skin
»»5 9
.
»»9 :
GetStyle
»»: B
(
»»B C
$str
»»C J
)
»»J K
)
»»K L
;
»»L M
style
…… 
.
…… 
normal
…… 
.
……  
	textColor
……  )
=
……* +
new
……, /
Color
……0 5
(
……5 6
$num
……6 :
,
……: ;
$num
……< @
,
……@ A
$num
……B F
,
……F G
$num
……H L
)
……L M
;
……M N
style
   
.
   
fontSize
   !
=
  " #
$num
  $ &
;
  & '
style
ÀÀ 
.
ÀÀ 

fixedWidth
ÀÀ #
=
ÀÀ$ %
$num
ÀÀ& )
;
ÀÀ) *
style
ÃÃ 
.
ÃÃ 
fixedHeight
ÃÃ $
=
ÃÃ% &
$num
ÃÃ' )
;
ÃÃ) *
Vector3
ŒŒ 
labelPosition
ŒŒ (
;
ŒŒ( )
float
œœ 
center
œœ 
=
œœ  !
(
œœ" #
origin
œœ# )
+
œœ* +
advance
œœ, 3
)
œœ3 4
/
œœ5 6
$num
œœ7 8
;
œœ8 9
labelPosition
ÿÿ  
=
ÿÿ! "
m_Transform
ÿÿ# .
.
ÿÿ. /
TransformPoint
ÿÿ/ =
(
ÿÿ= >
new
ÿÿ> A
Vector3
ÿÿB I
(
ÿÿI J
center
ÿÿJ P
,
ÿÿP Q

ascentline
ÿÿR \
,
ÿÿ\ ]
$num
ÿÿ^ _
)
ÿÿ_ `
)
ÿÿ` a
;
ÿÿa b
style
ŸŸ 
.
ŸŸ 
	alignment
ŸŸ "
=
ŸŸ# $

TextAnchor
ŸŸ% /
.
ŸŸ/ 0
UpperCenter
ŸŸ0 ;
;
ŸŸ; <
Handles
⁄⁄ 
.
⁄⁄ 
Label
⁄⁄  
(
⁄⁄  !
labelPosition
⁄⁄! .
,
⁄⁄. /
$str
⁄⁄0 =
,
⁄⁄= >
style
⁄⁄? D
)
⁄⁄D E
;
⁄⁄E F
labelPosition
ﬁﬁ  
=
ﬁﬁ! "
m_Transform
ﬁﬁ# .
.
ﬁﬁ. /
TransformPoint
ﬁﬁ/ =
(
ﬁﬁ= >
new
ﬁﬁ> A
Vector3
ﬁﬁB I
(
ﬁﬁI J
center
ﬁﬁJ P
,
ﬁﬁP Q
baseline
ﬁﬁR Z
,
ﬁﬁZ [
$num
ﬁﬁ\ ]
)
ﬁﬁ] ^
)
ﬁﬁ^ _
;
ﬁﬁ_ `
Handles
ﬂﬂ 
.
ﬂﬂ 
Label
ﬂﬂ  
(
ﬂﬂ  !
labelPosition
ﬂﬂ! .
,
ﬂﬂ. /
$str
ﬂﬂ0 ;
,
ﬂﬂ; <
style
ﬂﬂ= B
)
ﬂﬂB C
;
ﬂﬂC D
labelPosition
„„  
=
„„! "
m_Transform
„„# .
.
„„. /
TransformPoint
„„/ =
(
„„= >
new
„„> A
Vector3
„„B I
(
„„I J
center
„„J P
,
„„P Q
descentline
„„R ]
,
„„] ^
$num
„„_ `
)
„„` a
)
„„a b
;
„„b c
Handles
‰‰ 
.
‰‰ 
Label
‰‰  
(
‰‰  !
labelPosition
‰‰! .
,
‰‰. /
$str
‰‰0 >
,
‰‰> ?
style
‰‰@ E
)
‰‰E F
;
‰‰F G
if
ÁÁ 
(
ÁÁ 
characterInfo
ÁÁ $
.
ÁÁ$ %
	isVisible
ÁÁ% .
)
ÁÁ. /
{
ËË 
labelPosition
ÍÍ $
=
ÍÍ% &
m_Transform
ÍÍ' 2
.
ÍÍ2 3
TransformPoint
ÍÍ3 A
(
ÍÍA B
new
ÍÍB E
Vector3
ÍÍF M
(
ÍÍM N
center
ÍÍN T
,
ÍÍT U
capline
ÍÍV ]
,
ÍÍ] ^
$num
ÍÍ_ `
)
ÍÍ` a
)
ÍÍa b
;
ÍÍb c
style
ÎÎ 
.
ÎÎ 
	alignment
ÎÎ &
=
ÎÎ' (

TextAnchor
ÎÎ) 3
.
ÎÎ3 4
UpperCenter
ÎÎ4 ?
;
ÎÎ? @
Handles
ÏÏ 
.
ÏÏ 
Label
ÏÏ $
(
ÏÏ$ %
labelPosition
ÏÏ% 2
,
ÏÏ2 3
$str
ÏÏ4 >
,
ÏÏ> ?
style
ÏÏ@ E
)
ÏÏE F
;
ÏÏF G
labelPosition
 $
=
% &
m_Transform
' 2
.
2 3
TransformPoint
3 A
(
A B
new
B E
Vector3
F M
(
M N
center
N T
,
T U
meanline
V ^
,
^ _
$num
` a
)
a b
)
b c
;
c d
style
ÒÒ 
.
ÒÒ 
	alignment
ÒÒ &
=
ÒÒ' (

TextAnchor
ÒÒ) 3
.
ÒÒ3 4
UpperCenter
ÒÒ4 ?
;
ÒÒ? @
Handles
ÚÚ 
.
ÚÚ 
Label
ÚÚ $
(
ÚÚ$ %
labelPosition
ÚÚ% 2
,
ÚÚ2 3
$str
ÚÚ4 ?
,
ÚÚ? @
style
ÚÚA F
)
ÚÚF G
;
ÚÚG H
labelPosition
ˆˆ $
=
ˆˆ% &
m_Transform
ˆˆ' 2
.
ˆˆ2 3
TransformPoint
ˆˆ3 A
(
ˆˆA B
new
ˆˆB E
Vector3
ˆˆF M
(
ˆˆM N
origin
ˆˆN T
,
ˆˆT U
baseline
ˆˆV ^
,
ˆˆ^ _
$num
ˆˆ` a
)
ˆˆa b
)
ˆˆb c
;
ˆˆc d
style
˜˜ 
.
˜˜ 
	alignment
˜˜ &
=
˜˜' (

TextAnchor
˜˜) 3
.
˜˜3 4

UpperRight
˜˜4 >
;
˜˜> ?
Handles
¯¯ 
.
¯¯ 
Label
¯¯ $
(
¯¯$ %
labelPosition
¯¯% 2
,
¯¯2 3
$str
¯¯4 =
,
¯¯= >
style
¯¯? D
)
¯¯D E
;
¯¯E F
labelPosition
˚˚ $
=
˚˚% &
m_Transform
˚˚' 2
.
˚˚2 3
TransformPoint
˚˚3 A
(
˚˚A B
new
˚˚B E
Vector3
˚˚F M
(
˚˚M N
advance
˚˚N U
,
˚˚U V
baseline
˚˚W _
,
˚˚_ `
$num
˚˚a b
)
˚˚b c
)
˚˚c d
;
˚˚d e
style
¸¸ 
.
¸¸ 
	alignment
¸¸ &
=
¸¸' (

TextAnchor
¸¸) 3
.
¸¸3 4
	UpperLeft
¸¸4 =
;
¸¸= >
Handles
˝˝ 
.
˝˝ 
Label
˝˝ $
(
˝˝$ %
labelPosition
˝˝% 2
,
˝˝2 3
$str
˝˝4 ?
,
˝˝? @
style
˝˝A F
)
˝˝F G
;
˝˝G H
}
˛˛ 
}
ˇˇ 
}
ÄÄ 
}
ÅÅ 	
void
àà 
DrawWordBounds
àà 
(
àà 
)
àà 
{
ââ 	
for
ää 
(
ää 
int
ää 
i
ää 
=
ää 
$num
ää 
;
ää 
i
ää 
<
ää 

m_TextInfo
ää  *
.
ää* +
	wordCount
ää+ 4
;
ää4 5
i
ää6 7
++
ää7 9
)
ää9 :
{
ãã 
TMP_WordInfo
åå 
wInfo
åå "
=
åå# $

m_TextInfo
åå% /
.
åå/ 0
wordInfo
åå0 8
[
åå8 9
i
åå9 :
]
åå: ;
;
åå; <
bool
éé 
isBeginRegion
éé "
=
éé# $
false
éé% *
;
éé* +
Vector3
êê 

bottomLeft
êê "
=
êê# $
Vector3
êê% ,
.
êê, -
zero
êê- 1
;
êê1 2
Vector3
ëë 
topLeft
ëë 
=
ëë  !
Vector3
ëë" )
.
ëë) *
zero
ëë* .
;
ëë. /
Vector3
íí 
bottomRight
íí #
=
íí$ %
Vector3
íí& -
.
íí- .
zero
íí. 2
;
íí2 3
Vector3
ìì 
topRight
ìì  
=
ìì! "
Vector3
ìì# *
.
ìì* +
zero
ìì+ /
;
ìì/ 0
float
ïï 
maxAscender
ïï !
=
ïï" #
-
ïï$ %
Mathf
ïï% *
.
ïï* +
Infinity
ïï+ 3
;
ïï3 4
float
ññ 
minDescender
ññ "
=
ññ# $
Mathf
ññ% *
.
ññ* +
Infinity
ññ+ 3
;
ññ3 4
Color
òò 
	wordColor
òò 
=
òò  !
Color
òò" '
.
òò' (
green
òò( -
;
òò- .
for
õõ 
(
õõ 
int
õõ 
j
õõ 
=
õõ 
$num
õõ 
;
õõ 
j
õõ  !
<
õõ" #
wInfo
õõ$ )
.
õõ) *
characterCount
õõ* 8
;
õõ8 9
j
õõ: ;
++
õõ; =
)
õõ= >
{
úú 
int
ùù 
characterIndex
ùù &
=
ùù' (
wInfo
ùù) .
.
ùù. /!
firstCharacterIndex
ùù/ B
+
ùùC D
j
ùùE F
;
ùùF G
TMP_CharacterInfo
ûû %
currentCharInfo
ûû& 5
=
ûû6 7

m_TextInfo
ûû8 B
.
ûûB C
characterInfo
ûûC P
[
ûûP Q
characterIndex
ûûQ _
]
ûû_ `
;
ûû` a
int
üü 
currentLine
üü #
=
üü$ %
currentCharInfo
üü& 5
.
üü5 6

lineNumber
üü6 @
;
üü@ A
bool
°°  
isCharacterVisible
°° +
=
°°, -
characterIndex
°°. <
>
°°= >
m_TextComponent
°°? N
.
°°N O"
maxVisibleCharacters
°°O c
||
°°d f
currentCharInfo
¢¢. =
.
¢¢= >

lineNumber
¢¢> H
>
¢¢I J
m_TextComponent
¢¢K Z
.
¢¢Z [
maxVisibleLines
¢¢[ j
||
¢¢k m
(
££- .
m_TextComponent
££. =
.
££= >
overflowMode
££> J
==
££K M
TextOverflowModes
££N _
.
££_ `
Page
££` d
&&
££e g
currentCharInfo
££h w
.
££w x

pageNumber££x Ç
+££É Ñ
$num££Ö Ü
!=££á â
m_TextComponent££ä ô
.££ô ö
pageToDisplay££ö ß
)££ß ®
?££© ™
false££´ ∞
:££± ≤
true££≥ ∑
;££∑ ∏
maxAscender
¶¶ 
=
¶¶  !
Mathf
¶¶" '
.
¶¶' (
Max
¶¶( +
(
¶¶+ ,
maxAscender
¶¶, 7
,
¶¶7 8
currentCharInfo
¶¶9 H
.
¶¶H I
ascender
¶¶I Q
)
¶¶Q R
;
¶¶R S
minDescender
ßß  
=
ßß! "
Mathf
ßß# (
.
ßß( )
Min
ßß) ,
(
ßß, -
minDescender
ßß- 9
,
ßß9 :
currentCharInfo
ßß; J
.
ßßJ K
	descender
ßßK T
)
ßßT U
;
ßßU V
if
©© 
(
©© 
isBeginRegion
©© %
==
©©& (
false
©©) .
&&
©©/ 1 
isCharacterVisible
©©2 D
)
©©D E
{
™™ 
isBeginRegion
´´ %
=
´´& '
true
´´( ,
;
´´, -

bottomLeft
≠≠ "
=
≠≠# $
new
≠≠% (
Vector3
≠≠) 0
(
≠≠0 1
currentCharInfo
≠≠1 @
.
≠≠@ A

bottomLeft
≠≠A K
.
≠≠K L
x
≠≠L M
,
≠≠M N
currentCharInfo
≠≠O ^
.
≠≠^ _
	descender
≠≠_ h
,
≠≠h i
$num
≠≠j k
)
≠≠k l
;
≠≠l m
topLeft
ÆÆ 
=
ÆÆ  !
new
ÆÆ" %
Vector3
ÆÆ& -
(
ÆÆ- .
currentCharInfo
ÆÆ. =
.
ÆÆ= >

bottomLeft
ÆÆ> H
.
ÆÆH I
x
ÆÆI J
,
ÆÆJ K
currentCharInfo
ÆÆL [
.
ÆÆ[ \
ascender
ÆÆ\ d
,
ÆÆd e
$num
ÆÆf g
)
ÆÆg h
;
ÆÆh i
if
≥≥ 
(
≥≥ 
wInfo
≥≥ !
.
≥≥! "
characterCount
≥≥" 0
==
≥≥1 3
$num
≥≥4 5
)
≥≥5 6
{
¥¥ 
isBeginRegion
µµ )
=
µµ* +
false
µµ, 1
;
µµ1 2
topLeft
∑∑ #
=
∑∑$ %
m_Transform
∑∑& 1
.
∑∑1 2
TransformPoint
∑∑2 @
(
∑∑@ A
new
∑∑A D
Vector3
∑∑E L
(
∑∑L M
topLeft
∑∑M T
.
∑∑T U
x
∑∑U V
,
∑∑V W
maxAscender
∑∑X c
,
∑∑c d
$num
∑∑e f
)
∑∑f g
)
∑∑g h
;
∑∑h i

bottomLeft
∏∏ &
=
∏∏' (
m_Transform
∏∏) 4
.
∏∏4 5
TransformPoint
∏∏5 C
(
∏∏C D
new
∏∏D G
Vector3
∏∏H O
(
∏∏O P

bottomLeft
∏∏P Z
.
∏∏Z [
x
∏∏[ \
,
∏∏\ ]
minDescender
∏∏^ j
,
∏∏j k
$num
∏∏l m
)
∏∏m n
)
∏∏n o
;
∏∏o p
bottomRight
ππ '
=
ππ( )
m_Transform
ππ* 5
.
ππ5 6
TransformPoint
ππ6 D
(
ππD E
new
ππE H
Vector3
ππI P
(
ππP Q
currentCharInfo
ππQ `
.
ππ` a
topRight
ππa i
.
ππi j
x
ππj k
,
ππk l
minDescender
ππm y
,
ππy z
$num
ππ{ |
)
ππ| }
)
ππ} ~
;
ππ~ 
topRight
∫∫ $
=
∫∫% &
m_Transform
∫∫' 2
.
∫∫2 3
TransformPoint
∫∫3 A
(
∫∫A B
new
∫∫B E
Vector3
∫∫F M
(
∫∫M N
currentCharInfo
∫∫N ]
.
∫∫] ^
topRight
∫∫^ f
.
∫∫f g
x
∫∫g h
,
∫∫h i
maxAscender
∫∫j u
,
∫∫u v
$num
∫∫w x
)
∫∫x y
)
∫∫y z
;
∫∫z {
DrawRectangle
ΩΩ )
(
ΩΩ) *

bottomLeft
ΩΩ* 4
,
ΩΩ4 5
topLeft
ΩΩ6 =
,
ΩΩ= >
topRight
ΩΩ? G
,
ΩΩG H
bottomRight
ΩΩI T
,
ΩΩT U
	wordColor
ΩΩV _
)
ΩΩ_ `
;
ΩΩ` a
}
¿¿ 
}
¡¡ 
if
ƒƒ 
(
ƒƒ 
isBeginRegion
ƒƒ %
&&
ƒƒ& (
j
ƒƒ) *
==
ƒƒ+ -
wInfo
ƒƒ. 3
.
ƒƒ3 4
characterCount
ƒƒ4 B
-
ƒƒC D
$num
ƒƒE F
)
ƒƒF G
{
≈≈ 
isBeginRegion
∆∆ %
=
∆∆& '
false
∆∆( -
;
∆∆- .
topLeft
»» 
=
»»  !
m_Transform
»»" -
.
»»- .
TransformPoint
»». <
(
»»< =
new
»»= @
Vector3
»»A H
(
»»H I
topLeft
»»I P
.
»»P Q
x
»»Q R
,
»»R S
maxAscender
»»T _
,
»»_ `
$num
»»a b
)
»»b c
)
»»c d
;
»»d e

bottomLeft
…… "
=
……# $
m_Transform
……% 0
.
……0 1
TransformPoint
……1 ?
(
……? @
new
……@ C
Vector3
……D K
(
……K L

bottomLeft
……L V
.
……V W
x
……W X
,
……X Y
minDescender
……Z f
,
……f g
$num
……h i
)
……i j
)
……j k
;
……k l
bottomRight
   #
=
  $ %
m_Transform
  & 1
.
  1 2
TransformPoint
  2 @
(
  @ A
new
  A D
Vector3
  E L
(
  L M
currentCharInfo
  M \
.
  \ ]
topRight
  ] e
.
  e f
x
  f g
,
  g h
minDescender
  i u
,
  u v
$num
  w x
)
  x y
)
  y z
;
  z {
topRight
ÀÀ  
=
ÀÀ! "
m_Transform
ÀÀ# .
.
ÀÀ. /
TransformPoint
ÀÀ/ =
(
ÀÀ= >
new
ÀÀ> A
Vector3
ÀÀB I
(
ÀÀI J
currentCharInfo
ÀÀJ Y
.
ÀÀY Z
topRight
ÀÀZ b
.
ÀÀb c
x
ÀÀc d
,
ÀÀd e
maxAscender
ÀÀf q
,
ÀÀq r
$num
ÀÀs t
)
ÀÀt u
)
ÀÀu v
;
ÀÀv w
DrawRectangle
ŒŒ %
(
ŒŒ% &

bottomLeft
ŒŒ& 0
,
ŒŒ0 1
topLeft
ŒŒ2 9
,
ŒŒ9 :
topRight
ŒŒ; C
,
ŒŒC D
bottomRight
ŒŒE P
,
ŒŒP Q
	wordColor
ŒŒR [
)
ŒŒ[ \
;
ŒŒ\ ]
}
—— 
else
”” 
if
”” 
(
”” 
isBeginRegion
”” *
&&
””+ -
currentLine
””. 9
!=
””: <

m_TextInfo
””= G
.
””G H
characterInfo
””H U
[
””U V
characterIndex
””V d
+
””e f
$num
””g h
]
””h i
.
””i j

lineNumber
””j t
)
””t u
{
‘‘ 
isBeginRegion
’’ %
=
’’& '
false
’’( -
;
’’- .
topLeft
◊◊ 
=
◊◊  !
m_Transform
◊◊" -
.
◊◊- .
TransformPoint
◊◊. <
(
◊◊< =
new
◊◊= @
Vector3
◊◊A H
(
◊◊H I
topLeft
◊◊I P
.
◊◊P Q
x
◊◊Q R
,
◊◊R S
maxAscender
◊◊T _
,
◊◊_ `
$num
◊◊a b
)
◊◊b c
)
◊◊c d
;
◊◊d e

bottomLeft
ÿÿ "
=
ÿÿ# $
m_Transform
ÿÿ% 0
.
ÿÿ0 1
TransformPoint
ÿÿ1 ?
(
ÿÿ? @
new
ÿÿ@ C
Vector3
ÿÿD K
(
ÿÿK L

bottomLeft
ÿÿL V
.
ÿÿV W
x
ÿÿW X
,
ÿÿX Y
minDescender
ÿÿZ f
,
ÿÿf g
$num
ÿÿh i
)
ÿÿi j
)
ÿÿj k
;
ÿÿk l
bottomRight
ŸŸ #
=
ŸŸ$ %
m_Transform
ŸŸ& 1
.
ŸŸ1 2
TransformPoint
ŸŸ2 @
(
ŸŸ@ A
new
ŸŸA D
Vector3
ŸŸE L
(
ŸŸL M
currentCharInfo
ŸŸM \
.
ŸŸ\ ]
topRight
ŸŸ] e
.
ŸŸe f
x
ŸŸf g
,
ŸŸg h
minDescender
ŸŸi u
,
ŸŸu v
$num
ŸŸw x
)
ŸŸx y
)
ŸŸy z
;
ŸŸz {
topRight
⁄⁄  
=
⁄⁄! "
m_Transform
⁄⁄# .
.
⁄⁄. /
TransformPoint
⁄⁄/ =
(
⁄⁄= >
new
⁄⁄> A
Vector3
⁄⁄B I
(
⁄⁄I J
currentCharInfo
⁄⁄J Y
.
⁄⁄Y Z
topRight
⁄⁄Z b
.
⁄⁄b c
x
⁄⁄c d
,
⁄⁄d e
maxAscender
⁄⁄f q
,
⁄⁄q r
$num
⁄⁄s t
)
⁄⁄t u
)
⁄⁄u v
;
⁄⁄v w
DrawRectangle
›› %
(
››% &

bottomLeft
››& 0
,
››0 1
topLeft
››2 9
,
››9 :
topRight
››; C
,
››C D
bottomRight
››E P
,
››P Q
	wordColor
››R [
)
››[ \
;
››\ ]
maxAscender
ﬂﬂ #
=
ﬂﬂ$ %
-
ﬂﬂ& '
Mathf
ﬂﬂ' ,
.
ﬂﬂ, -
Infinity
ﬂﬂ- 5
;
ﬂﬂ5 6
minDescender
‡‡ $
=
‡‡% &
Mathf
‡‡' ,
.
‡‡, -
Infinity
‡‡- 5
;
‡‡5 6
}
‚‚ 
}
„„ 
}
ÊÊ 
}
ÈÈ 	
void
 
DrawLinkBounds
 
(
 
)
 
{
ÒÒ 	
TMP_TextInfo
ÚÚ 
textInfo
ÚÚ !
=
ÚÚ" #
m_TextComponent
ÚÚ$ 3
.
ÚÚ3 4
textInfo
ÚÚ4 <
;
ÚÚ< =
for
ÙÙ 
(
ÙÙ 
int
ÙÙ 
i
ÙÙ 
=
ÙÙ 
$num
ÙÙ 
;
ÙÙ 
i
ÙÙ 
<
ÙÙ 
textInfo
ÙÙ  (
.
ÙÙ( )
	linkCount
ÙÙ) 2
;
ÙÙ2 3
i
ÙÙ4 5
++
ÙÙ5 7
)
ÙÙ7 8
{
ıı 
TMP_LinkInfo
ˆˆ 
linkInfo
ˆˆ %
=
ˆˆ& '
textInfo
ˆˆ( 0
.
ˆˆ0 1
linkInfo
ˆˆ1 9
[
ˆˆ9 :
i
ˆˆ: ;
]
ˆˆ; <
;
ˆˆ< =
bool
¯¯ 
isBeginRegion
¯¯ "
=
¯¯# $
false
¯¯% *
;
¯¯* +
Vector3
˙˙ 

bottomLeft
˙˙ "
=
˙˙# $
Vector3
˙˙% ,
.
˙˙, -
zero
˙˙- 1
;
˙˙1 2
Vector3
˚˚ 
topLeft
˚˚ 
=
˚˚  !
Vector3
˚˚" )
.
˚˚) *
zero
˚˚* .
;
˚˚. /
Vector3
¸¸ 
bottomRight
¸¸ #
=
¸¸$ %
Vector3
¸¸& -
.
¸¸- .
zero
¸¸. 2
;
¸¸2 3
Vector3
˝˝ 
topRight
˝˝  
=
˝˝! "
Vector3
˝˝# *
.
˝˝* +
zero
˝˝+ /
;
˝˝/ 0
float
ˇˇ 
maxAscender
ˇˇ !
=
ˇˇ" #
-
ˇˇ$ %
Mathf
ˇˇ% *
.
ˇˇ* +
Infinity
ˇˇ+ 3
;
ˇˇ3 4
float
ÄÄ 
minDescender
ÄÄ "
=
ÄÄ# $
Mathf
ÄÄ% *
.
ÄÄ* +
Infinity
ÄÄ+ 3
;
ÄÄ3 4
Color32
ÇÇ 
	linkColor
ÇÇ !
=
ÇÇ" #
Color
ÇÇ$ )
.
ÇÇ) *
cyan
ÇÇ* .
;
ÇÇ. /
for
ÖÖ 
(
ÖÖ 
int
ÖÖ 
j
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
j
ÖÖ  !
<
ÖÖ" #
linkInfo
ÖÖ$ ,
.
ÖÖ, -
linkTextLength
ÖÖ- ;
;
ÖÖ; <
j
ÖÖ= >
++
ÖÖ> @
)
ÖÖ@ A
{
ÜÜ 
int
áá 
characterIndex
áá &
=
áá' (
linkInfo
áá) 1
.
áá1 2)
linkTextfirstCharacterIndex
áá2 M
+
ááN O
j
ááP Q
;
ááQ R
TMP_CharacterInfo
àà %
currentCharInfo
àà& 5
=
àà6 7
textInfo
àà8 @
.
àà@ A
characterInfo
ààA N
[
ààN O
characterIndex
ààO ]
]
àà] ^
;
àà^ _
int
ââ 
currentLine
ââ #
=
ââ$ %
currentCharInfo
ââ& 5
.
ââ5 6

lineNumber
ââ6 @
;
ââ@ A
bool
ãã  
isCharacterVisible
ãã +
=
ãã, -
characterIndex
ãã. <
>
ãã= >
m_TextComponent
ãã? N
.
ããN O"
maxVisibleCharacters
ããO c
||
ããd f
currentCharInfo
åå. =
.
åå= >

lineNumber
åå> H
>
ååI J
m_TextComponent
ååK Z
.
ååZ [
maxVisibleLines
åå[ j
||
ååk m
(
çç- .
m_TextComponent
çç. =
.
çç= >
overflowMode
çç> J
==
ççK M
TextOverflowModes
ççN _
.
çç_ `
Page
çç` d
&&
ççe g
currentCharInfo
ççh w
.
ççw x

pageNumberççx Ç
+ççÉ Ñ
$numççÖ Ü
!=ççá â
m_TextComponentççä ô
.ççô ö
pageToDisplayççö ß
)ççß ®
?çç© ™
falseçç´ ∞
:çç± ≤
trueçç≥ ∑
;çç∑ ∏
maxAscender
êê 
=
êê  !
Mathf
êê" '
.
êê' (
Max
êê( +
(
êê+ ,
maxAscender
êê, 7
,
êê7 8
currentCharInfo
êê9 H
.
êêH I
ascender
êêI Q
)
êêQ R
;
êêR S
minDescender
ëë  
=
ëë! "
Mathf
ëë# (
.
ëë( )
Min
ëë) ,
(
ëë, -
minDescender
ëë- 9
,
ëë9 :
currentCharInfo
ëë; J
.
ëëJ K
	descender
ëëK T
)
ëëT U
;
ëëU V
if
ìì 
(
ìì 
isBeginRegion
ìì %
==
ìì& (
false
ìì) .
&&
ìì/ 1 
isCharacterVisible
ìì2 D
)
ììD E
{
îî 
isBeginRegion
ïï %
=
ïï& '
true
ïï( ,
;
ïï, -

bottomLeft
óó "
=
óó# $
new
óó% (
Vector3
óó) 0
(
óó0 1
currentCharInfo
óó1 @
.
óó@ A

bottomLeft
óóA K
.
óóK L
x
óóL M
,
óóM N
currentCharInfo
óóO ^
.
óó^ _
	descender
óó_ h
,
óóh i
$num
óój k
)
óók l
;
óól m
topLeft
òò 
=
òò  !
new
òò" %
Vector3
òò& -
(
òò- .
currentCharInfo
òò. =
.
òò= >

bottomLeft
òò> H
.
òòH I
x
òòI J
,
òòJ K
currentCharInfo
òòL [
.
òò[ \
ascender
òò\ d
,
òòd e
$num
òòf g
)
òòg h
;
òòh i
if
ùù 
(
ùù 
linkInfo
ùù $
.
ùù$ %
linkTextLength
ùù% 3
==
ùù4 6
$num
ùù7 8
)
ùù8 9
{
ûû 
isBeginRegion
üü )
=
üü* +
false
üü, 1
;
üü1 2
topLeft
°° #
=
°°$ %
m_Transform
°°& 1
.
°°1 2
TransformPoint
°°2 @
(
°°@ A
new
°°A D
Vector3
°°E L
(
°°L M
topLeft
°°M T
.
°°T U
x
°°U V
,
°°V W
maxAscender
°°X c
,
°°c d
$num
°°e f
)
°°f g
)
°°g h
;
°°h i

bottomLeft
¢¢ &
=
¢¢' (
m_Transform
¢¢) 4
.
¢¢4 5
TransformPoint
¢¢5 C
(
¢¢C D
new
¢¢D G
Vector3
¢¢H O
(
¢¢O P

bottomLeft
¢¢P Z
.
¢¢Z [
x
¢¢[ \
,
¢¢\ ]
minDescender
¢¢^ j
,
¢¢j k
$num
¢¢l m
)
¢¢m n
)
¢¢n o
;
¢¢o p
bottomRight
££ '
=
££( )
m_Transform
££* 5
.
££5 6
TransformPoint
££6 D
(
££D E
new
££E H
Vector3
££I P
(
££P Q
currentCharInfo
££Q `
.
££` a
topRight
££a i
.
££i j
x
££j k
,
££k l
minDescender
££m y
,
££y z
$num
££{ |
)
££| }
)
££} ~
;
££~ 
topRight
§§ $
=
§§% &
m_Transform
§§' 2
.
§§2 3
TransformPoint
§§3 A
(
§§A B
new
§§B E
Vector3
§§F M
(
§§M N
currentCharInfo
§§N ]
.
§§] ^
topRight
§§^ f
.
§§f g
x
§§g h
,
§§h i
maxAscender
§§j u
,
§§u v
$num
§§w x
)
§§x y
)
§§y z
;
§§z {
DrawRectangle
ßß )
(
ßß) *

bottomLeft
ßß* 4
,
ßß4 5
topLeft
ßß6 =
,
ßß= >
topRight
ßß? G
,
ßßG H
bottomRight
ßßI T
,
ßßT U
	linkColor
ßßV _
)
ßß_ `
;
ßß` a
}
™™ 
}
´´ 
if
ÆÆ 
(
ÆÆ 
isBeginRegion
ÆÆ %
&&
ÆÆ& (
j
ÆÆ) *
==
ÆÆ+ -
linkInfo
ÆÆ. 6
.
ÆÆ6 7
linkTextLength
ÆÆ7 E
-
ÆÆF G
$num
ÆÆH I
)
ÆÆI J
{
ØØ 
isBeginRegion
∞∞ %
=
∞∞& '
false
∞∞( -
;
∞∞- .
topLeft
≤≤ 
=
≤≤  !
m_Transform
≤≤" -
.
≤≤- .
TransformPoint
≤≤. <
(
≤≤< =
new
≤≤= @
Vector3
≤≤A H
(
≤≤H I
topLeft
≤≤I P
.
≤≤P Q
x
≤≤Q R
,
≤≤R S
maxAscender
≤≤T _
,
≤≤_ `
$num
≤≤a b
)
≤≤b c
)
≤≤c d
;
≤≤d e

bottomLeft
≥≥ "
=
≥≥# $
m_Transform
≥≥% 0
.
≥≥0 1
TransformPoint
≥≥1 ?
(
≥≥? @
new
≥≥@ C
Vector3
≥≥D K
(
≥≥K L

bottomLeft
≥≥L V
.
≥≥V W
x
≥≥W X
,
≥≥X Y
minDescender
≥≥Z f
,
≥≥f g
$num
≥≥h i
)
≥≥i j
)
≥≥j k
;
≥≥k l
bottomRight
¥¥ #
=
¥¥$ %
m_Transform
¥¥& 1
.
¥¥1 2
TransformPoint
¥¥2 @
(
¥¥@ A
new
¥¥A D
Vector3
¥¥E L
(
¥¥L M
currentCharInfo
¥¥M \
.
¥¥\ ]
topRight
¥¥] e
.
¥¥e f
x
¥¥f g
,
¥¥g h
minDescender
¥¥i u
,
¥¥u v
$num
¥¥w x
)
¥¥x y
)
¥¥y z
;
¥¥z {
topRight
µµ  
=
µµ! "
m_Transform
µµ# .
.
µµ. /
TransformPoint
µµ/ =
(
µµ= >
new
µµ> A
Vector3
µµB I
(
µµI J
currentCharInfo
µµJ Y
.
µµY Z
topRight
µµZ b
.
µµb c
x
µµc d
,
µµd e
maxAscender
µµf q
,
µµq r
$num
µµs t
)
µµt u
)
µµu v
;
µµv w
DrawRectangle
∏∏ %
(
∏∏% &

bottomLeft
∏∏& 0
,
∏∏0 1
topLeft
∏∏2 9
,
∏∏9 :
topRight
∏∏; C
,
∏∏C D
bottomRight
∏∏E P
,
∏∏P Q
	linkColor
∏∏R [
)
∏∏[ \
;
∏∏\ ]
}
ªª 
else
ΩΩ 
if
ΩΩ 
(
ΩΩ 
isBeginRegion
ΩΩ *
&&
ΩΩ+ -
currentLine
ΩΩ. 9
!=
ΩΩ: <
textInfo
ΩΩ= E
.
ΩΩE F
characterInfo
ΩΩF S
[
ΩΩS T
characterIndex
ΩΩT b
+
ΩΩc d
$num
ΩΩe f
]
ΩΩf g
.
ΩΩg h

lineNumber
ΩΩh r
)
ΩΩr s
{
ææ 
isBeginRegion
øø %
=
øø& '
false
øø( -
;
øø- .
topLeft
¡¡ 
=
¡¡  !
m_Transform
¡¡" -
.
¡¡- .
TransformPoint
¡¡. <
(
¡¡< =
new
¡¡= @
Vector3
¡¡A H
(
¡¡H I
topLeft
¡¡I P
.
¡¡P Q
x
¡¡Q R
,
¡¡R S
maxAscender
¡¡T _
,
¡¡_ `
$num
¡¡a b
)
¡¡b c
)
¡¡c d
;
¡¡d e

bottomLeft
¬¬ "
=
¬¬# $
m_Transform
¬¬% 0
.
¬¬0 1
TransformPoint
¬¬1 ?
(
¬¬? @
new
¬¬@ C
Vector3
¬¬D K
(
¬¬K L

bottomLeft
¬¬L V
.
¬¬V W
x
¬¬W X
,
¬¬X Y
minDescender
¬¬Z f
,
¬¬f g
$num
¬¬h i
)
¬¬i j
)
¬¬j k
;
¬¬k l
bottomRight
√√ #
=
√√$ %
m_Transform
√√& 1
.
√√1 2
TransformPoint
√√2 @
(
√√@ A
new
√√A D
Vector3
√√E L
(
√√L M
currentCharInfo
√√M \
.
√√\ ]
topRight
√√] e
.
√√e f
x
√√f g
,
√√g h
minDescender
√√i u
,
√√u v
$num
√√w x
)
√√x y
)
√√y z
;
√√z {
topRight
ƒƒ  
=
ƒƒ! "
m_Transform
ƒƒ# .
.
ƒƒ. /
TransformPoint
ƒƒ/ =
(
ƒƒ= >
new
ƒƒ> A
Vector3
ƒƒB I
(
ƒƒI J
currentCharInfo
ƒƒJ Y
.
ƒƒY Z
topRight
ƒƒZ b
.
ƒƒb c
x
ƒƒc d
,
ƒƒd e
maxAscender
ƒƒf q
,
ƒƒq r
$num
ƒƒs t
)
ƒƒt u
)
ƒƒu v
;
ƒƒv w
DrawRectangle
«« %
(
««% &

bottomLeft
««& 0
,
««0 1
topLeft
««2 9
,
««9 :
topRight
««; C
,
««C D
bottomRight
««E P
,
««P Q
	linkColor
««R [
)
««[ \
;
««\ ]
maxAscender
…… #
=
……$ %
-
……& '
Mathf
……' ,
.
……, -
Infinity
……- 5
;
……5 6
minDescender
   $
=
  % &
Mathf
  ' ,
.
  , -
Infinity
  - 5
;
  5 6
}
ÃÃ 
}
ÕÕ 
}
–– 
}
—— 	
void
ÿÿ 
DrawLineBounds
ÿÿ 
(
ÿÿ 
)
ÿÿ 
{
ŸŸ 	
int
⁄⁄ 
	lineCount
⁄⁄ 
=
⁄⁄ 

m_TextInfo
⁄⁄ &
.
⁄⁄& '
	lineCount
⁄⁄' 0
;
⁄⁄0 1
for
‹‹ 
(
‹‹ 
int
‹‹ 
i
‹‹ 
=
‹‹ 
$num
‹‹ 
;
‹‹ 
i
‹‹ 
<
‹‹ 
	lineCount
‹‹  )
;
‹‹) *
i
‹‹+ ,
++
‹‹, .
)
‹‹. /
{
›› 
TMP_LineInfo
ﬁﬁ 
lineInfo
ﬁﬁ %
=
ﬁﬁ& '

m_TextInfo
ﬁﬁ( 2
.
ﬁﬁ2 3
lineInfo
ﬁﬁ3 ;
[
ﬁﬁ; <
i
ﬁﬁ< =
]
ﬁﬁ= >
;
ﬁﬁ> ?
TMP_CharacterInfo
ﬂﬂ ! 
firstCharacterInfo
ﬂﬂ" 4
=
ﬂﬂ5 6

m_TextInfo
ﬂﬂ7 A
.
ﬂﬂA B
characterInfo
ﬂﬂB O
[
ﬂﬂO P
lineInfo
ﬂﬂP X
.
ﬂﬂX Y!
firstCharacterIndex
ﬂﬂY l
]
ﬂﬂl m
;
ﬂﬂm n
TMP_CharacterInfo
‡‡ !
lastCharacterInfo
‡‡" 3
=
‡‡4 5

m_TextInfo
‡‡6 @
.
‡‡@ A
characterInfo
‡‡A N
[
‡‡N O
lineInfo
‡‡O W
.
‡‡W X 
lastCharacterIndex
‡‡X j
]
‡‡j k
;
‡‡k l
bool
‚‚ 
isLineVisible
‚‚ "
=
‚‚# $
(
‚‚% &
lineInfo
‚‚& .
.
‚‚. /
characterCount
‚‚/ =
==
‚‚> @
$num
‚‚A B
&&
‚‚C E
(
‚‚F G 
firstCharacterInfo
‚‚G Y
.
‚‚Y Z
	character
‚‚Z c
==
‚‚d f
$num
‚‚g i
||
‚‚j l 
firstCharacterInfo
‚‚m 
.‚‚ Ä
	character‚‚Ä â
==‚‚ä å
$num‚‚ç è
||‚‚ê í"
firstCharacterInfo‚‚ì •
.‚‚• ¶
	character‚‚¶ Ø
==‚‚∞ ≤
$num‚‚≥ π
||‚‚∫ º"
firstCharacterInfo‚‚Ω œ
.‚‚œ –
	character‚‚– Ÿ
==‚‚⁄ ‹
$num‚‚› „
)‚‚„ ‰
)‚‚‰ Â
||‚‚Ê Ë
i
„„& '
>
„„( )
m_TextComponent
„„* 9
.
„„9 :
maxVisibleLines
„„: I
||
„„J L
(
‰‰% &
m_TextComponent
‰‰& 5
.
‰‰5 6
overflowMode
‰‰6 B
==
‰‰C E
TextOverflowModes
‰‰F W
.
‰‰W X
Page
‰‰X \
&&
‰‰] _ 
firstCharacterInfo
‰‰` r
.
‰‰r s

pageNumber
‰‰s }
+
‰‰~ 
$num‰‰Ä Å
!=‰‰Ç Ñ
m_TextComponent‰‰Ö î
.‰‰î ï
pageToDisplay‰‰ï ¢
)‰‰¢ £
?‰‰§ •
false‰‰¶ ´
:‰‰¨ ≠
true‰‰Æ ≤
;‰‰≤ ≥
if
ÊÊ 
(
ÊÊ 
!
ÊÊ 
isLineVisible
ÊÊ "
)
ÊÊ" #
continue
ÊÊ$ ,
;
ÊÊ, -
float
ËË 
lineBottomLeft
ËË $
=
ËË% & 
firstCharacterInfo
ËË' 9
.
ËË9 :

bottomLeft
ËË: D
.
ËËD E
x
ËËE F
;
ËËF G
float
ÈÈ 
lineTopRight
ÈÈ "
=
ÈÈ# $
lastCharacterInfo
ÈÈ% 6
.
ÈÈ6 7
topRight
ÈÈ7 ?
.
ÈÈ? @
x
ÈÈ@ A
;
ÈÈA B
float
ÎÎ 

ascentline
ÎÎ  
=
ÎÎ! "
lineInfo
ÎÎ# +
.
ÎÎ+ ,
ascender
ÎÎ, 4
;
ÎÎ4 5
float
ÏÏ 
baseline
ÏÏ 
=
ÏÏ  
lineInfo
ÏÏ! )
.
ÏÏ) *
baseline
ÏÏ* 2
;
ÏÏ2 3
float
ÌÌ 
descentline
ÌÌ !
=
ÌÌ" #
lineInfo
ÌÌ$ ,
.
ÌÌ, -
	descender
ÌÌ- 6
;
ÌÌ6 7
float
ÔÔ 
dottedLineSize
ÔÔ $
=
ÔÔ% &
$num
ÔÔ' )
;
ÔÔ) *!
DrawDottedRectangle
ÚÚ #
(
ÚÚ# $
m_Transform
ÚÚ$ /
.
ÚÚ/ 0
TransformPoint
ÚÚ0 >
(
ÚÚ> ?
lineInfo
ÚÚ? G
.
ÚÚG H
lineExtents
ÚÚH S
.
ÚÚS T
min
ÚÚT W
)
ÚÚW X
,
ÚÚX Y
m_Transform
ÚÚZ e
.
ÚÚe f
TransformPoint
ÚÚf t
(
ÚÚt u
lineInfo
ÚÚu }
.
ÚÚ} ~
lineExtentsÚÚ~ â
.ÚÚâ ä
maxÚÚä ç
)ÚÚç é
,ÚÚé è
ColorÚÚê ï
.ÚÚï ñ
greenÚÚñ õ
,ÚÚõ ú
$numÚÚù û
)ÚÚû ü
;ÚÚü †
Vector3
ıı 
ascentlineStart
ıı '
=
ıı( )
m_Transform
ıı* 5
.
ıı5 6
TransformPoint
ıı6 D
(
ııD E
new
ııE H
Vector3
ııI P
(
ııP Q
lineBottomLeft
ııQ _
,
ıı_ `

ascentline
ııa k
,
ıık l
$num
ıım n
)
ıın o
)
ııo p
;
ııp q
Vector3
ˆˆ 
ascentlineEnd
ˆˆ %
=
ˆˆ& '
m_Transform
ˆˆ( 3
.
ˆˆ3 4
TransformPoint
ˆˆ4 B
(
ˆˆB C
new
ˆˆC F
Vector3
ˆˆG N
(
ˆˆN O
lineTopRight
ˆˆO [
,
ˆˆ[ \

ascentline
ˆˆ] g
,
ˆˆg h
$num
ˆˆi j
)
ˆˆj k
)
ˆˆk l
;
ˆˆl m
Handles
¯¯ 
.
¯¯ 
color
¯¯ 
=
¯¯ 
Color
¯¯  %
.
¯¯% &
yellow
¯¯& ,
;
¯¯, -
Handles
˘˘ 
.
˘˘ 
DrawDottedLine
˘˘ &
(
˘˘& '
ascentlineStart
˘˘' 6
,
˘˘6 7
ascentlineEnd
˘˘8 E
,
˘˘E F
dottedLineSize
˘˘G U
)
˘˘U V
;
˘˘V W
Vector3
¸¸ 
baseLineStart
¸¸ %
=
¸¸& '
m_Transform
¸¸( 3
.
¸¸3 4
TransformPoint
¸¸4 B
(
¸¸B C
new
¸¸C F
Vector3
¸¸G N
(
¸¸N O
lineBottomLeft
¸¸O ]
,
¸¸] ^
baseline
¸¸_ g
,
¸¸g h
$num
¸¸i j
)
¸¸j k
)
¸¸k l
;
¸¸l m
Vector3
˝˝ 
baseLineEnd
˝˝ #
=
˝˝$ %
m_Transform
˝˝& 1
.
˝˝1 2
TransformPoint
˝˝2 @
(
˝˝@ A
new
˝˝A D
Vector3
˝˝E L
(
˝˝L M
lineTopRight
˝˝M Y
,
˝˝Y Z
baseline
˝˝[ c
,
˝˝c d
$num
˝˝e f
)
˝˝f g
)
˝˝g h
;
˝˝h i
Handles
ˇˇ 
.
ˇˇ 
color
ˇˇ 
=
ˇˇ 
Color
ˇˇ  %
.
ˇˇ% &
yellow
ˇˇ& ,
;
ˇˇ, -
Handles
ÄÄ 
.
ÄÄ 
DrawDottedLine
ÄÄ &
(
ÄÄ& '
baseLineStart
ÄÄ' 4
,
ÄÄ4 5
baseLineEnd
ÄÄ6 A
,
ÄÄA B
dottedLineSize
ÄÄC Q
)
ÄÄQ R
;
ÄÄR S
Vector3
ÉÉ 
descentLineStart
ÉÉ (
=
ÉÉ) *
m_Transform
ÉÉ+ 6
.
ÉÉ6 7
TransformPoint
ÉÉ7 E
(
ÉÉE F
new
ÉÉF I
Vector3
ÉÉJ Q
(
ÉÉQ R
lineBottomLeft
ÉÉR `
,
ÉÉ` a
descentline
ÉÉb m
,
ÉÉm n
$num
ÉÉo p
)
ÉÉp q
)
ÉÉq r
;
ÉÉr s
Vector3
ÑÑ 
descentLineEnd
ÑÑ &
=
ÑÑ' (
m_Transform
ÑÑ) 4
.
ÑÑ4 5
TransformPoint
ÑÑ5 C
(
ÑÑC D
new
ÑÑD G
Vector3
ÑÑH O
(
ÑÑO P
lineTopRight
ÑÑP \
,
ÑÑ\ ]
descentline
ÑÑ^ i
,
ÑÑi j
$num
ÑÑk l
)
ÑÑl m
)
ÑÑm n
;
ÑÑn o
Handles
ÜÜ 
.
ÜÜ 
color
ÜÜ 
=
ÜÜ 
Color
ÜÜ  %
.
ÜÜ% &
yellow
ÜÜ& ,
;
ÜÜ, -
Handles
áá 
.
áá 
DrawDottedLine
áá &
(
áá& '
descentLineStart
áá' 7
,
áá7 8
descentLineEnd
áá9 G
,
ááG H
dottedLineSize
ááI W
)
ááW X
;
ááX Y
if
ää 
(
ää 
m_HandleSize
ää  
<
ää! "
$num
ää# '
)
ää' (
{
ãã 
GUIStyle
åå 
style
åå "
=
åå# $
new
åå% (
GUIStyle
åå) 1
(
åå1 2
)
åå2 3
;
åå3 4
style
çç 
.
çç 
normal
çç  
.
çç  !
	textColor
çç! *
=
çç+ ,
new
çç- 0
Color
çç1 6
(
çç6 7
$num
çç7 ;
,
çç; <
$num
çç= A
,
ççA B
$num
ççC G
,
ççG H
$num
ççI M
)
ççM N
;
ççN O
style
éé 
.
éé 
fontSize
éé "
=
éé# $
$num
éé% '
;
éé' (
style
èè 
.
èè 

fixedWidth
èè $
=
èè% &
$num
èè' *
;
èè* +
style
êê 
.
êê 
fixedHeight
êê %
=
êê& '
$num
êê( *
;
êê* +
Vector3
ëë 
labelPosition
ëë )
;
ëë) *
labelPosition
îî !
=
îî" #
m_Transform
îî$ /
.
îî/ 0
TransformPoint
îî0 >
(
îî> ?
new
îî? B
Vector3
îîC J
(
îîJ K
lineBottomLeft
îîK Y
,
îîY Z

ascentline
îî[ e
,
îîe f
$num
îîg h
)
îîh i
)
îîi j
;
îîj k
style
ïï 
.
ïï 
padding
ïï !
=
ïï" #
new
ïï$ '

RectOffset
ïï( 2
(
ïï2 3
$num
ïï3 4
,
ïï4 5
$num
ïï6 8
,
ïï8 9
$num
ïï: ;
,
ïï; <
$num
ïï= >
)
ïï> ?
;
ïï? @
style
ññ 
.
ññ 
	alignment
ññ #
=
ññ$ %

TextAnchor
ññ& 0
.
ññ0 1
MiddleRight
ññ1 <
;
ññ< =
Handles
óó 
.
óó 
Label
óó !
(
óó! "
labelPosition
óó" /
,
óó/ 0
$str
óó1 >
,
óó> ?
style
óó@ E
)
óóE F
;
óóF G
labelPosition
öö !
=
öö" #
m_Transform
öö$ /
.
öö/ 0
TransformPoint
öö0 >
(
öö> ?
new
öö? B
Vector3
ööC J
(
ööJ K
lineBottomLeft
ööK Y
,
ööY Z
baseline
öö[ c
,
ööc d
$num
ööe f
)
ööf g
)
öög h
;
ööh i
Handles
õõ 
.
õõ 
Label
õõ !
(
õõ! "
labelPosition
õõ" /
,
õõ/ 0
$str
õõ1 <
,
õõ< =
style
õõ> C
)
õõC D
;
õõD E
labelPosition
ûû !
=
ûû" #
m_Transform
ûû$ /
.
ûû/ 0
TransformPoint
ûû0 >
(
ûû> ?
new
ûû? B
Vector3
ûûC J
(
ûûJ K
lineBottomLeft
ûûK Y
,
ûûY Z
descentline
ûû[ f
,
ûûf g
$num
ûûh i
)
ûûi j
)
ûûj k
;
ûûk l
Handles
üü 
.
üü 
Label
üü !
(
üü! "
labelPosition
üü" /
,
üü/ 0
$str
üü1 ?
,
üü? @
style
üüA F
)
üüF G
;
üüG H
}
†† 
}
°° 
}
¢¢ 	
void
®® 

DrawBounds
®® 
(
®® 
)
®® 
{
©© 	
Bounds
™™ 

meshBounds
™™ 
=
™™ 
m_TextComponent
™™  /
.
™™/ 0
bounds
™™0 6
;
™™6 7
Vector3
≠≠ 

bottomLeft
≠≠ 
=
≠≠  
m_TextComponent
≠≠! 0
.
≠≠0 1
	transform
≠≠1 :
.
≠≠: ;
position
≠≠; C
+
≠≠D E

meshBounds
≠≠F P
.
≠≠P Q
min
≠≠Q T
;
≠≠T U
Vector3
ÆÆ 
topRight
ÆÆ 
=
ÆÆ 
m_TextComponent
ÆÆ .
.
ÆÆ. /
	transform
ÆÆ/ 8
.
ÆÆ8 9
position
ÆÆ9 A
+
ÆÆB C

meshBounds
ÆÆD N
.
ÆÆN O
max
ÆÆO R
;
ÆÆR S
DrawRectangle
∞∞ 
(
∞∞ 

bottomLeft
∞∞ $
,
∞∞$ %
topRight
∞∞& .
,
∞∞. /
new
∞∞0 3
Color
∞∞4 9
(
∞∞9 :
$num
∞∞: ;
,
∞∞; <
$num
∞∞= A
,
∞∞A B
$num
∞∞C D
)
∞∞D E
)
∞∞E F
;
∞∞F G
}
±± 	
void
¥¥ 
DrawTextBounds
¥¥ 
(
¥¥ 
)
¥¥ 
{
µµ 	
Bounds
∂∂ 

textBounds
∂∂ 
=
∂∂ 
m_TextComponent
∂∂  /
.
∂∂/ 0

textBounds
∂∂0 :
;
∂∂: ;
Vector3
∏∏ 

bottomLeft
∏∏ 
=
∏∏  
m_TextComponent
∏∏! 0
.
∏∏0 1
	transform
∏∏1 :
.
∏∏: ;
position
∏∏; C
+
∏∏D E
(
∏∏F G

textBounds
∏∏G Q
.
∏∏Q R
center
∏∏R X
-
∏∏Y Z

textBounds
∏∏[ e
.
∏∏e f
extents
∏∏f m
)
∏∏m n
;
∏∏n o
Vector3
ππ 
topRight
ππ 
=
ππ 
m_TextComponent
ππ .
.
ππ. /
	transform
ππ/ 8
.
ππ8 9
position
ππ9 A
+
ππB C
(
ππD E

textBounds
ππE O
.
ππO P
center
ππP V
+
ππW X

textBounds
ππY c
.
ππc d
extents
ππd k
)
ππk l
;
ππl m
DrawRectangle
ªª 
(
ªª 

bottomLeft
ªª $
,
ªª$ %
topRight
ªª& .
,
ªª. /
new
ªª0 3
Color
ªª4 9
(
ªª9 :
$num
ªª: <
,
ªª< =
$num
ªª> B
,
ªªB C
$num
ªªD H
)
ªªH I
)
ªªI J
;
ªªJ K
}
ºº 	
void
¿¿ 
DrawRectangle
¿¿ 
(
¿¿ 
Vector3
¿¿ "
BL
¿¿# %
,
¿¿% &
Vector3
¿¿' .
TR
¿¿/ 1
,
¿¿1 2
Color
¿¿3 8
color
¿¿9 >
)
¿¿> ?
{
¡¡ 	
Gizmos
¬¬ 
.
¬¬ 
color
¬¬ 
=
¬¬ 
color
¬¬  
;
¬¬  !
Gizmos
ƒƒ 
.
ƒƒ 
DrawLine
ƒƒ 
(
ƒƒ 
new
ƒƒ 
Vector3
ƒƒ  '
(
ƒƒ' (
BL
ƒƒ( *
.
ƒƒ* +
x
ƒƒ+ ,
,
ƒƒ, -
BL
ƒƒ. 0
.
ƒƒ0 1
y
ƒƒ1 2
,
ƒƒ2 3
$num
ƒƒ4 5
)
ƒƒ5 6
,
ƒƒ6 7
new
ƒƒ8 ;
Vector3
ƒƒ< C
(
ƒƒC D
BL
ƒƒD F
.
ƒƒF G
x
ƒƒG H
,
ƒƒH I
TR
ƒƒJ L
.
ƒƒL M
y
ƒƒM N
,
ƒƒN O
$num
ƒƒP Q
)
ƒƒQ R
)
ƒƒR S
;
ƒƒS T
Gizmos
≈≈ 
.
≈≈ 
DrawLine
≈≈ 
(
≈≈ 
new
≈≈ 
Vector3
≈≈  '
(
≈≈' (
BL
≈≈( *
.
≈≈* +
x
≈≈+ ,
,
≈≈, -
TR
≈≈. 0
.
≈≈0 1
y
≈≈1 2
,
≈≈2 3
$num
≈≈4 5
)
≈≈5 6
,
≈≈6 7
new
≈≈8 ;
Vector3
≈≈< C
(
≈≈C D
TR
≈≈D F
.
≈≈F G
x
≈≈G H
,
≈≈H I
TR
≈≈J L
.
≈≈L M
y
≈≈M N
,
≈≈N O
$num
≈≈P Q
)
≈≈Q R
)
≈≈R S
;
≈≈S T
Gizmos
∆∆ 
.
∆∆ 
DrawLine
∆∆ 
(
∆∆ 
new
∆∆ 
Vector3
∆∆  '
(
∆∆' (
TR
∆∆( *
.
∆∆* +
x
∆∆+ ,
,
∆∆, -
TR
∆∆. 0
.
∆∆0 1
y
∆∆1 2
,
∆∆2 3
$num
∆∆4 5
)
∆∆5 6
,
∆∆6 7
new
∆∆8 ;
Vector3
∆∆< C
(
∆∆C D
TR
∆∆D F
.
∆∆F G
x
∆∆G H
,
∆∆H I
BL
∆∆J L
.
∆∆L M
y
∆∆M N
,
∆∆N O
$num
∆∆P Q
)
∆∆Q R
)
∆∆R S
;
∆∆S T
Gizmos
«« 
.
«« 
DrawLine
«« 
(
«« 
new
«« 
Vector3
««  '
(
««' (
TR
««( *
.
««* +
x
««+ ,
,
««, -
BL
««. 0
.
««0 1
y
««1 2
,
««2 3
$num
««4 5
)
««5 6
,
««6 7
new
««8 ;
Vector3
««< C
(
««C D
BL
««D F
.
««F G
x
««G H
,
««H I
BL
««J L
.
««L M
y
««M N
,
««N O
$num
««P Q
)
««Q R
)
««R S
;
««S T
}
»» 	
void
   !
DrawDottedRectangle
    
(
    !
Vector3
  ! (

bottomLeft
  ) 3
,
  3 4
Vector3
  5 <
topRight
  = E
,
  E F
Color
  G L
color
  M R
,
  R S
float
  T Y
size
  Z ^
=
  _ `
$num
  a e
)
  e f
{
ÀÀ 	
Handles
ÃÃ 
.
ÃÃ 
color
ÃÃ 
=
ÃÃ 
color
ÃÃ !
;
ÃÃ! "
Handles
ÕÕ 
.
ÕÕ 
DrawDottedLine
ÕÕ "
(
ÕÕ" #

bottomLeft
ÕÕ# -
,
ÕÕ- .
new
ÕÕ/ 2
Vector3
ÕÕ3 :
(
ÕÕ: ;

bottomLeft
ÕÕ; E
.
ÕÕE F
x
ÕÕF G
,
ÕÕG H
topRight
ÕÕI Q
.
ÕÕQ R
y
ÕÕR S
,
ÕÕS T

bottomLeft
ÕÕU _
.
ÕÕ_ `
z
ÕÕ` a
)
ÕÕa b
,
ÕÕb c
size
ÕÕd h
)
ÕÕh i
;
ÕÕi j
Handles
ŒŒ 
.
ŒŒ 
DrawDottedLine
ŒŒ "
(
ŒŒ" #
new
ŒŒ# &
Vector3
ŒŒ' .
(
ŒŒ. /

bottomLeft
ŒŒ/ 9
.
ŒŒ9 :
x
ŒŒ: ;
,
ŒŒ; <
topRight
ŒŒ= E
.
ŒŒE F
y
ŒŒF G
,
ŒŒG H

bottomLeft
ŒŒI S
.
ŒŒS T
z
ŒŒT U
)
ŒŒU V
,
ŒŒV W
topRight
ŒŒX `
,
ŒŒ` a
size
ŒŒb f
)
ŒŒf g
;
ŒŒg h
Handles
œœ 
.
œœ 
DrawDottedLine
œœ "
(
œœ" #
topRight
œœ# +
,
œœ+ ,
new
œœ- 0
Vector3
œœ1 8
(
œœ8 9
topRight
œœ9 A
.
œœA B
x
œœB C
,
œœC D

bottomLeft
œœE O
.
œœO P
y
œœP Q
,
œœQ R

bottomLeft
œœS ]
.
œœ] ^
z
œœ^ _
)
œœ_ `
,
œœ` a
size
œœb f
)
œœf g
;
œœg h
Handles
–– 
.
–– 
DrawDottedLine
–– "
(
––" #
new
––# &
Vector3
––' .
(
––. /
topRight
––/ 7
.
––7 8
x
––8 9
,
––9 :

bottomLeft
––; E
.
––E F
y
––F G
,
––G H

bottomLeft
––I S
.
––S T
z
––T U
)
––U V
,
––V W

bottomLeft
––X b
,
––b c
size
––d h
)
––h i
;
––i j
}
—— 	
void
””  
DrawSolidRectangle
”” 
(
””  
Vector3
””  '

bottomLeft
””( 2
,
””2 3
Vector3
””4 ;
topRight
””< D
,
””D E
Color
””F K
color
””L Q
,
””Q R
float
””S X
size
””Y ]
=
””^ _
$num
””` d
)
””d e
{
‘‘ 	
Handles
’’ 
.
’’ 
color
’’ 
=
’’ 
color
’’ !
;
’’! "
Rect
÷÷ 
rect
÷÷ 
=
÷÷ 
new
÷÷ 
Rect
÷÷  
(
÷÷  !

bottomLeft
÷÷! +
,
÷÷+ ,
topRight
÷÷- 5
-
÷÷6 7

bottomLeft
÷÷8 B
)
÷÷B C
;
÷÷C D
Handles
◊◊ 
.
◊◊ +
DrawSolidRectangleWithOutline
◊◊ 1
(
◊◊1 2
rect
◊◊2 6
,
◊◊6 7
color
◊◊8 =
,
◊◊= >
Color
◊◊? D
.
◊◊D E
black
◊◊E J
)
◊◊J K
;
◊◊K L
}
ÿÿ 	
void
⁄⁄ 

DrawSquare
⁄⁄ 
(
⁄⁄ 
Vector3
⁄⁄ 
position
⁄⁄  (
,
⁄⁄( )
float
⁄⁄* /
size
⁄⁄0 4
,
⁄⁄4 5
Color
⁄⁄6 ;
color
⁄⁄< A
)
⁄⁄A B
{
€€ 	
Handles
‹‹ 
.
‹‹ 
color
‹‹ 
=
‹‹ 
color
‹‹ !
;
‹‹! "
Vector3
›› 

bottomLeft
›› 
=
››  
new
››! $
Vector3
››% ,
(
››, -
position
››- 5
.
››5 6
x
››6 7
-
››8 9
size
››: >
,
››> ?
position
››@ H
.
››H I
y
››I J
-
››K L
size
››M Q
,
››Q R
position
››S [
.
››[ \
z
››\ ]
)
››] ^
;
››^ _
Vector3
ﬁﬁ 
topLeft
ﬁﬁ 
=
ﬁﬁ 
new
ﬁﬁ !
Vector3
ﬁﬁ" )
(
ﬁﬁ) *
position
ﬁﬁ* 2
.
ﬁﬁ2 3
x
ﬁﬁ3 4
-
ﬁﬁ5 6
size
ﬁﬁ7 ;
,
ﬁﬁ; <
position
ﬁﬁ= E
.
ﬁﬁE F
y
ﬁﬁF G
+
ﬁﬁH I
size
ﬁﬁJ N
,
ﬁﬁN O
position
ﬁﬁP X
.
ﬁﬁX Y
z
ﬁﬁY Z
)
ﬁﬁZ [
;
ﬁﬁ[ \
Vector3
ﬂﬂ 
topRight
ﬂﬂ 
=
ﬂﬂ 
new
ﬂﬂ "
Vector3
ﬂﬂ# *
(
ﬂﬂ* +
position
ﬂﬂ+ 3
.
ﬂﬂ3 4
x
ﬂﬂ4 5
+
ﬂﬂ6 7
size
ﬂﬂ8 <
,
ﬂﬂ< =
position
ﬂﬂ> F
.
ﬂﬂF G
y
ﬂﬂG H
+
ﬂﬂI J
size
ﬂﬂK O
,
ﬂﬂO P
position
ﬂﬂQ Y
.
ﬂﬂY Z
z
ﬂﬂZ [
)
ﬂﬂ[ \
;
ﬂﬂ\ ]
Vector3
‡‡ 
bottomRight
‡‡ 
=
‡‡  !
new
‡‡" %
Vector3
‡‡& -
(
‡‡- .
position
‡‡. 6
.
‡‡6 7
x
‡‡7 8
+
‡‡9 :
size
‡‡; ?
,
‡‡? @
position
‡‡A I
.
‡‡I J
y
‡‡J K
-
‡‡L M
size
‡‡N R
,
‡‡R S
position
‡‡T \
.
‡‡\ ]
z
‡‡] ^
)
‡‡^ _
;
‡‡_ `
Handles
‚‚ 
.
‚‚ 
DrawLine
‚‚ 
(
‚‚ 

bottomLeft
‚‚ '
,
‚‚' (
topLeft
‚‚) 0
)
‚‚0 1
;
‚‚1 2
Handles
„„ 
.
„„ 
DrawLine
„„ 
(
„„ 
topLeft
„„ $
,
„„$ %
topRight
„„& .
)
„„. /
;
„„/ 0
Handles
‰‰ 
.
‰‰ 
DrawLine
‰‰ 
(
‰‰ 
topRight
‰‰ %
,
‰‰% &
bottomRight
‰‰' 2
)
‰‰2 3
;
‰‰3 4
Handles
ÂÂ 
.
ÂÂ 
DrawLine
ÂÂ 
(
ÂÂ 
bottomRight
ÂÂ (
,
ÂÂ( )

bottomLeft
ÂÂ* 4
)
ÂÂ4 5
;
ÂÂ5 6
}
ÊÊ 	
void
ËË 
DrawCrosshair
ËË 
(
ËË 
Vector3
ËË "
position
ËË# +
,
ËË+ ,
float
ËË- 2
size
ËË3 7
,
ËË7 8
Color
ËË9 >
color
ËË? D
)
ËËD E
{
ÈÈ 	
Handles
ÍÍ 
.
ÍÍ 
color
ÍÍ 
=
ÍÍ 
color
ÍÍ !
;
ÍÍ! "
Handles
ÏÏ 
.
ÏÏ 
DrawLine
ÏÏ 
(
ÏÏ 
new
ÏÏ  
Vector3
ÏÏ! (
(
ÏÏ( )
position
ÏÏ) 1
.
ÏÏ1 2
x
ÏÏ2 3
-
ÏÏ4 5
size
ÏÏ6 :
,
ÏÏ: ;
position
ÏÏ< D
.
ÏÏD E
y
ÏÏE F
,
ÏÏF G
position
ÏÏH P
.
ÏÏP Q
z
ÏÏQ R
)
ÏÏR S
,
ÏÏS T
new
ÏÏU X
Vector3
ÏÏY `
(
ÏÏ` a
position
ÏÏa i
.
ÏÏi j
x
ÏÏj k
+
ÏÏl m
size
ÏÏn r
,
ÏÏr s
position
ÏÏt |
.
ÏÏ| }
y
ÏÏ} ~
,
ÏÏ~ 
positionÏÏÄ à
.ÏÏà â
zÏÏâ ä
)ÏÏä ã
)ÏÏã å
;ÏÏå ç
Handles
ÌÌ 
.
ÌÌ 
DrawLine
ÌÌ 
(
ÌÌ 
new
ÌÌ  
Vector3
ÌÌ! (
(
ÌÌ( )
position
ÌÌ) 1
.
ÌÌ1 2
x
ÌÌ2 3
,
ÌÌ3 4
position
ÌÌ5 =
.
ÌÌ= >
y
ÌÌ> ?
-
ÌÌ@ A
size
ÌÌB F
,
ÌÌF G
position
ÌÌH P
.
ÌÌP Q
z
ÌÌQ R
)
ÌÌR S
,
ÌÌS T
new
ÌÌU X
Vector3
ÌÌY `
(
ÌÌ` a
position
ÌÌa i
.
ÌÌi j
x
ÌÌj k
,
ÌÌk l
position
ÌÌm u
.
ÌÌu v
y
ÌÌv w
+
ÌÌx y
size
ÌÌz ~
,
ÌÌ~ 
positionÌÌÄ à
.ÌÌà â
zÌÌâ ä
)ÌÌä ã
)ÌÌã å
;ÌÌå ç
}
ÓÓ 	
void
ÚÚ 
DrawRectangle
ÚÚ 
(
ÚÚ 
Vector3
ÚÚ "
bl
ÚÚ# %
,
ÚÚ% &
Vector3
ÚÚ' .
tl
ÚÚ/ 1
,
ÚÚ1 2
Vector3
ÚÚ3 :
tr
ÚÚ; =
,
ÚÚ= >
Vector3
ÚÚ? F
br
ÚÚG I
,
ÚÚI J
Color
ÚÚK P
color
ÚÚQ V
)
ÚÚV W
{
ÛÛ 	
Gizmos
ÙÙ 
.
ÙÙ 
color
ÙÙ 
=
ÙÙ 
color
ÙÙ  
;
ÙÙ  !
Gizmos
ˆˆ 
.
ˆˆ 
DrawLine
ˆˆ 
(
ˆˆ 
bl
ˆˆ 
,
ˆˆ 
tl
ˆˆ  "
)
ˆˆ" #
;
ˆˆ# $
Gizmos
˜˜ 
.
˜˜ 
DrawLine
˜˜ 
(
˜˜ 
tl
˜˜ 
,
˜˜ 
tr
˜˜  "
)
˜˜" #
;
˜˜# $
Gizmos
¯¯ 
.
¯¯ 
DrawLine
¯¯ 
(
¯¯ 
tr
¯¯ 
,
¯¯ 
br
¯¯  "
)
¯¯" #
;
¯¯# $
Gizmos
˘˘ 
.
˘˘ 
DrawLine
˘˘ 
(
˘˘ 
br
˘˘ 
,
˘˘ 
bl
˘˘  "
)
˘˘" #
;
˘˘# $
}
˙˙ 	
void
˛˛ !
DrawDottedRectangle
˛˛  
(
˛˛  !
Vector3
˛˛! (
bl
˛˛) +
,
˛˛+ ,
Vector3
˛˛- 4
tl
˛˛5 7
,
˛˛7 8
Vector3
˛˛9 @
tr
˛˛A C
,
˛˛C D
Vector3
˛˛E L
br
˛˛M O
,
˛˛O P
Color
˛˛Q V
color
˛˛W \
)
˛˛\ ]
{
ˇˇ 	
var
ÄÄ 
cam
ÄÄ 
=
ÄÄ 
Camera
ÄÄ 
.
ÄÄ 
current
ÄÄ $
;
ÄÄ$ %
float
ÅÅ 

dotSpacing
ÅÅ 
=
ÅÅ 
(
ÅÅ  
cam
ÅÅ  #
.
ÅÅ# $ 
WorldToScreenPoint
ÅÅ$ 6
(
ÅÅ6 7
br
ÅÅ7 9
)
ÅÅ9 :
.
ÅÅ: ;
x
ÅÅ; <
-
ÅÅ= >
cam
ÅÅ? B
.
ÅÅB C 
WorldToScreenPoint
ÅÅC U
(
ÅÅU V
bl
ÅÅV X
)
ÅÅX Y
.
ÅÅY Z
x
ÅÅZ [
)
ÅÅ[ \
/
ÅÅ] ^
$num
ÅÅ_ b
;
ÅÅb c
UnityEditor
ÇÇ 
.
ÇÇ 
Handles
ÇÇ 
.
ÇÇ  
color
ÇÇ  %
=
ÇÇ& '
color
ÇÇ( -
;
ÇÇ- .
UnityEditor
ÑÑ 
.
ÑÑ 
Handles
ÑÑ 
.
ÑÑ  
DrawDottedLine
ÑÑ  .
(
ÑÑ. /
bl
ÑÑ/ 1
,
ÑÑ1 2
tl
ÑÑ3 5
,
ÑÑ5 6

dotSpacing
ÑÑ7 A
)
ÑÑA B
;
ÑÑB C
UnityEditor
ÖÖ 
.
ÖÖ 
Handles
ÖÖ 
.
ÖÖ  
DrawDottedLine
ÖÖ  .
(
ÖÖ. /
tl
ÖÖ/ 1
,
ÖÖ1 2
tr
ÖÖ3 5
,
ÖÖ5 6

dotSpacing
ÖÖ7 A
)
ÖÖA B
;
ÖÖB C
UnityEditor
ÜÜ 
.
ÜÜ 
Handles
ÜÜ 
.
ÜÜ  
DrawDottedLine
ÜÜ  .
(
ÜÜ. /
tr
ÜÜ/ 1
,
ÜÜ1 2
br
ÜÜ3 5
,
ÜÜ5 6

dotSpacing
ÜÜ7 A
)
ÜÜA B
;
ÜÜB C
UnityEditor
áá 
.
áá 
Handles
áá 
.
áá  
DrawDottedLine
áá  .
(
áá. /
br
áá/ 1
,
áá1 2
bl
áá3 5
,
áá5 6

dotSpacing
áá7 A
)
ááA B
;
ááB C
}
àà 	
}
ää 
}ãã ±3
hD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\Benchmark01.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class 
Benchmark01 
: 
MonoBehaviour ,
{		 
public 
int 
BenchmarkType  
=! "
$num# $
;$ %
public 
TMP_FontAsset 
	TMProFont &
;& '
public 
Font 
TextMeshFont  
;  !
private 
TextMeshPro 
m_textMeshPro )
;) *
private 
TextContainer 
m_textContainer -
;- .
private 
TextMesh 

m_textMesh #
;# $
private 
const 
string 
label01 $
=% &
$str' K
;K L
private 
const 
string 
label02 $
=% &
$str' N
;N O
private 
Material 
m_material01 %
;% &
private 
Material 
m_material02 %
;% &
IEnumerator 
Start 
( 
) 
{   	
if$$ 
($$ 
BenchmarkType$$ 
==$$  
$num$$! "
)$$" #
{%% 
m_textMeshPro&& 
=&& 

gameObject&&  *
.&&* +
AddComponent&&+ 7
<&&7 8
TextMeshPro&&8 C
>&&C D
(&&D E
)&&E F
;&&F G
m_textMeshPro'' 
.'' !
autoSizeTextContainer'' 3
=''4 5
true''6 :
;'': ;
if++ 
(++ 
	TMProFont++ 
!=++  
null++! %
)++% &
m_textMeshPro,, !
.,,! "
font,," &
=,,' (
	TMProFont,,) 2
;,,2 3
m_textMeshPro11 
.11 
fontSize11 &
=11' (
$num11) +
;11+ ,
m_textMeshPro22 
.22 
	alignment22 '
=22( ) 
TextAlignmentOptions22* >
.22> ?
Center22? E
;22E F
m_textMeshPro44 
.44 
extraPadding44 *
=44+ ,
true44- 1
;441 2
m_textMeshPro99 
.99 
enableWordWrapping99 0
=991 2
false993 8
;998 9
m_material01>> 
=>> 
m_textMeshPro>> ,
.>>, -
font>>- 1
.>>1 2
material>>2 :
;>>: ;
m_material02?? 
=?? 
	Resources?? (
.??( )
Load??) -
<??- .
Material??. 6
>??6 7
(??7 8
$str??8 l
)??l m
;??m n
}BB 
elseCC 
ifCC 
(CC 
BenchmarkTypeCC "
==CC# %
$numCC& '
)CC' (
{DD 

m_textMeshEE 
=EE 

gameObjectEE '
.EE' (
AddComponentEE( 4
<EE4 5
TextMeshEE5 =
>EE= >
(EE> ?
)EE? @
;EE@ A
ifGG 
(GG 
TextMeshFontGG  
!=GG! #
nullGG$ (
)GG( )
{HH 

m_textMeshII 
.II 
fontII #
=II$ %
TextMeshFontII& 2
;II2 3

m_textMeshJJ 
.JJ 
GetComponentJJ +
<JJ+ ,
RendererJJ, 4
>JJ4 5
(JJ5 6
)JJ6 7
.JJ7 8
sharedMaterialJJ8 F
=JJG H

m_textMeshJJI S
.JJS T
fontJJT X
.JJX Y
materialJJY a
;JJa b
}KK 
elseLL 
{MM 

m_textMeshNN 
.NN 
fontNN #
=NN$ %
	ResourcesNN& /
.NN/ 0
LoadNN0 4
(NN4 5
$strNN5 B
,NNB C
typeofNND J
(NNJ K
FontNNK O
)NNO P
)NNP Q
asNNR T
FontNNU Y
;NNY Z

m_textMeshOO 
.OO 
GetComponentOO +
<OO+ ,
RendererOO, 4
>OO4 5
(OO5 6
)OO6 7
.OO7 8
sharedMaterialOO8 F
=OOG H

m_textMeshOOI S
.OOS T
fontOOT X
.OOX Y
materialOOY a
;OOa b
}PP 

m_textMeshRR 
.RR 
fontSizeRR #
=RR$ %
$numRR& (
;RR( )

m_textMeshSS 
.SS 
anchorSS !
=SS" #

TextAnchorSS$ .
.SS. /
MiddleCenterSS/ ;
;SS; <
}VV 
forZZ 
(ZZ 
intZZ 
iZZ 
=ZZ 
$numZZ 
;ZZ 
iZZ 
<=ZZ  
$numZZ! (
;ZZ( )
iZZ* +
++ZZ+ -
)ZZ- .
{[[ 
if\\ 
(\\ 
BenchmarkType\\ !
==\\" $
$num\\% &
)\\& '
{]] 
m_textMeshPro^^ !
.^^! "
SetText^^" )
(^^) *
label01^^* 1
,^^1 2
i^^3 4
%^^5 6
$num^^7 ;
)^^; <
;^^< =
if__ 
(__ 
i__ 
%__ 
$num__  
==__! #
$num__$ '
)__' (
m_textMeshPro`` %
.``% &
fontSharedMaterial``& 8
=``9 :
m_textMeshPro``; H
.``H I
fontSharedMaterial``I [
==``\ ^
m_material01``_ k
?``l m
m_textMeshPro``n {
.``{ |
fontSharedMaterial	``| é
=
``è ê
m_material02
``ë ù
:
``û ü
m_textMeshPro
``† ≠
.
``≠ Æ 
fontSharedMaterial
``Æ ¿
=
``¡ ¬
m_material01
``√ œ
;
``œ –
}dd 
elseee 
ifee 
(ee 
BenchmarkTypeee &
==ee' )
$numee* +
)ee+ ,

m_textMeshff 
.ff 
textff #
=ff$ %
label02ff& -
+ff. /
(ff0 1
iff1 2
%ff3 4
$numff5 9
)ff9 :
.ff: ;
ToStringff; C
(ffC D
)ffD E
;ffE F
yieldhh 
returnhh 
nullhh !
;hh! "
}ii 
yieldll 
returnll 
nullll 
;ll 
}mm 	
} 
}ÄÄ π0
oD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\TextMesh Pro\Examples & Extras\Scripts\TMP_TextEventCheck.cs
	namespace 	
TMPro
 
. 
Examples 
{ 
public 

class 
TMP_TextEventCheck #
:$ %
MonoBehaviour& 3
{ 
public		  
TMP_TextEventHandler		 #
TextEventHandler		$ 4
;		4 5
private 
TMP_Text 
m_TextComponent (
;( )
void 
OnEnable 
( 
) 
{ 	
if 
( 
TextEventHandler  
!=! #
null$ (
)( )
{ 
m_TextComponent 
=  !
TextEventHandler" 2
.2 3
GetComponent3 ?
<? @
TMP_Text@ H
>H I
(I J
)J K
;K L
TextEventHandler  
.  ! 
onCharacterSelection! 5
.5 6
AddListener6 A
(A B 
OnCharacterSelectionB V
)V W
;W X
TextEventHandler  
.  !
onSpriteSelection! 2
.2 3
AddListener3 >
(> ?
OnSpriteSelection? P
)P Q
;Q R
TextEventHandler  
.  !
onWordSelection! 0
.0 1
AddListener1 <
(< =
OnWordSelection= L
)L M
;M N
TextEventHandler  
.  !
onLineSelection! 0
.0 1
AddListener1 <
(< =
OnLineSelection= L
)L M
;M N
TextEventHandler  
.  !
onLinkSelection! 0
.0 1
AddListener1 <
(< =
OnLinkSelection= L
)L M
;M N
} 
} 	
void 
	OnDisable 
( 
) 
{ 	
if 
( 
TextEventHandler  
!=! #
null$ (
)( )
{   
TextEventHandler!!  
.!!  ! 
onCharacterSelection!!! 5
.!!5 6
RemoveListener!!6 D
(!!D E 
OnCharacterSelection!!E Y
)!!Y Z
;!!Z [
TextEventHandler""  
.""  !
onSpriteSelection""! 2
.""2 3
RemoveListener""3 A
(""A B
OnSpriteSelection""B S
)""S T
;""T U
TextEventHandler##  
.##  !
onWordSelection##! 0
.##0 1
RemoveListener##1 ?
(##? @
OnWordSelection##@ O
)##O P
;##P Q
TextEventHandler$$  
.$$  !
onLineSelection$$! 0
.$$0 1
RemoveListener$$1 ?
($$? @
OnLineSelection$$@ O
)$$O P
;$$P Q
TextEventHandler%%  
.%%  !
onLinkSelection%%! 0
.%%0 1
RemoveListener%%1 ?
(%%? @
OnLinkSelection%%@ O
)%%O P
;%%P Q
}&& 
}'' 	
void**  
OnCharacterSelection** !
(**! "
char**" &
c**' (
,**( )
int*** -
index**. 3
)**3 4
{++ 	
Debug,, 
.,, 
Log,, 
(,, 
$str,, #
+,,$ %
c,,& '
+,,( )
$str,,* 8
+,,9 :
index,,; @
+,,A B
$str,,C X
),,X Y
;,,Y Z
}-- 	
void// 
OnSpriteSelection// 
(// 
char// #
c//$ %
,//% &
int//' *
index//+ 0
)//0 1
{00 	
Debug11 
.11 
Log11 
(11 
$str11  
+11! "
c11# $
+11% &
$str11' 5
+116 7
index118 =
+11> ?
$str11@ U
)11U V
;11V W
}22 	
void44 
OnWordSelection44 
(44 
string44 #
word44$ (
,44( )
int44* -
firstCharacterIndex44. A
,44A B
int44C F
length44G M
)44M N
{55 	
Debug66 
.66 
Log66 
(66 
$str66 
+66  
word66! %
+66& '
$str66( J
+66K L
firstCharacterIndex66M `
+66a b
$str66c t
+66u v
length66w }
+66~ 
$str
66Ä ï
)
66ï ñ
;
66ñ ó
}77 	
void99 
OnLineSelection99 
(99 
string99 #
lineText99$ ,
,99, -
int99. 1
firstCharacterIndex992 E
,99E F
int99G J
length99K Q
)99Q R
{:: 	
Debug;; 
.;; 
Log;; 
(;; 
$str;; 
+;;  
lineText;;! )
+;;* +
$str;;, N
+;;O P
firstCharacterIndex;;Q d
+;;e f
$str;;g x
+;;y z
length	;;{ Å
+
;;Ç É
$str
;;Ñ ô
)
;;ô ö
;
;;ö õ
}<< 	
void>> 
OnLinkSelection>> 
(>> 
string>> #
linkID>>$ *
,>>* +
string>>, 2
linkText>>3 ;
,>>; <
int>>= @
	linkIndex>>A J
)>>J K
{?? 	
if@@ 
(@@ 
m_TextComponent@@ 
!=@@  "
null@@# '
)@@' (
{AA 
TMP_LinkInfoBB 
linkInfoBB %
=BB& '
m_TextComponentBB( 7
.BB7 8
textInfoBB8 @
.BB@ A
linkInfoBBA I
[BBI J
	linkIndexBBJ S
]BBS T
;BBT U
}CC 
DebugEE 
.EE 
LogEE 
(EE 
$strEE $
+EE% &
	linkIndexEE' 0
+EE1 2
$strEE3 ?
+EE@ A
linkIDEEB H
+EEI J
$strEEK Z
+EE[ \
linkTextEE] e
+EEf g
$strEEh 
)	EE Ä
;
EEÄ Å
}FF 	
}HH 
}II ‰
WD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Stats\StatSystem\TypewriterEffect.cs
public 
class 
TypewriterEffect 
: 
MonoBehaviour  -
{ 
[ 
SerializeField 
] 
private 
float "
tyepwriterSpeed# 2
=3 4
$num5 8
;8 9
public

 

	Coroutine

 
Run

 
(

 
string

 

textToType

  *
,

* +
TMP_Text

, 4
	textLabel

5 >
)

> ?
{ 
return 
StartCoroutine 
( 
TypeText &
(& '

textToType' 1
,1 2
	textLabel3 <
)< =
)= >
;> ?
} 
private 
IEnumerator 
TypeText  
(  !
string! '

textToType( 2
,2 3
TMP_Text4 <
	textLabel= F
)F G
{ 
	textLabel 
. 
text 
= 
string 
.  
Empty  %
;% &
float 
t 
= 
$num 
; 
int 
	charIndex 
= 
$num 
; 
while 
( 
	charIndex 
< 

textToType %
.% &
Length& ,
), -
{ 	
t 
+= 
Time 
. 
	deltaTime 
*  !
tyepwriterSpeed" 1
;1 2
	charIndex 
= 
Mathf 
. 

FloorToInt (
(( )
t) *
)* +
;+ ,
	charIndex 
= 
Mathf 
. 
Clamp #
(# $
	charIndex$ -
,- .
$num/ 0
,0 1

textToType2 <
.< =
Length= C
)C D
;D E
	textLabel 
. 
text 
= 

textToType '
.' (
	Substring( 1
(1 2
$num2 3
,3 4
	charIndex5 >
)> ?
;? @
yield   
return   
null   
;   
}!! 	
	textLabel## 
.## 
text## 
=## 

textToType## #
;### $
}$$ 
}%% å
GD:\Users\baba_\Documents\GitHub\Group5Scrum\Assets\Scripts\LoadScene.cs
public 
class 
	LoadScene 
: 
MonoBehaviour &
{ 
public

 

string

 
scene

 
;

 
public 

void 
	StartGame 
( 
) 
{ 
SceneManager 
. 
	LoadScene 
( 
scene $
)$ %
;% &
} 
} 